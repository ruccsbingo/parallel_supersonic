# Makefile.in generated by automake 1.11.3 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.






pkgdatadir = $(datadir)/supersonic
pkgincludedir = $(includedir)/supersonic
pkglibdir = $(libdir)/supersonic
pkglibexecdir = $(libexecdir)/supersonic
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
TESTS = supersonic_guidetest$(EXEEXT) test_base_exception$(EXEEXT) \
	test_base_infrastructure$(EXEEXT) test_base_memory$(EXEEXT) \
	test_benchmark_dot$(EXEEXT) \
	test_benchmark_infrastructure$(EXEEXT) \
	test_benchmark_manager$(EXEEXT) test_cursor_base$(EXEEXT) \
	test_cursor_core$(EXEEXT) test_cursor_infrastructure$(EXEEXT) \
	test_expression_core$(EXEEXT) \
	test_expression_infrastructure$(EXEEXT) \
	test_expression_templated$(EXEEXT) \
	test_expression_vector$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1)
noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(libbenchmark_la_HEADERS) \
	$(libtestutils_la_HEADERS) \
	$(nobase_supersonic_include_HEADERS) $(noinst_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/config.h.in $(top_srcdir)/configure AUTHORS COPYING \
	ChangeLog INSTALL NEWS ar-lib compile config.guess config.sub \
	depcomp install-sh ltmain.sh missing mkinstalldirs
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_interlocked_exchange.m4 \
	$(top_srcdir)/m4/ac_rwlock.m4 $(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_boost_system.m4 \
	$(top_srcdir)/m4/ax_boost_timer.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_prefix_config_h.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(libbenchmark_ladir)" \
	"$(DESTDIR)$(libtestutils_ladir)" \
	"$(DESTDIR)$(supersonic_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libbenchmark_la_DEPENDENCIES =
am_libbenchmark_la_OBJECTS = libbenchmark_la-dot_drawer.lo \
	libbenchmark_la-common_utils.lo \
	libbenchmark_la-benchmark_listener.lo \
	libbenchmark_la-benchmark_transformer.lo \
	libbenchmark_la-cursor_statistics.lo libbenchmark_la-node.lo \
	libbenchmark_la-tree_builder.lo \
	libbenchmark_la-benchmark_manager.lo
libbenchmark_la_OBJECTS = $(am_libbenchmark_la_OBJECTS)
libbenchmark_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) \
	$(libbenchmark_la_LDFLAGS) $(LDFLAGS) -o $@
libsupersonic_la_DEPENDENCIES = libbenchmark.la
am__objects_1 =
am__objects_2 = $(am__objects_1) $(am__objects_1)
am__objects_3 = libsupersonic_la-stack_trace.pb.lo \
	libsupersonic_la-expressions.pb.lo \
	libsupersonic_la-types.pb.lo libsupersonic_la-benchmark.pb.lo \
	libsupersonic_la-cursors.pb.lo \
	libsupersonic_la-operators.pb.lo \
	libsupersonic_la-specification.pb.lo \
	libsupersonic_la-supersonic.pb.lo
am__objects_4 = $(am__objects_3) \
	libsupersonic_la-atomicops-internals-x86.lo \
	libsupersonic_la-bits.lo libsupersonic_la-demangle.lo \
	dynamic_annotations.lo libsupersonic_la-int128.lo \
	libsupersonic_la-mathlimits.lo libsupersonic_la-once.lo \
	libsupersonic_la-spinlock_wait.lo libsupersonic_la-strtoint.lo \
	libsupersonic_la-stringprintf.lo libsupersonic_la-locking.lo \
	libsupersonic_la-x86-gcc.lo libsupersonic_la-hash.lo \
	libsupersonic_la-stack_trace.lo libsupersonic_la-join.lo \
	libsupersonic_la-stringpiece.lo \
	libsupersonic_la-ascii_ctype.lo libsupersonic_la-charset.lo \
	libsupersonic_la-escaping.lo \
	libsupersonic_la-human_readable.lo libsupersonic_la-memutil.lo \
	libsupersonic_la-numbers.lo libsupersonic_la-serialize.lo \
	libsupersonic_la-split.lo libsupersonic_la-strcat.lo \
	libsupersonic_la-substitute.lo libsupersonic_la-strip.lo \
	libsupersonic_la-util.lo rune.lo libsupersonic_la-random.lo \
	libsupersonic_la-walltime.lo libsupersonic_la-file.lo \
	libsupersonic_la-file_util.lo libsupersonic_la-bit_pointers.lo \
	libsupersonic_la-block.lo libsupersonic_la-copy_column.lo \
	libsupersonic_la-double_buffered_block.lo \
	libsupersonic_la-projector.lo libsupersonic_la-tuple_schema.lo \
	libsupersonic_la-types_infrastructure.lo \
	libsupersonic_la-types.lo libsupersonic_la-view_copier.lo \
	libsupersonic_la-arena.lo libsupersonic_la-memory.lo \
	libsupersonic_la-cursor.lo libsupersonic_la-lookup_index.lo \
	libsupersonic_la-aggregate_clusters.lo \
	libsupersonic_la-aggregate_groups.lo \
	libsupersonic_la-aggregate_scalar.lo \
	libsupersonic_la-aggregator.lo libsupersonic_la-benchmarks.lo \
	libsupersonic_la-coalesce.lo \
	libsupersonic_la-column_aggregator.lo \
	libsupersonic_la-compute.lo libsupersonic_la-filter.lo \
	libsupersonic_la-foreign_filter.lo \
	libsupersonic_la-generate.lo libsupersonic_la-hash_join.lo \
	libsupersonic_la-hybrid_group_utils.lo \
	libsupersonic_la-limit.lo libsupersonic_la-merge_union_all.lo \
	libsupersonic_la-project.lo \
	libsupersonic_la-rowid_merge_join.lo \
	libsupersonic_la-scan_view.lo libsupersonic_la-sort.lo \
	libsupersonic_la-specification_builder.lo \
	libsupersonic_la-splitter.lo libsupersonic_la-spy.lo \
	libsupersonic_la-basic_cursor.lo \
	libsupersonic_la-basic_operation.lo \
	libsupersonic_la-file_io.lo libsupersonic_la-iterators.lo \
	libsupersonic_la-ordering.lo libsupersonic_la-row_hash_set.lo \
	libsupersonic_la-table.lo libsupersonic_la-view_cursor.lo \
	libsupersonic_la-view_printer.lo libsupersonic_la-writer.lo \
	libsupersonic_la-expression.lo \
	libsupersonic_la-arithmetic_bound_expressions.lo \
	libsupersonic_la-arithmetic_expressions.lo \
	libsupersonic_la-comparison_bound_expressions.lo \
	libsupersonic_la-comparison_expressions.lo \
	libsupersonic_la-date_bound_expressions.lo \
	libsupersonic_la-date_evaluators.lo \
	libsupersonic_la-date_expressions.lo \
	libsupersonic_la-elementary_bound_expressions.lo \
	libsupersonic_la-elementary_expressions.lo \
	libsupersonic_la-math_bound_expressions.lo \
	libsupersonic_la-math_expressions.lo \
	libsupersonic_la-projecting_bound_expressions.lo \
	libsupersonic_la-projecting_expressions.lo \
	libsupersonic_la-stateful_bound_expressions.lo \
	libsupersonic_la-stateful_expressions.lo \
	libsupersonic_la-string_bound_expressions.lo \
	libsupersonic_la-string_expressions.lo \
	libsupersonic_la-hashing_bound_expressions.lo \
	libsupersonic_la-hashing_expressions.lo \
	libsupersonic_la-basic_bound_expression.lo \
	libsupersonic_la-basic_expressions.lo \
	libsupersonic_la-expression_utils.lo \
	libsupersonic_la-terminal_bound_expressions.lo \
	libsupersonic_la-terminal_expressions.lo \
	libsupersonic_la-bound_expression_factory.lo \
	libsupersonic_la-cast_bound_expression.lo \
	libsupersonic_la-cast_expression.lo \
	libsupersonic_la-vector_logic.lo \
	libsupersonic_la-build_expression_from_proto.lo
nodist_libsupersonic_la_OBJECTS = $(am__objects_2) $(am__objects_4)
libsupersonic_la_OBJECTS = $(nodist_libsupersonic_la_OBJECTS)
libsupersonic_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) \
	$(libsupersonic_la_LDFLAGS) $(LDFLAGS) -o $@
libtestutils_la_DEPENDENCIES =
am_libtestutils_la_OBJECTS = libtestutils_la-block_builder.lo \
	libtestutils_la-comparable_cursor.lo \
	libtestutils_la-comparable_tuple_schema.lo \
	libtestutils_la-comparable_view.lo \
	libtestutils_la-expression_test_helper.lo \
	libtestutils_la-operation_testing.lo \
	libtestutils_la-repeating_block.lo libtestutils_la-row.lo \
	libtestutils_la-short_circuit_tester.lo \
	libtestutils_la-streamable.lo \
	libtestutils_la-view_comparator.lo
libtestutils_la_OBJECTS = $(am_libtestutils_la_OBJECTS)
libtestutils_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(libtestutils_la_CXXFLAGS) $(CXXFLAGS) \
	$(libtestutils_la_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = supersonic_guidetest$(EXEEXT) \
	test_base_exception$(EXEEXT) test_base_infrastructure$(EXEEXT) \
	test_base_memory$(EXEEXT) test_benchmark_dot$(EXEEXT) \
	test_benchmark_infrastructure$(EXEEXT) \
	test_benchmark_manager$(EXEEXT) test_cursor_base$(EXEEXT) \
	test_cursor_core$(EXEEXT) test_cursor_infrastructure$(EXEEXT) \
	test_expression_core$(EXEEXT) \
	test_expression_infrastructure$(EXEEXT) \
	test_expression_templated$(EXEEXT) \
	test_expression_vector$(EXEEXT)
am__EXEEXT_2 = operation_example$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_operation_example_OBJECTS =  \
	operation_example-operation_example.$(OBJEXT)
operation_example_OBJECTS = $(am_operation_example_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = libsupersonic.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
operation_example_DEPENDENCIES = $(am__DEPENDENCIES_2) libtestutils.la
am__objects_5 = supersonic_guidetest-gtest-all.$(OBJEXT) \
	supersonic_guidetest-gmock-all.$(OBJEXT) \
	supersonic_guidetest-supersonic_test_main.$(OBJEXT)
am_supersonic_guidetest_OBJECTS = $(am__objects_5) \
	supersonic_guidetest-smoke_test.$(OBJEXT) \
	supersonic_guidetest-group_sort.$(OBJEXT) \
	supersonic_guidetest-join.$(OBJEXT) \
	supersonic_guidetest-primer.$(OBJEXT)
supersonic_guidetest_OBJECTS = $(am_supersonic_guidetest_OBJECTS)
supersonic_guidetest_DEPENDENCIES = $(am__DEPENDENCIES_2)
supersonic_guidetest_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(supersonic_guidetest_LDFLAGS) $(LDFLAGS) -o $@
am__objects_6 = test_base_exception-gtest-all.$(OBJEXT) \
	test_base_exception-gmock-all.$(OBJEXT) \
	test_base_exception-supersonic_test_main.$(OBJEXT)
am_test_base_exception_OBJECTS = $(am__objects_6) \
	test_base_exception-exception_test.$(OBJEXT) \
	test_base_exception-result_test.$(OBJEXT)
test_base_exception_OBJECTS = $(am_test_base_exception_OBJECTS)
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_2) libtestutils.la
test_base_exception_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_7 = test_base_infrastructure-gtest-all.$(OBJEXT) \
	test_base_infrastructure-gmock-all.$(OBJEXT) \
	test_base_infrastructure-supersonic_test_main.$(OBJEXT)
am_test_base_infrastructure_OBJECTS = $(am__objects_7) \
	test_base_infrastructure-aggregation_operators_test.$(OBJEXT) \
	test_base_infrastructure-bit_pointers_test.$(OBJEXT) \
	test_base_infrastructure-block_test.$(OBJEXT) \
	test_base_infrastructure-copy_column_test.$(OBJEXT) \
	test_base_infrastructure-double_buffered_block_test.$(OBJEXT) \
	test_base_infrastructure-operators_test.$(OBJEXT) \
	test_base_infrastructure-projector_test.$(OBJEXT) \
	test_base_infrastructure-types_infrastructure_test.$(OBJEXT) \
	test_base_infrastructure-types_test.$(OBJEXT) \
	test_base_infrastructure-variant_pointer_test.$(OBJEXT) \
	test_base_infrastructure-view_copier_test.$(OBJEXT)
test_base_infrastructure_OBJECTS =  \
	$(am_test_base_infrastructure_OBJECTS)
test_base_infrastructure_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_8 = test_base_memory-gtest-all.$(OBJEXT) \
	test_base_memory-gmock-all.$(OBJEXT) \
	test_base_memory-supersonic_test_main.$(OBJEXT)
am_test_base_memory_OBJECTS = $(am__objects_8) \
	test_base_memory-arena_test.$(OBJEXT) \
	test_base_memory-memory_mocks.$(OBJEXT) \
	test_base_memory-memory_test.$(OBJEXT)
test_base_memory_OBJECTS = $(am_test_base_memory_OBJECTS)
test_base_memory_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_9 = test_benchmark_dot-gtest-all.$(OBJEXT) \
	test_benchmark_dot-gmock-all.$(OBJEXT) \
	test_benchmark_dot-supersonic_test_main.$(OBJEXT)
am_test_benchmark_dot_OBJECTS = $(am__objects_9) \
	test_benchmark_dot-dot_drawer_test.$(OBJEXT)
test_benchmark_dot_OBJECTS = $(am_test_benchmark_dot_OBJECTS)
test_benchmark_dot_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_10 = test_benchmark_infrastructure-gtest-all.$(OBJEXT) \
	test_benchmark_infrastructure-gmock-all.$(OBJEXT) \
	test_benchmark_infrastructure-supersonic_test_main.$(OBJEXT)
am_test_benchmark_infrastructure_OBJECTS = $(am__objects_10) \
	test_benchmark_infrastructure-benchmark_listener_test.$(OBJEXT) \
	test_benchmark_infrastructure-benchmark_transformer_test.$(OBJEXT) \
	test_benchmark_infrastructure-node_test.$(OBJEXT)
test_benchmark_infrastructure_OBJECTS =  \
	$(am_test_benchmark_infrastructure_OBJECTS)
test_benchmark_infrastructure_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_11 = test_benchmark_manager-gtest-all.$(OBJEXT) \
	test_benchmark_manager-gmock-all.$(OBJEXT) \
	test_benchmark_manager-supersonic_test_main.$(OBJEXT)
am_test_benchmark_manager_OBJECTS = $(am__objects_11) \
	test_benchmark_manager-benchmark_manager_test.$(OBJEXT)
test_benchmark_manager_OBJECTS = $(am_test_benchmark_manager_OBJECTS)
test_benchmark_manager_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_12 = test_cursor_base-gtest-all.$(OBJEXT) \
	test_cursor_base-gmock-all.$(OBJEXT) \
	test_cursor_base-supersonic_test_main.$(OBJEXT)
am_test_cursor_base_OBJECTS = $(am__objects_12) \
	test_cursor_base-lookup_index_test.$(OBJEXT)
test_cursor_base_OBJECTS = $(am_test_cursor_base_OBJECTS)
test_cursor_base_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_13 = test_cursor_core-gtest-all.$(OBJEXT) \
	test_cursor_core-gmock-all.$(OBJEXT) \
	test_cursor_core-supersonic_test_main.$(OBJEXT)
am_test_cursor_core_OBJECTS = $(am__objects_13) \
	test_cursor_core-aggregate_clusters_test.$(OBJEXT) \
	test_cursor_core-aggregate_groups_test.$(OBJEXT) \
	test_cursor_core-aggregate_scalar_test.$(OBJEXT) \
	test_cursor_core-coalesce_test.$(OBJEXT) \
	test_cursor_core-column_aggregator_test.$(OBJEXT) \
	test_cursor_core-compute_test.$(OBJEXT) \
	test_cursor_core-filter_test.$(OBJEXT) \
	test_cursor_core-foreign_filter_test.$(OBJEXT) \
	test_cursor_core-generate_test.$(OBJEXT) \
	test_cursor_core-hash_join_test.$(OBJEXT) \
	test_cursor_core-hybrid_aggregate_test.$(OBJEXT) \
	test_cursor_core-hybrid_aggregate_large_test.$(OBJEXT) \
	test_cursor_core-hybrid_group_utils_test.$(OBJEXT) \
	test_cursor_core-limit_test.$(OBJEXT) \
	test_cursor_core-merge_union_all_test.$(OBJEXT) \
	test_cursor_core-project_test.$(OBJEXT) \
	test_cursor_core-rowid_merge_join_test.$(OBJEXT) \
	test_cursor_core-scan_view_test.$(OBJEXT) \
	test_cursor_core-sort_test.$(OBJEXT) \
	test_cursor_core-specification_builder_test.$(OBJEXT) \
	test_cursor_core-splitter_test.$(OBJEXT)
test_cursor_core_OBJECTS = $(am_test_cursor_core_OBJECTS)
test_cursor_core_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_14 = test_cursor_infrastructure-gtest-all.$(OBJEXT) \
	test_cursor_infrastructure-gmock-all.$(OBJEXT) \
	test_cursor_infrastructure-supersonic_test_main.$(OBJEXT)
am_test_cursor_infrastructure_OBJECTS = $(am__objects_14) \
	test_cursor_infrastructure-basic_operation_test.$(OBJEXT) \
	test_cursor_infrastructure-iterators_test.$(OBJEXT) \
	test_cursor_infrastructure-row_copier_test.$(OBJEXT) \
	test_cursor_infrastructure-row_hash_set_test.$(OBJEXT) \
	test_cursor_infrastructure-row_test.$(OBJEXT) \
	test_cursor_infrastructure-table_test.$(OBJEXT) \
	test_cursor_infrastructure-view_cursor_test.$(OBJEXT) \
	test_cursor_infrastructure-writer_test.$(OBJEXT)
test_cursor_infrastructure_OBJECTS =  \
	$(am_test_cursor_infrastructure_OBJECTS)
test_cursor_infrastructure_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_15 = test_expression_core-gtest-all.$(OBJEXT) \
	test_expression_core-gmock-all.$(OBJEXT) \
	test_expression_core-supersonic_test_main.$(OBJEXT)
am_test_expression_core_OBJECTS = $(am__objects_15) \
	test_expression_core-arithmetic_bound_expressions_test.$(OBJEXT) \
	test_expression_core-arithmetic_expressions_test.$(OBJEXT) \
	test_expression_core-case_expression_test.$(OBJEXT) \
	test_expression_core-comparison_bound_expressions_test.$(OBJEXT) \
	test_expression_core-date_bound_expressions_test.$(OBJEXT) \
	test_expression_core-date_expressions_test.$(OBJEXT) \
	test_expression_core-elementary_bound_expressions_test.$(OBJEXT) \
	test_expression_core-elementary_expressions_test.$(OBJEXT) \
	test_expression_core-math_bound_expressions_test.$(OBJEXT) \
	test_expression_core-math_expressions_test.$(OBJEXT) \
	test_expression_core-projecting_bound_expressions_test.$(OBJEXT) \
	test_expression_core-projecting_expressions_test.$(OBJEXT) \
	test_expression_core-stateful_bound_expressions_test.$(OBJEXT) \
	test_expression_core-stateful_expressions_test.$(OBJEXT) \
	test_expression_core-string_bound_expressions_test.$(OBJEXT) \
	test_expression_core-string_expressions_test.$(OBJEXT)
test_expression_core_OBJECTS = $(am_test_expression_core_OBJECTS)
test_expression_core_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_16 = test_expression_infrastructure-gtest-all.$(OBJEXT) \
	test_expression_infrastructure-gmock-all.$(OBJEXT) \
	test_expression_infrastructure-supersonic_test_main.$(OBJEXT)
am_test_expression_infrastructure_OBJECTS = $(am__objects_16) \
	test_expression_infrastructure-basic_bound_expression_test.$(OBJEXT) \
	test_expression_infrastructure-expression_utils_test.$(OBJEXT) \
	test_expression_infrastructure-terminal_expressions_test.$(OBJEXT)
test_expression_infrastructure_OBJECTS =  \
	$(am_test_expression_infrastructure_OBJECTS)
test_expression_infrastructure_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_17 = test_expression_templated-gtest-all.$(OBJEXT) \
	test_expression_templated-gmock-all.$(OBJEXT) \
	test_expression_templated-supersonic_test_main.$(OBJEXT)
am_test_expression_templated_OBJECTS = $(am__objects_17) \
	test_expression_templated-cast_bound_expression_test.$(OBJEXT) \
	test_expression_templated-cast_expression_test.$(OBJEXT)
test_expression_templated_OBJECTS =  \
	$(am_test_expression_templated_OBJECTS)
test_expression_templated_DEPENDENCIES = $(am__DEPENDENCIES_3)
am__objects_18 = test_expression_vector-gtest-all.$(OBJEXT) \
	test_expression_vector-gmock-all.$(OBJEXT) \
	test_expression_vector-supersonic_test_main.$(OBJEXT)
am_test_expression_vector_OBJECTS = $(am__objects_18) \
	test_expression_vector-binary_column_computers_test.$(OBJEXT) \
	test_expression_vector-column_validity_checkers_test.$(OBJEXT) \
	test_expression_vector-ternary_column_computers_test.$(OBJEXT) \
	test_expression_vector-unary_column_computers_test.$(OBJEXT) \
	test_expression_vector-vector_logic_test.$(OBJEXT) \
	test_expression_vector-vector_primitives_test.$(OBJEXT)
test_expression_vector_OBJECTS = $(am_test_expression_vector_OBJECTS)
test_expression_vector_DEPENDENCIES = $(am__DEPENDENCIES_3)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libbenchmark_la_SOURCES) \
	$(nodist_libsupersonic_la_SOURCES) $(libtestutils_la_SOURCES) \
	$(operation_example_SOURCES) $(supersonic_guidetest_SOURCES) \
	$(test_base_exception_SOURCES) \
	$(test_base_infrastructure_SOURCES) \
	$(test_base_memory_SOURCES) $(test_benchmark_dot_SOURCES) \
	$(test_benchmark_infrastructure_SOURCES) \
	$(test_benchmark_manager_SOURCES) $(test_cursor_base_SOURCES) \
	$(test_cursor_core_SOURCES) \
	$(test_cursor_infrastructure_SOURCES) \
	$(test_expression_core_SOURCES) \
	$(test_expression_infrastructure_SOURCES) \
	$(test_expression_templated_SOURCES) \
	$(test_expression_vector_SOURCES)
DIST_SOURCES = $(libbenchmark_la_SOURCES) $(libtestutils_la_SOURCES) \
	$(operation_example_SOURCES) $(supersonic_guidetest_SOURCES) \
	$(test_base_exception_SOURCES) \
	$(test_base_infrastructure_SOURCES) \
	$(test_base_memory_SOURCES) $(test_benchmark_dot_SOURCES) \
	$(test_benchmark_infrastructure_SOURCES) \
	$(test_benchmark_manager_SOURCES) $(test_cursor_base_SOURCES) \
	$(test_cursor_core_SOURCES) \
	$(test_cursor_infrastructure_SOURCES) \
	$(test_expression_core_SOURCES) \
	$(test_expression_infrastructure_SOURCES) \
	$(test_expression_templated_SOURCES) \
	$(test_expression_vector_SOURCES)
HEADERS = $(libbenchmark_la_HEADERS) $(libtestutils_la_HEADERS) \
	$(nobase_supersonic_include_HEADERS) $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/bingo/supersonic/supersonic-v0.1/supersonic/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /home/bingo/supersonic/supersonic-v0.1/supersonic/missing --run autoconf
AUTOHEADER = ${SHELL} /home/bingo/supersonic/supersonic-v0.1/supersonic/missing --run autoheader
AUTOMAKE = ${SHELL} /home/bingo/supersonic/supersonic-v0.1/supersonic/missing --run automake-1.11
AWK = mawk
BOOST_CPPFLAGS = -I/usr/local/include
BOOST_LDFLAGS = -L/usr/local/lib
BOOST_SYSTEM_LIB = -lboost_system
BOOST_TIMER_LIB = -lboost_timer
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -funsigned-char -O3 -mmmx -msse -msse2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GFLAGS_CFLAGS = -I/usr/local/include  
GFLAGS_LIBS = -L/usr/local/lib -lgflags  
GLOG_CFLAGS = -I/usr/local/include  
GLOG_LIBS = -L/usr/local/lib -lglog  
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/bingo/supersonic/supersonic-v0.1/supersonic/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = supersonic
PACKAGE_BUGREPORT = 
PACKAGE_NAME = supersonic
PACKAGE_STRING = supersonic supersonic.major.9.3
PACKAGE_TARNAME = supersonic
PACKAGE_URL = 
PACKAGE_VERSION = supersonic.major.9.3
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PROTOC = /usr/local/bin/protoc
PROTO_CFLAGS = -pthread -I/usr/local/include  
PROTO_LIBS = -pthread -L/usr/local/lib -lprotobuf -lz -lpthread  
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS =  -lpthread
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = supersonic.major.9.3
abs_builddir = /home/bingo/supersonic/supersonic-v0.1/supersonic
abs_srcdir = /home/bingo/supersonic/supersonic-v0.1/supersonic
abs_top_builddir = /home/bingo/supersonic/supersonic-v0.1/supersonic
abs_top_srcdir = /home/bingo/supersonic/supersonic-v0.1/supersonic
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/bingo/supersonic/supersonic-v0.1/supersonic/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/bingo/supersonic/supersonic-v0.1/bin
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .

# Make sure that when we re-make ./configure, we get the macros we need
ACLOCAL_AMFLAGS = -I m4

# These are good warnings to turn on by default
AM_CXXFLAGS = -Wall -Wwrite-strings -Woverloaded-virtual -Wno-sign-compare
AM_CPPFLAGS = -Wno-deprecated \
              -DNDEBUG \
              -DSUPERSONIC_FORCE_FAILURE_CHECK=1

RE2_LIBS = -lre2
TEST_FLAGS = -I$(top_srcdir)/gmock/include -I$(top_srcdir)/gmock \
    -I$(top_srcdir)/gmock/gtest/include -I$(top_srcdir)/gmock/gtest

COMPILER_FLAGS = $(PTHREAD_CFLAGS) \
    $(AM_CXXFLAGS) \
    $(GFLAGS_CFLAGS) \
    $(GLOG_CFLAGS) \
    $(PROTO_CFLAGS) \
    $(RE2_CFLAGS) \
    $(BOOST_CPPFLAGS)

EXEC_LIB_FLAGS = libsupersonic.la \
    $(BOOST_SYSTEM_LIB) \
    $(BOOST_TIMER_LIB) \
    $(GFLAGS_LIBS) \
    $(GLOG_LIBS) \
    $(PROTO_LIBS) \
    $(RE2_LIBS)

EXEC_TEST_FLAGS = $(EXEC_LIB_FLAGS) libtestutils.la
TEST_FILES = gmock/gtest/src/gtest-all.cc \
    gmock/src/gmock-all.cc \
    test_utils/supersonic_test_main.cc


# Library
lib_LTLIBRARIES = libsupersonic.la
libsupersonic_la_CXXFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
libsupersonic_la_LDFLAGS = 
libsupersonic_la_LIBADD = libbenchmark.la

# Testing utils

# Benchmark utilities
noinst_LTLIBRARIES = libtestutils.la libbenchmark.la
libtestutils_la_CXXFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
libtestutils_la_LDFLAGS = 
libtestutils_la_LIBADD = 
libtestutils_ladir = $(includedir)
libtestutils_la_HEADERS = \
    supersonic/testing/block_builder.h \
    supersonic/testing/comparable_cursor.h \
    supersonic/testing/comparable_tuple_schema.h \
    supersonic/testing/comparable_view.h \
    supersonic/testing/comparators.h \
    supersonic/testing/expression_test_helper.h \
    supersonic/testing/operation_testing.h \
    supersonic/testing/proto_matcher.h \
    supersonic/testing/repeating_block.h \
    supersonic/testing/row.h \
    supersonic/testing/short_circuit_tester.h \
    supersonic/testing/streamable.h \
    supersonic/testing/view_comparator.h

libtestutils_la_SOURCES = \
    supersonic/testing/block_builder.cc \
    supersonic/testing/comparable_cursor.cc \
    supersonic/testing/comparable_tuple_schema.cc \
    supersonic/testing/comparable_view.cc \
    supersonic/testing/expression_test_helper.cc \
    supersonic/testing/operation_testing.cc \
    supersonic/testing/repeating_block.cc \
    supersonic/testing/row.cc \
    supersonic/testing/short_circuit_tester.cc \
    supersonic/testing/streamable.cc \
    supersonic/testing/view_comparator.cc


# Unit tests
supersonic_guidetest_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
supersonic_guidetest_LDFLAGS = 
supersonic_guidetest_LDADD = $(EXEC_LIB_FLAGS)
supersonic_guidetest_SOURCES = $(TEST_FILES) \
    test/smoke_test.cc \
    test/guide/group_sort.cc \
    test/guide/join.cc \
    test/guide/primer.cc


# Unit Tests
#
test_base_exception_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_base_exception_LDADD = $(EXEC_TEST_FLAGS)
test_base_exception_SOURCES = $(TEST_FILES) \
    supersonic/base/exception/exception_test.cc \
    supersonic/base/exception/result_test.cc

test_base_infrastructure_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_base_infrastructure_LDADD = $(EXEC_TEST_FLAGS)
test_base_infrastructure_SOURCES = $(TEST_FILES) \
    supersonic/base/infrastructure/aggregation_operators_test.cc \
    supersonic/base/infrastructure/bit_pointers_test.cc \
    supersonic/base/infrastructure/block_test.cc \
    supersonic/base/infrastructure/copy_column_test.cc \
    supersonic/base/infrastructure/double_buffered_block_test.cc \
    supersonic/base/infrastructure/operators_test.cc \
    supersonic/base/infrastructure/projector_test.cc \
    supersonic/base/infrastructure/types_infrastructure_test.cc \
    supersonic/base/infrastructure/types_test.cc \
    supersonic/base/infrastructure/variant_pointer_test.cc \
    supersonic/base/infrastructure/view_copier_test.cc

test_base_memory_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_base_memory_LDADD = $(EXEC_TEST_FLAGS)
test_base_memory_SOURCES = $(TEST_FILES) \
    supersonic/base/memory/arena_test.cc \
    supersonic/base/memory/memory_mocks.cc \
    supersonic/base/memory/memory_test.cc

test_benchmark_dot_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS) -std=c++0x
test_benchmark_dot_LDADD = $(EXEC_TEST_FLAGS)
test_benchmark_dot_SOURCES = $(TEST_FILES) \
    supersonic/benchmark/dot/dot_drawer_test.cc

test_benchmark_infrastructure_CPPFLAGS = $(COMPILER_FLAGS) \
                                         $(TEST_FLAGS) \
                                         -std=c++0x

test_benchmark_infrastructure_LDADD = $(EXEC_TEST_FLAGS)
test_benchmark_infrastructure_SOURCES = $(TEST_FILES) \
    supersonic/benchmark/infrastructure/benchmark_listener_test.cc \
    supersonic/benchmark/infrastructure/benchmark_transformer_test.cc \
    supersonic/benchmark/infrastructure/node_test.cc

test_benchmark_manager_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS) -std=c++0x
test_benchmark_manager_LDADD = $(EXEC_TEST_FLAGS)
test_benchmark_manager_SOURCES = $(TEST_FILES) \
    supersonic/benchmark/manager/benchmark_manager_test.cc

test_cursor_base_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_cursor_base_LDADD = $(EXEC_TEST_FLAGS)
test_cursor_base_SOURCES = $(TEST_FILES) \
    supersonic/cursor/base/lookup_index_test.cc

test_cursor_core_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_cursor_core_LDADD = $(EXEC_TEST_FLAGS)
test_cursor_core_SOURCES = $(TEST_FILES) \
    supersonic/cursor/core/aggregate_clusters_test.cc \
    supersonic/cursor/core/aggregate_groups_test.cc \
    supersonic/cursor/core/aggregate_scalar_test.cc \
    supersonic/cursor/core/coalesce_test.cc \
    supersonic/cursor/core/column_aggregator_test.cc \
    supersonic/cursor/core/compute_test.cc \
    supersonic/cursor/core/filter_test.cc \
    supersonic/cursor/core/foreign_filter_test.cc \
    supersonic/cursor/core/generate_test.cc \
    supersonic/cursor/core/hash_join_test.cc \
    supersonic/cursor/core/hybrid_aggregate_test.cc \
    supersonic/cursor/core/hybrid_aggregate_large_test.cc \
    supersonic/cursor/core/hybrid_group_utils_test.cc \
    supersonic/cursor/core/limit_test.cc \
    supersonic/cursor/core/merge_union_all_test.cc \
    supersonic/cursor/core/project_test.cc \
    supersonic/cursor/core/rowid_merge_join_test.cc \
    supersonic/cursor/core/scan_view_test.cc \
    supersonic/cursor/core/sort_test.cc \
    supersonic/cursor/core/specification_builder_test.cc \
    supersonic/cursor/core/splitter_test.cc

test_cursor_infrastructure_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_cursor_infrastructure_LDADD = $(EXEC_TEST_FLAGS)
test_cursor_infrastructure_SOURCES = $(TEST_FILES) \
    supersonic/cursor/infrastructure/basic_operation_test.cc \
    supersonic/cursor/infrastructure/iterators_test.cc \
    supersonic/cursor/infrastructure/row_copier_test.cc \
    supersonic/cursor/infrastructure/row_hash_set_test.cc \
    supersonic/cursor/infrastructure/row_test.cc \
    supersonic/cursor/infrastructure/table_test.cc \
    supersonic/cursor/infrastructure/view_cursor_test.cc \
    supersonic/cursor/infrastructure/writer_test.cc

test_expression_core_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_expression_core_LDADD = $(EXEC_TEST_FLAGS)
test_expression_core_SOURCES = $(TEST_FILES) \
    supersonic/expression/core/arithmetic_bound_expressions_test.cc \
    supersonic/expression/core/arithmetic_expressions_test.cc \
    supersonic/expression/core/case_expression_test.cc \
    supersonic/expression/core/comparison_bound_expressions_test.cc \
    supersonic/expression/core/date_bound_expressions_test.cc \
    supersonic/expression/core/date_expressions_test.cc \
    supersonic/expression/core/elementary_bound_expressions_test.cc \
    supersonic/expression/core/elementary_expressions_test.cc \
    supersonic/expression/core/math_bound_expressions_test.cc \
    supersonic/expression/core/math_expressions_test.cc \
    supersonic/expression/core/projecting_bound_expressions_test.cc \
    supersonic/expression/core/projecting_expressions_test.cc \
    supersonic/expression/core/stateful_bound_expressions_test.cc \
    supersonic/expression/core/stateful_expressions_test.cc \
    supersonic/expression/core/string_bound_expressions_test.cc \
    supersonic/expression/core/string_expressions_test.cc

test_expression_infrastructure_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_expression_infrastructure_LDADD = $(EXEC_TEST_FLAGS)
test_expression_infrastructure_SOURCES = $(TEST_FILES) \
    supersonic/expression/infrastructure/basic_bound_expression_test.cc \
    supersonic/expression/infrastructure/expression_utils_test.cc \
    supersonic/expression/infrastructure/terminal_expressions_test.cc

test_expression_templated_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_expression_templated_LDADD = $(EXEC_TEST_FLAGS)
test_expression_templated_SOURCES = $(TEST_FILES) \
    supersonic/expression/templated/cast_bound_expression_test.cc \
    supersonic/expression/templated/cast_expression_test.cc

test_expression_vector_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS)
test_expression_vector_LDADD = $(EXEC_TEST_FLAGS)
test_expression_vector_SOURCES = $(TEST_FILES) \
    supersonic/expression/vector/binary_column_computers_test.cc \
    supersonic/expression/vector/column_validity_checkers_test.cc \
    supersonic/expression/vector/ternary_column_computers_test.cc \
    supersonic/expression/vector/unary_column_computers_test.cc \
    supersonic/expression/vector/vector_logic_test.cc \
    supersonic/expression/vector/vector_primitives_test.cc

libbenchmark_la_CXXFLAGS = $(COMPILER_FLAGS) -std=c++0x
libbenchmark_la_LDFLAGS = 
libbenchmark_la_LIBADD = 
libbenchmark_ladir = $(includedir)
libbenchmark_la_HEADERS = \
    supersonic/benchmark/base/benchmark_types.h \
    supersonic/benchmark/dot/dot_drawer.h \
    supersonic/benchmark/examples/common_utils.h \
    supersonic/benchmark/infrastructure/benchmark_listener.h \
    supersonic/benchmark/infrastructure/benchmark_listener_mock.h \
    supersonic/benchmark/infrastructure/benchmark_transformer.h \
    supersonic/benchmark/infrastructure/cursor_statistics.h \
    supersonic/benchmark/infrastructure/cursor_statistics_mock.h \
    supersonic/benchmark/infrastructure/node.h \
    supersonic/benchmark/infrastructure/tree_builder.h \
    supersonic/benchmark/manager/benchmark_manager.h

libbenchmark_la_SOURCES = \
    supersonic/benchmark/dot/dot_drawer.cc \
    supersonic/benchmark/examples/common_utils.cc \
    supersonic/benchmark/infrastructure/benchmark_listener.cc \
    supersonic/benchmark/infrastructure/benchmark_transformer.cc \
    supersonic/benchmark/infrastructure/cursor_statistics.cc \
    supersonic/benchmark/infrastructure/node.cc \
    supersonic/benchmark/infrastructure/tree_builder.cc \
    supersonic/benchmark/manager/benchmark_manager.cc


# Benchmark examples
BENCHMARK_EXAMPLES = operation_example
operation_example_CPPFLAGS = $(COMPILER_FLAGS) $(TEST_FLAGS) -std=c++0x
operation_example_LDADD = $(EXEC_LIB_FLAGS) libtestutils.la
operation_example_SOURCES = supersonic/benchmark/examples/operation_example.cc
EXTRA_DIST = $(TESTS) $(BENCHMARK_EXAMPLES)

# Headers exported from the library.
supersonic_includedir = $(includedir)
protos_H = \
    supersonic/utils/exception/stack_trace.pb.h \
    supersonic/utils/proto/expressions.pb.h \
    supersonic/utils/proto/types.pb.h \
    supersonic/benchmark/proto/benchmark.pb.h \
    supersonic/cursor/proto/cursors.pb.h \
    supersonic/expression/proto/operators.pb.h \
    supersonic/proto/specification.pb.h \
    supersonic/proto/supersonic.pb.h

sources_H = supersonic/utils/algorithm.h \
    supersonic/utils/arm_instruction_set_select.h \
    supersonic/utils/atomicops.h \
    supersonic/utils/auxiliary/atomicops-internals-macosx.h \
    supersonic/utils/auxiliary/atomicops-internals-arm-v6plus.h \
    supersonic/utils/auxiliary/atomicops-internals-arm-generic.h \
    supersonic/utils/atomicops-internals-x86.h \
    supersonic/utils/atomicops-internals-powerpc.h \
    supersonic/utils/auxiliary/atomicops-internals-windows.h \
    supersonic/utils/atomic_refcount.h \
    supersonic/utils/basictypes.h \
    supersonic/utils/bits.h \
    supersonic/utils/charmap.h \
    supersonic/utils/container_literal.h \
    supersonic/utils/container_literal_generated.h \
    supersonic/utils/cycleclock-inl.h \
    supersonic/utils/demangle.h \
    supersonic/utils/dynamic_annotations.h \
    supersonic/utils/fixedarray.h \
    supersonic/utils/integral_types.h \
    supersonic/utils/iterator_adaptors.h \
    supersonic/utils/endian.h \
    supersonic/utils/casts.h \
    supersonic/utils/int128.h \
    supersonic/utils/linked_ptr.h \
    supersonic/utils/logging-inl.h \
    supersonic/utils/macros.h \
    supersonic/utils/manual_constructor.h \
    supersonic/utils/map-util.h \
    supersonic/utils/mathlimits.h \
    supersonic/utils/mutex.h \
    supersonic/utils/once.h \
    supersonic/utils/paranoid.h \
    supersonic/utils/pointer_vector.h \
    supersonic/utils/port.h \
    supersonic/utils/scoped_ptr.h \
    supersonic/utils/scoped_ptr_internals.h \
    supersonic/utils/singleton.h \
    supersonic/utils/shared_ptr.h \
    supersonic/utils/sparsetable.h \
    supersonic/utils/spinlock_linux-inl.h \
    supersonic/utils/spinlock_posix-inl.h \
    supersonic/utils/spinlock_win32-inl.h \
    supersonic/utils/spinlock_wait.h \
    supersonic/utils/strtoint.h \
    supersonic/utils/stl_util.h \
    supersonic/utils/stringprintf.h \
    supersonic/utils/template_util.h \
    supersonic/utils/thread_annotations.h \
    supersonic/utils/type_traits.h \
    supersonic/utils/valgrind.h \
    supersonic/utils/atomic/atomic.h \
    supersonic/utils/atomic/atomic_internal.h \
    supersonic/utils/atomic/atomic_std.h \
    supersonic/utils/atomic/forward.h \
    supersonic/utils/atomic/locking.h \
    supersonic/utils/atomic/tsan.h \
    supersonic/utils/atomic/x86-gcc.h \
    supersonic/utils/hash/hash.h \
    supersonic/utils/exception/coowned_pointer.h \
    supersonic/utils/exception/failureor.h \
    supersonic/utils/exception/stack_trace.h \
    supersonic/utils/strings/fastmem.h \
    supersonic/utils/strings/join.h \
    supersonic/utils/strings/escaping.h \
    supersonic/utils/strings/human_readable.h \
    supersonic/utils/strings/memutil.h \
    supersonic/utils/strings/numbers.h \
    supersonic/utils/strings/split_internal.h \
    supersonic/utils/strings/strcat.h \
    supersonic/utils/strings/stringpiece.h \
    supersonic/utils/strings/substitute.h \
    supersonic/utils/strings/strip.h \
    supersonic/utils/utf/utfdef.h \
    supersonic/utils/timer.h \
    supersonic/utils/random.h \
    supersonic/utils/walltime.h \
    supersonic/utils/file.h \
    supersonic/utils/file_util.h \
    supersonic/base/exception/exception_macros.h \
    supersonic/base/exception/exception.h \
    supersonic/base/exception/result.h \
    supersonic/base/infrastructure/aggregation_operators.h \
    supersonic/base/infrastructure/bit_pointers.h \
    supersonic/base/infrastructure/block.h \
    supersonic/base/infrastructure/copy_column.h \
    supersonic/base/infrastructure/double_buffered_block.h \
    supersonic/base/infrastructure/init.h \
    supersonic/base/infrastructure/operators.h \
    supersonic/base/infrastructure/projector.h \
    supersonic/base/infrastructure/tuple_schema.h \
    supersonic/base/infrastructure/types_infrastructure.h \
    supersonic/base/infrastructure/types.h \
    supersonic/base/infrastructure/variant_pointer.h \
    supersonic/base/infrastructure/variant.h \
    supersonic/base/infrastructure/view_copier.h \
    supersonic/base/memory/arena.h \
    supersonic/base/memory/memory.h \
    supersonic/cursor/base/cursor.h \
    supersonic/cursor/base/lookup_index.h \
    supersonic/cursor/base/operation.h \
    supersonic/cursor/core/aggregate.h \
    supersonic/cursor/core/aggregator.h \
    supersonic/cursor/core/benchmarks.h \
    supersonic/cursor/core/coalesce.h \
    supersonic/cursor/core/column_aggregator.h \
    supersonic/cursor/core/compute.h \
    supersonic/cursor/core/filter.h \
    supersonic/cursor/core/foreign_filter.h \
    supersonic/cursor/core/generate.h \
    supersonic/cursor/core/hash_join.h \
    supersonic/cursor/core/hybrid_group_utils.h \
    supersonic/cursor/core/limit.h \
    supersonic/cursor/core/merge_union_all.h \
    supersonic/cursor/core/ownership_taker.h \
    supersonic/cursor/core/project.h \
    supersonic/cursor/core/rowid_merge_join.h \
    supersonic/cursor/core/scan_view.h \
    supersonic/cursor/core/sort.h \
    supersonic/cursor/core/specification_builder.h \
    supersonic/cursor/core/splitter.h \
    supersonic/cursor/core/spy.h \
    supersonic/cursor/infrastructure/basic_cursor.h \
    supersonic/cursor/infrastructure/basic_operation.h \
    supersonic/cursor/infrastructure/file_io.h \
    supersonic/cursor/infrastructure/file_io-internal.h \
    supersonic/cursor/infrastructure/history_transformer.h \
    supersonic/cursor/infrastructure/iterators.h \
    supersonic/cursor/infrastructure/ordering.h \
    supersonic/cursor/infrastructure/row_copier.h \
    supersonic/cursor/infrastructure/row.h \
    supersonic/cursor/infrastructure/row_hash_set.h \
    supersonic/cursor/infrastructure/table.h \
    supersonic/cursor/infrastructure/value_ref.h \
    supersonic/cursor/infrastructure/view_cursor.h \
    supersonic/cursor/infrastructure/view_printer.h \
    supersonic/expression/base/expression.h \
    supersonic/expression/core/arithmetic_bound_expressions.h \
    supersonic/expression/core/arithmetic_expressions.h \
    supersonic/expression/core/comparison_bound_expressions.h \
    supersonic/expression/core/comparison_expressions.h \
    supersonic/expression/core/date_bound_expressions.h \
    supersonic/expression/core/date_evaluators.h \
    supersonic/expression/core/date_expressions.h \
    supersonic/expression/core/elementary_bound_expressions.h \
    supersonic/expression/core/elementary_expressions.h \
    supersonic/expression/core/math_bound_expressions.h \
    supersonic/expression/core/math_evaluators.h \
    supersonic/expression/core/math_expressions.h \
    supersonic/expression/core/projecting_bound_expressions.h \
    supersonic/expression/core/projecting_expressions.h \
    supersonic/expression/core/stateful_bound_expressions.h \
    supersonic/expression/core/stateful_expressions.h \
    supersonic/expression/core/string_bound_expressions.h \
    supersonic/expression/core/string_bound_expressions_internal.h \
    supersonic/expression/core/string_evaluators.h \
    supersonic/expression/core/string_expressions.h \
    supersonic/expression/ext/hashing/hashing_bound_expressions.h \
    supersonic/expression/ext/hashing/hashing_evaluators.h \
    supersonic/expression/ext/hashing/hashing_expressions.h \
    supersonic/expression/infrastructure/basic_bound_expression.h \
    supersonic/expression/infrastructure/basic_expressions.h \
    supersonic/expression/infrastructure/bound_expression_creators.h \
    supersonic/expression/infrastructure/elementary_bound_const_expressions.h \
    supersonic/expression/infrastructure/elementary_const_expressions.h \
    supersonic/expression/infrastructure/expression_utils.h \
    supersonic/expression/infrastructure/terminal_bound_expressions.h \
    supersonic/expression/infrastructure/terminal_expressions.h \
    supersonic/expression/templated/abstract_bound_expressions.h \
    supersonic/expression/templated/abstract_expressions.h \
    supersonic/expression/templated/bound_expression_factory.h \
    supersonic/expression/templated/cast_bound_expression.h \
    supersonic/expression/templated/cast_expression.h \
    supersonic/expression/vector/binary_column_computers.h \
    supersonic/expression/vector/column_validity_checkers.h \
    supersonic/expression/vector/expression_evaluators.h \
    supersonic/expression/vector/expression_traits.h \
    supersonic/expression/vector/simd_operators.h \
    supersonic/expression/vector/ternary_column_computers.h \
    supersonic/expression/vector/unary_column_computers.h \
    supersonic/expression/vector/vector_logic.h \
    supersonic/serialization/build_expression_from_proto.h \
    supersonic/expression/vector/vector_primitives.h \
    supersonic/cursor/infrastructure/writer.h \
    supersonic/utils/utf/utf.h \
    supersonic/supersonic.h \
    supersonic/supersonic-config.h

nobase_supersonic_include_HEADERS = $(protos_H) \
																		$(sources_H)

noinst_HEADERS = config.h

# base

# cursor

# expression

# serialization
supersonic_S = $(protos_S) supersonic/utils/atomicops-internals-x86.cc \
	supersonic/utils/bits.cc supersonic/utils/demangle.cc \
	supersonic/utils/dynamic_annotations.c \
	supersonic/utils/int128.cc supersonic/utils/mathlimits.cc \
	supersonic/utils/once.cc supersonic/utils/spinlock_wait.cc \
	supersonic/utils/strtoint.cc supersonic/utils/stringprintf.cc \
	supersonic/utils/atomic/locking.cc \
	supersonic/utils/atomic/x86-gcc.cc \
	supersonic/utils/hash/hash.cc \
	supersonic/utils/exception/stack_trace.cc \
	supersonic/utils/strings/join.cc \
	supersonic/utils/strings/stringpiece.cc \
	supersonic/utils/strings/ascii_ctype.cc \
	supersonic/utils/strings/charset.cc \
	supersonic/utils/strings/escaping.cc \
	supersonic/utils/strings/human_readable.cc \
	supersonic/utils/strings/memutil.cc \
	supersonic/utils/strings/numbers.cc \
	supersonic/utils/strings/serialize.cc \
	supersonic/utils/strings/split.cc \
	supersonic/utils/strings/strcat.cc \
	supersonic/utils/strings/substitute.cc \
	supersonic/utils/strings/strip.cc \
	supersonic/utils/strings/util.cc supersonic/utils/utf/rune.c \
	supersonic/utils/random.cc supersonic/utils/walltime.cc \
	supersonic/utils/file.cc supersonic/utils/file_util.cc \
	supersonic/base/infrastructure/bit_pointers.cc \
	supersonic/base/infrastructure/block.cc \
	supersonic/base/infrastructure/copy_column.cc \
	supersonic/base/infrastructure/double_buffered_block.cc \
	supersonic/base/infrastructure/projector.cc \
	supersonic/base/infrastructure/tuple_schema.cc \
	supersonic/base/infrastructure/types_infrastructure.cc \
	supersonic/base/infrastructure/types.cc \
	supersonic/base/infrastructure/view_copier.cc \
	supersonic/base/memory/arena.cc \
	supersonic/base/memory/memory.cc \
	supersonic/cursor/base/cursor.cc \
	supersonic/cursor/base/lookup_index.cc \
	supersonic/cursor/core/aggregate_clusters.cc \
	supersonic/cursor/core/aggregate_groups.cc \
	supersonic/cursor/core/aggregate_scalar.cc \
	supersonic/cursor/core/aggregator.cc \
	supersonic/cursor/core/benchmarks.cc \
	supersonic/cursor/core/coalesce.cc \
	supersonic/cursor/core/column_aggregator.cc \
	supersonic/cursor/core/compute.cc \
	supersonic/cursor/core/filter.cc \
	supersonic/cursor/core/foreign_filter.cc \
	supersonic/cursor/core/generate.cc \
	supersonic/cursor/core/hash_join.cc \
	supersonic/cursor/core/hybrid_group_utils.cc \
	supersonic/cursor/core/limit.cc \
	supersonic/cursor/core/merge_union_all.cc \
	supersonic/cursor/core/project.cc \
	supersonic/cursor/core/rowid_merge_join.cc \
	supersonic/cursor/core/scan_view.cc \
	supersonic/cursor/core/sort.cc \
	supersonic/cursor/core/specification_builder.cc \
	supersonic/cursor/core/splitter.cc \
	supersonic/cursor/core/spy.cc \
	supersonic/cursor/infrastructure/basic_cursor.cc \
	supersonic/cursor/infrastructure/basic_operation.cc \
	supersonic/cursor/infrastructure/file_io.cc \
	supersonic/cursor/infrastructure/iterators.cc \
	supersonic/cursor/infrastructure/ordering.cc \
	supersonic/cursor/infrastructure/row_hash_set.cc \
	supersonic/cursor/infrastructure/table.cc \
	supersonic/cursor/infrastructure/view_cursor.cc \
	supersonic/cursor/infrastructure/view_printer.cc \
	supersonic/cursor/infrastructure/writer.cc \
	supersonic/expression/base/expression.cc \
	supersonic/expression/core/arithmetic_bound_expressions.cc \
	supersonic/expression/core/arithmetic_expressions.cc \
	supersonic/expression/core/comparison_bound_expressions.cc \
	supersonic/expression/core/comparison_expressions.cc \
	supersonic/expression/core/date_bound_expressions.cc \
	supersonic/expression/core/date_evaluators.cc \
	supersonic/expression/core/date_expressions.cc \
	supersonic/expression/core/elementary_bound_expressions.cc \
	supersonic/expression/core/elementary_expressions.cc \
	supersonic/expression/core/math_bound_expressions.cc \
	supersonic/expression/core/math_expressions.cc \
	supersonic/expression/core/projecting_bound_expressions.cc \
	supersonic/expression/core/projecting_expressions.cc \
	supersonic/expression/core/stateful_bound_expressions.cc \
	supersonic/expression/core/stateful_expressions.cc \
	supersonic/expression/core/string_bound_expressions.cc \
	supersonic/expression/core/string_expressions.cc \
	supersonic/expression/ext/hashing/hashing_bound_expressions.cc \
	supersonic/expression/ext/hashing/hashing_expressions.cc \
	supersonic/expression/infrastructure/basic_bound_expression.cc \
	supersonic/expression/infrastructure/basic_expressions.cc \
	supersonic/expression/infrastructure/expression_utils.cc \
	supersonic/expression/infrastructure/terminal_bound_expressions.cc \
	supersonic/expression/infrastructure/terminal_expressions.cc \
	supersonic/expression/templated/bound_expression_factory.cc \
	supersonic/expression/templated/cast_bound_expression.cc \
	supersonic/expression/templated/cast_expression.cc \
	supersonic/expression/vector/vector_logic.cc \
	supersonic/serialization/build_expression_from_proto.cc

# cpp sources
# protoc output
protos_S = \
    supersonic/utils/exception/stack_trace.pb.cc \
    supersonic/utils/proto/expressions.pb.cc \
    supersonic/utils/proto/types.pb.cc \
    supersonic/benchmark/proto/benchmark.pb.cc \
    supersonic/cursor/proto/cursors.pb.cc \
    supersonic/expression/proto/operators.pb.cc \
    supersonic/proto/specification.pb.cc \
    supersonic/proto/supersonic.pb.cc


# Source list
nodist_libsupersonic_la_SOURCES = $(nobase_supersonic_include_HEADERS) \
																	$(supersonic_S)


# Remove all proto-generated source and header files.
CLEANFILES = $(protos_H) $(protos_S)
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then rm -f stamp-h1; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) stamp-h1; else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libbenchmark.la: $(libbenchmark_la_OBJECTS) $(libbenchmark_la_DEPENDENCIES) $(EXTRA_libbenchmark_la_DEPENDENCIES) 
	$(libbenchmark_la_LINK)  $(libbenchmark_la_OBJECTS) $(libbenchmark_la_LIBADD) $(LIBS)
libsupersonic.la: $(libsupersonic_la_OBJECTS) $(libsupersonic_la_DEPENDENCIES) $(EXTRA_libsupersonic_la_DEPENDENCIES) 
	$(libsupersonic_la_LINK) -rpath $(libdir) $(libsupersonic_la_OBJECTS) $(libsupersonic_la_LIBADD) $(LIBS)
libtestutils.la: $(libtestutils_la_OBJECTS) $(libtestutils_la_DEPENDENCIES) $(EXTRA_libtestutils_la_DEPENDENCIES) 
	$(libtestutils_la_LINK)  $(libtestutils_la_OBJECTS) $(libtestutils_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
operation_example$(EXEEXT): $(operation_example_OBJECTS) $(operation_example_DEPENDENCIES) $(EXTRA_operation_example_DEPENDENCIES) 
	@rm -f operation_example$(EXEEXT)
	$(CXXLINK) $(operation_example_OBJECTS) $(operation_example_LDADD) $(LIBS)
supersonic_guidetest$(EXEEXT): $(supersonic_guidetest_OBJECTS) $(supersonic_guidetest_DEPENDENCIES) $(EXTRA_supersonic_guidetest_DEPENDENCIES) 
	@rm -f supersonic_guidetest$(EXEEXT)
	$(supersonic_guidetest_LINK) $(supersonic_guidetest_OBJECTS) $(supersonic_guidetest_LDADD) $(LIBS)
test_base_exception$(EXEEXT): $(test_base_exception_OBJECTS) $(test_base_exception_DEPENDENCIES) $(EXTRA_test_base_exception_DEPENDENCIES) 
	@rm -f test_base_exception$(EXEEXT)
	$(CXXLINK) $(test_base_exception_OBJECTS) $(test_base_exception_LDADD) $(LIBS)
test_base_infrastructure$(EXEEXT): $(test_base_infrastructure_OBJECTS) $(test_base_infrastructure_DEPENDENCIES) $(EXTRA_test_base_infrastructure_DEPENDENCIES) 
	@rm -f test_base_infrastructure$(EXEEXT)
	$(CXXLINK) $(test_base_infrastructure_OBJECTS) $(test_base_infrastructure_LDADD) $(LIBS)
test_base_memory$(EXEEXT): $(test_base_memory_OBJECTS) $(test_base_memory_DEPENDENCIES) $(EXTRA_test_base_memory_DEPENDENCIES) 
	@rm -f test_base_memory$(EXEEXT)
	$(CXXLINK) $(test_base_memory_OBJECTS) $(test_base_memory_LDADD) $(LIBS)
test_benchmark_dot$(EXEEXT): $(test_benchmark_dot_OBJECTS) $(test_benchmark_dot_DEPENDENCIES) $(EXTRA_test_benchmark_dot_DEPENDENCIES) 
	@rm -f test_benchmark_dot$(EXEEXT)
	$(CXXLINK) $(test_benchmark_dot_OBJECTS) $(test_benchmark_dot_LDADD) $(LIBS)
test_benchmark_infrastructure$(EXEEXT): $(test_benchmark_infrastructure_OBJECTS) $(test_benchmark_infrastructure_DEPENDENCIES) $(EXTRA_test_benchmark_infrastructure_DEPENDENCIES) 
	@rm -f test_benchmark_infrastructure$(EXEEXT)
	$(CXXLINK) $(test_benchmark_infrastructure_OBJECTS) $(test_benchmark_infrastructure_LDADD) $(LIBS)
test_benchmark_manager$(EXEEXT): $(test_benchmark_manager_OBJECTS) $(test_benchmark_manager_DEPENDENCIES) $(EXTRA_test_benchmark_manager_DEPENDENCIES) 
	@rm -f test_benchmark_manager$(EXEEXT)
	$(CXXLINK) $(test_benchmark_manager_OBJECTS) $(test_benchmark_manager_LDADD) $(LIBS)
test_cursor_base$(EXEEXT): $(test_cursor_base_OBJECTS) $(test_cursor_base_DEPENDENCIES) $(EXTRA_test_cursor_base_DEPENDENCIES) 
	@rm -f test_cursor_base$(EXEEXT)
	$(CXXLINK) $(test_cursor_base_OBJECTS) $(test_cursor_base_LDADD) $(LIBS)
test_cursor_core$(EXEEXT): $(test_cursor_core_OBJECTS) $(test_cursor_core_DEPENDENCIES) $(EXTRA_test_cursor_core_DEPENDENCIES) 
	@rm -f test_cursor_core$(EXEEXT)
	$(CXXLINK) $(test_cursor_core_OBJECTS) $(test_cursor_core_LDADD) $(LIBS)
test_cursor_infrastructure$(EXEEXT): $(test_cursor_infrastructure_OBJECTS) $(test_cursor_infrastructure_DEPENDENCIES) $(EXTRA_test_cursor_infrastructure_DEPENDENCIES) 
	@rm -f test_cursor_infrastructure$(EXEEXT)
	$(CXXLINK) $(test_cursor_infrastructure_OBJECTS) $(test_cursor_infrastructure_LDADD) $(LIBS)
test_expression_core$(EXEEXT): $(test_expression_core_OBJECTS) $(test_expression_core_DEPENDENCIES) $(EXTRA_test_expression_core_DEPENDENCIES) 
	@rm -f test_expression_core$(EXEEXT)
	$(CXXLINK) $(test_expression_core_OBJECTS) $(test_expression_core_LDADD) $(LIBS)
test_expression_infrastructure$(EXEEXT): $(test_expression_infrastructure_OBJECTS) $(test_expression_infrastructure_DEPENDENCIES) $(EXTRA_test_expression_infrastructure_DEPENDENCIES) 
	@rm -f test_expression_infrastructure$(EXEEXT)
	$(CXXLINK) $(test_expression_infrastructure_OBJECTS) $(test_expression_infrastructure_LDADD) $(LIBS)
test_expression_templated$(EXEEXT): $(test_expression_templated_OBJECTS) $(test_expression_templated_DEPENDENCIES) $(EXTRA_test_expression_templated_DEPENDENCIES) 
	@rm -f test_expression_templated$(EXEEXT)
	$(CXXLINK) $(test_expression_templated_OBJECTS) $(test_expression_templated_LDADD) $(LIBS)
test_expression_vector$(EXEEXT): $(test_expression_vector_OBJECTS) $(test_expression_vector_DEPENDENCIES) $(EXTRA_test_expression_vector_DEPENDENCIES) 
	@rm -f test_expression_vector$(EXEEXT)
	$(CXXLINK) $(test_expression_vector_OBJECTS) $(test_expression_vector_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/dynamic_annotations.Plo
include ./$(DEPDIR)/libbenchmark_la-benchmark_listener.Plo
include ./$(DEPDIR)/libbenchmark_la-benchmark_manager.Plo
include ./$(DEPDIR)/libbenchmark_la-benchmark_transformer.Plo
include ./$(DEPDIR)/libbenchmark_la-common_utils.Plo
include ./$(DEPDIR)/libbenchmark_la-cursor_statistics.Plo
include ./$(DEPDIR)/libbenchmark_la-dot_drawer.Plo
include ./$(DEPDIR)/libbenchmark_la-node.Plo
include ./$(DEPDIR)/libbenchmark_la-tree_builder.Plo
include ./$(DEPDIR)/libsupersonic_la-aggregate_clusters.Plo
include ./$(DEPDIR)/libsupersonic_la-aggregate_groups.Plo
include ./$(DEPDIR)/libsupersonic_la-aggregate_scalar.Plo
include ./$(DEPDIR)/libsupersonic_la-aggregator.Plo
include ./$(DEPDIR)/libsupersonic_la-arena.Plo
include ./$(DEPDIR)/libsupersonic_la-arithmetic_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-arithmetic_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-ascii_ctype.Plo
include ./$(DEPDIR)/libsupersonic_la-atomicops-internals-x86.Plo
include ./$(DEPDIR)/libsupersonic_la-basic_bound_expression.Plo
include ./$(DEPDIR)/libsupersonic_la-basic_cursor.Plo
include ./$(DEPDIR)/libsupersonic_la-basic_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-basic_operation.Plo
include ./$(DEPDIR)/libsupersonic_la-benchmark.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-benchmarks.Plo
include ./$(DEPDIR)/libsupersonic_la-bit_pointers.Plo
include ./$(DEPDIR)/libsupersonic_la-bits.Plo
include ./$(DEPDIR)/libsupersonic_la-block.Plo
include ./$(DEPDIR)/libsupersonic_la-bound_expression_factory.Plo
include ./$(DEPDIR)/libsupersonic_la-build_expression_from_proto.Plo
include ./$(DEPDIR)/libsupersonic_la-cast_bound_expression.Plo
include ./$(DEPDIR)/libsupersonic_la-cast_expression.Plo
include ./$(DEPDIR)/libsupersonic_la-charset.Plo
include ./$(DEPDIR)/libsupersonic_la-coalesce.Plo
include ./$(DEPDIR)/libsupersonic_la-column_aggregator.Plo
include ./$(DEPDIR)/libsupersonic_la-comparison_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-comparison_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-compute.Plo
include ./$(DEPDIR)/libsupersonic_la-copy_column.Plo
include ./$(DEPDIR)/libsupersonic_la-cursor.Plo
include ./$(DEPDIR)/libsupersonic_la-cursors.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-date_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-date_evaluators.Plo
include ./$(DEPDIR)/libsupersonic_la-date_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-demangle.Plo
include ./$(DEPDIR)/libsupersonic_la-double_buffered_block.Plo
include ./$(DEPDIR)/libsupersonic_la-elementary_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-elementary_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-escaping.Plo
include ./$(DEPDIR)/libsupersonic_la-expression.Plo
include ./$(DEPDIR)/libsupersonic_la-expression_utils.Plo
include ./$(DEPDIR)/libsupersonic_la-expressions.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-file.Plo
include ./$(DEPDIR)/libsupersonic_la-file_io.Plo
include ./$(DEPDIR)/libsupersonic_la-file_util.Plo
include ./$(DEPDIR)/libsupersonic_la-filter.Plo
include ./$(DEPDIR)/libsupersonic_la-foreign_filter.Plo
include ./$(DEPDIR)/libsupersonic_la-generate.Plo
include ./$(DEPDIR)/libsupersonic_la-hash.Plo
include ./$(DEPDIR)/libsupersonic_la-hash_join.Plo
include ./$(DEPDIR)/libsupersonic_la-hashing_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-hashing_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-human_readable.Plo
include ./$(DEPDIR)/libsupersonic_la-hybrid_group_utils.Plo
include ./$(DEPDIR)/libsupersonic_la-int128.Plo
include ./$(DEPDIR)/libsupersonic_la-iterators.Plo
include ./$(DEPDIR)/libsupersonic_la-join.Plo
include ./$(DEPDIR)/libsupersonic_la-limit.Plo
include ./$(DEPDIR)/libsupersonic_la-locking.Plo
include ./$(DEPDIR)/libsupersonic_la-lookup_index.Plo
include ./$(DEPDIR)/libsupersonic_la-math_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-math_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-mathlimits.Plo
include ./$(DEPDIR)/libsupersonic_la-memory.Plo
include ./$(DEPDIR)/libsupersonic_la-memutil.Plo
include ./$(DEPDIR)/libsupersonic_la-merge_union_all.Plo
include ./$(DEPDIR)/libsupersonic_la-numbers.Plo
include ./$(DEPDIR)/libsupersonic_la-once.Plo
include ./$(DEPDIR)/libsupersonic_la-operators.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-ordering.Plo
include ./$(DEPDIR)/libsupersonic_la-project.Plo
include ./$(DEPDIR)/libsupersonic_la-projecting_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-projecting_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-projector.Plo
include ./$(DEPDIR)/libsupersonic_la-random.Plo
include ./$(DEPDIR)/libsupersonic_la-row_hash_set.Plo
include ./$(DEPDIR)/libsupersonic_la-rowid_merge_join.Plo
include ./$(DEPDIR)/libsupersonic_la-scan_view.Plo
include ./$(DEPDIR)/libsupersonic_la-serialize.Plo
include ./$(DEPDIR)/libsupersonic_la-sort.Plo
include ./$(DEPDIR)/libsupersonic_la-specification.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-specification_builder.Plo
include ./$(DEPDIR)/libsupersonic_la-spinlock_wait.Plo
include ./$(DEPDIR)/libsupersonic_la-split.Plo
include ./$(DEPDIR)/libsupersonic_la-splitter.Plo
include ./$(DEPDIR)/libsupersonic_la-spy.Plo
include ./$(DEPDIR)/libsupersonic_la-stack_trace.Plo
include ./$(DEPDIR)/libsupersonic_la-stack_trace.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-stateful_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-stateful_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-strcat.Plo
include ./$(DEPDIR)/libsupersonic_la-string_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-string_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-stringpiece.Plo
include ./$(DEPDIR)/libsupersonic_la-stringprintf.Plo
include ./$(DEPDIR)/libsupersonic_la-strip.Plo
include ./$(DEPDIR)/libsupersonic_la-strtoint.Plo
include ./$(DEPDIR)/libsupersonic_la-substitute.Plo
include ./$(DEPDIR)/libsupersonic_la-supersonic.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-table.Plo
include ./$(DEPDIR)/libsupersonic_la-terminal_bound_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-terminal_expressions.Plo
include ./$(DEPDIR)/libsupersonic_la-tuple_schema.Plo
include ./$(DEPDIR)/libsupersonic_la-types.Plo
include ./$(DEPDIR)/libsupersonic_la-types.pb.Plo
include ./$(DEPDIR)/libsupersonic_la-types_infrastructure.Plo
include ./$(DEPDIR)/libsupersonic_la-util.Plo
include ./$(DEPDIR)/libsupersonic_la-vector_logic.Plo
include ./$(DEPDIR)/libsupersonic_la-view_copier.Plo
include ./$(DEPDIR)/libsupersonic_la-view_cursor.Plo
include ./$(DEPDIR)/libsupersonic_la-view_printer.Plo
include ./$(DEPDIR)/libsupersonic_la-walltime.Plo
include ./$(DEPDIR)/libsupersonic_la-writer.Plo
include ./$(DEPDIR)/libsupersonic_la-x86-gcc.Plo
include ./$(DEPDIR)/libtestutils_la-block_builder.Plo
include ./$(DEPDIR)/libtestutils_la-comparable_cursor.Plo
include ./$(DEPDIR)/libtestutils_la-comparable_tuple_schema.Plo
include ./$(DEPDIR)/libtestutils_la-comparable_view.Plo
include ./$(DEPDIR)/libtestutils_la-expression_test_helper.Plo
include ./$(DEPDIR)/libtestutils_la-operation_testing.Plo
include ./$(DEPDIR)/libtestutils_la-repeating_block.Plo
include ./$(DEPDIR)/libtestutils_la-row.Plo
include ./$(DEPDIR)/libtestutils_la-short_circuit_tester.Plo
include ./$(DEPDIR)/libtestutils_la-streamable.Plo
include ./$(DEPDIR)/libtestutils_la-view_comparator.Plo
include ./$(DEPDIR)/operation_example-operation_example.Po
include ./$(DEPDIR)/rune.Plo
include ./$(DEPDIR)/supersonic_guidetest-gmock-all.Po
include ./$(DEPDIR)/supersonic_guidetest-group_sort.Po
include ./$(DEPDIR)/supersonic_guidetest-gtest-all.Po
include ./$(DEPDIR)/supersonic_guidetest-join.Po
include ./$(DEPDIR)/supersonic_guidetest-primer.Po
include ./$(DEPDIR)/supersonic_guidetest-smoke_test.Po
include ./$(DEPDIR)/supersonic_guidetest-supersonic_test_main.Po
include ./$(DEPDIR)/test_base_exception-exception_test.Po
include ./$(DEPDIR)/test_base_exception-gmock-all.Po
include ./$(DEPDIR)/test_base_exception-gtest-all.Po
include ./$(DEPDIR)/test_base_exception-result_test.Po
include ./$(DEPDIR)/test_base_exception-supersonic_test_main.Po
include ./$(DEPDIR)/test_base_infrastructure-aggregation_operators_test.Po
include ./$(DEPDIR)/test_base_infrastructure-bit_pointers_test.Po
include ./$(DEPDIR)/test_base_infrastructure-block_test.Po
include ./$(DEPDIR)/test_base_infrastructure-copy_column_test.Po
include ./$(DEPDIR)/test_base_infrastructure-double_buffered_block_test.Po
include ./$(DEPDIR)/test_base_infrastructure-gmock-all.Po
include ./$(DEPDIR)/test_base_infrastructure-gtest-all.Po
include ./$(DEPDIR)/test_base_infrastructure-operators_test.Po
include ./$(DEPDIR)/test_base_infrastructure-projector_test.Po
include ./$(DEPDIR)/test_base_infrastructure-supersonic_test_main.Po
include ./$(DEPDIR)/test_base_infrastructure-types_infrastructure_test.Po
include ./$(DEPDIR)/test_base_infrastructure-types_test.Po
include ./$(DEPDIR)/test_base_infrastructure-variant_pointer_test.Po
include ./$(DEPDIR)/test_base_infrastructure-view_copier_test.Po
include ./$(DEPDIR)/test_base_memory-arena_test.Po
include ./$(DEPDIR)/test_base_memory-gmock-all.Po
include ./$(DEPDIR)/test_base_memory-gtest-all.Po
include ./$(DEPDIR)/test_base_memory-memory_mocks.Po
include ./$(DEPDIR)/test_base_memory-memory_test.Po
include ./$(DEPDIR)/test_base_memory-supersonic_test_main.Po
include ./$(DEPDIR)/test_benchmark_dot-dot_drawer_test.Po
include ./$(DEPDIR)/test_benchmark_dot-gmock-all.Po
include ./$(DEPDIR)/test_benchmark_dot-gtest-all.Po
include ./$(DEPDIR)/test_benchmark_dot-supersonic_test_main.Po
include ./$(DEPDIR)/test_benchmark_infrastructure-benchmark_listener_test.Po
include ./$(DEPDIR)/test_benchmark_infrastructure-benchmark_transformer_test.Po
include ./$(DEPDIR)/test_benchmark_infrastructure-gmock-all.Po
include ./$(DEPDIR)/test_benchmark_infrastructure-gtest-all.Po
include ./$(DEPDIR)/test_benchmark_infrastructure-node_test.Po
include ./$(DEPDIR)/test_benchmark_infrastructure-supersonic_test_main.Po
include ./$(DEPDIR)/test_benchmark_manager-benchmark_manager_test.Po
include ./$(DEPDIR)/test_benchmark_manager-gmock-all.Po
include ./$(DEPDIR)/test_benchmark_manager-gtest-all.Po
include ./$(DEPDIR)/test_benchmark_manager-supersonic_test_main.Po
include ./$(DEPDIR)/test_cursor_base-gmock-all.Po
include ./$(DEPDIR)/test_cursor_base-gtest-all.Po
include ./$(DEPDIR)/test_cursor_base-lookup_index_test.Po
include ./$(DEPDIR)/test_cursor_base-supersonic_test_main.Po
include ./$(DEPDIR)/test_cursor_core-aggregate_clusters_test.Po
include ./$(DEPDIR)/test_cursor_core-aggregate_groups_test.Po
include ./$(DEPDIR)/test_cursor_core-aggregate_scalar_test.Po
include ./$(DEPDIR)/test_cursor_core-coalesce_test.Po
include ./$(DEPDIR)/test_cursor_core-column_aggregator_test.Po
include ./$(DEPDIR)/test_cursor_core-compute_test.Po
include ./$(DEPDIR)/test_cursor_core-filter_test.Po
include ./$(DEPDIR)/test_cursor_core-foreign_filter_test.Po
include ./$(DEPDIR)/test_cursor_core-generate_test.Po
include ./$(DEPDIR)/test_cursor_core-gmock-all.Po
include ./$(DEPDIR)/test_cursor_core-gtest-all.Po
include ./$(DEPDIR)/test_cursor_core-hash_join_test.Po
include ./$(DEPDIR)/test_cursor_core-hybrid_aggregate_large_test.Po
include ./$(DEPDIR)/test_cursor_core-hybrid_aggregate_test.Po
include ./$(DEPDIR)/test_cursor_core-hybrid_group_utils_test.Po
include ./$(DEPDIR)/test_cursor_core-limit_test.Po
include ./$(DEPDIR)/test_cursor_core-merge_union_all_test.Po
include ./$(DEPDIR)/test_cursor_core-project_test.Po
include ./$(DEPDIR)/test_cursor_core-rowid_merge_join_test.Po
include ./$(DEPDIR)/test_cursor_core-scan_view_test.Po
include ./$(DEPDIR)/test_cursor_core-sort_test.Po
include ./$(DEPDIR)/test_cursor_core-specification_builder_test.Po
include ./$(DEPDIR)/test_cursor_core-splitter_test.Po
include ./$(DEPDIR)/test_cursor_core-supersonic_test_main.Po
include ./$(DEPDIR)/test_cursor_infrastructure-basic_operation_test.Po
include ./$(DEPDIR)/test_cursor_infrastructure-gmock-all.Po
include ./$(DEPDIR)/test_cursor_infrastructure-gtest-all.Po
include ./$(DEPDIR)/test_cursor_infrastructure-iterators_test.Po
include ./$(DEPDIR)/test_cursor_infrastructure-row_copier_test.Po
include ./$(DEPDIR)/test_cursor_infrastructure-row_hash_set_test.Po
include ./$(DEPDIR)/test_cursor_infrastructure-row_test.Po
include ./$(DEPDIR)/test_cursor_infrastructure-supersonic_test_main.Po
include ./$(DEPDIR)/test_cursor_infrastructure-table_test.Po
include ./$(DEPDIR)/test_cursor_infrastructure-view_cursor_test.Po
include ./$(DEPDIR)/test_cursor_infrastructure-writer_test.Po
include ./$(DEPDIR)/test_expression_core-arithmetic_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-arithmetic_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-case_expression_test.Po
include ./$(DEPDIR)/test_expression_core-comparison_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-date_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-date_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-elementary_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-elementary_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-gmock-all.Po
include ./$(DEPDIR)/test_expression_core-gtest-all.Po
include ./$(DEPDIR)/test_expression_core-math_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-math_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-projecting_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-projecting_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-stateful_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-stateful_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-string_bound_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-string_expressions_test.Po
include ./$(DEPDIR)/test_expression_core-supersonic_test_main.Po
include ./$(DEPDIR)/test_expression_infrastructure-basic_bound_expression_test.Po
include ./$(DEPDIR)/test_expression_infrastructure-expression_utils_test.Po
include ./$(DEPDIR)/test_expression_infrastructure-gmock-all.Po
include ./$(DEPDIR)/test_expression_infrastructure-gtest-all.Po
include ./$(DEPDIR)/test_expression_infrastructure-supersonic_test_main.Po
include ./$(DEPDIR)/test_expression_infrastructure-terminal_expressions_test.Po
include ./$(DEPDIR)/test_expression_templated-cast_bound_expression_test.Po
include ./$(DEPDIR)/test_expression_templated-cast_expression_test.Po
include ./$(DEPDIR)/test_expression_templated-gmock-all.Po
include ./$(DEPDIR)/test_expression_templated-gtest-all.Po
include ./$(DEPDIR)/test_expression_templated-supersonic_test_main.Po
include ./$(DEPDIR)/test_expression_vector-binary_column_computers_test.Po
include ./$(DEPDIR)/test_expression_vector-column_validity_checkers_test.Po
include ./$(DEPDIR)/test_expression_vector-gmock-all.Po
include ./$(DEPDIR)/test_expression_vector-gtest-all.Po
include ./$(DEPDIR)/test_expression_vector-supersonic_test_main.Po
include ./$(DEPDIR)/test_expression_vector-ternary_column_computers_test.Po
include ./$(DEPDIR)/test_expression_vector-unary_column_computers_test.Po
include ./$(DEPDIR)/test_expression_vector-vector_logic_test.Po
include ./$(DEPDIR)/test_expression_vector-vector_primitives_test.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

dynamic_annotations.lo: supersonic/utils/dynamic_annotations.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT dynamic_annotations.lo -MD -MP -MF $(DEPDIR)/dynamic_annotations.Tpo -c -o dynamic_annotations.lo `test -f 'supersonic/utils/dynamic_annotations.c' || echo '$(srcdir)/'`supersonic/utils/dynamic_annotations.c
	$(am__mv) $(DEPDIR)/dynamic_annotations.Tpo $(DEPDIR)/dynamic_annotations.Plo
#	source='supersonic/utils/dynamic_annotations.c' object='dynamic_annotations.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o dynamic_annotations.lo `test -f 'supersonic/utils/dynamic_annotations.c' || echo '$(srcdir)/'`supersonic/utils/dynamic_annotations.c

rune.lo: supersonic/utils/utf/rune.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT rune.lo -MD -MP -MF $(DEPDIR)/rune.Tpo -c -o rune.lo `test -f 'supersonic/utils/utf/rune.c' || echo '$(srcdir)/'`supersonic/utils/utf/rune.c
	$(am__mv) $(DEPDIR)/rune.Tpo $(DEPDIR)/rune.Plo
#	source='supersonic/utils/utf/rune.c' object='rune.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o rune.lo `test -f 'supersonic/utils/utf/rune.c' || echo '$(srcdir)/'`supersonic/utils/utf/rune.c

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

libbenchmark_la-dot_drawer.lo: supersonic/benchmark/dot/dot_drawer.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-dot_drawer.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-dot_drawer.Tpo -c -o libbenchmark_la-dot_drawer.lo `test -f 'supersonic/benchmark/dot/dot_drawer.cc' || echo '$(srcdir)/'`supersonic/benchmark/dot/dot_drawer.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-dot_drawer.Tpo $(DEPDIR)/libbenchmark_la-dot_drawer.Plo
#	source='supersonic/benchmark/dot/dot_drawer.cc' object='libbenchmark_la-dot_drawer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-dot_drawer.lo `test -f 'supersonic/benchmark/dot/dot_drawer.cc' || echo '$(srcdir)/'`supersonic/benchmark/dot/dot_drawer.cc

libbenchmark_la-common_utils.lo: supersonic/benchmark/examples/common_utils.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-common_utils.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-common_utils.Tpo -c -o libbenchmark_la-common_utils.lo `test -f 'supersonic/benchmark/examples/common_utils.cc' || echo '$(srcdir)/'`supersonic/benchmark/examples/common_utils.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-common_utils.Tpo $(DEPDIR)/libbenchmark_la-common_utils.Plo
#	source='supersonic/benchmark/examples/common_utils.cc' object='libbenchmark_la-common_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-common_utils.lo `test -f 'supersonic/benchmark/examples/common_utils.cc' || echo '$(srcdir)/'`supersonic/benchmark/examples/common_utils.cc

libbenchmark_la-benchmark_listener.lo: supersonic/benchmark/infrastructure/benchmark_listener.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-benchmark_listener.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-benchmark_listener.Tpo -c -o libbenchmark_la-benchmark_listener.lo `test -f 'supersonic/benchmark/infrastructure/benchmark_listener.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_listener.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-benchmark_listener.Tpo $(DEPDIR)/libbenchmark_la-benchmark_listener.Plo
#	source='supersonic/benchmark/infrastructure/benchmark_listener.cc' object='libbenchmark_la-benchmark_listener.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-benchmark_listener.lo `test -f 'supersonic/benchmark/infrastructure/benchmark_listener.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_listener.cc

libbenchmark_la-benchmark_transformer.lo: supersonic/benchmark/infrastructure/benchmark_transformer.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-benchmark_transformer.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-benchmark_transformer.Tpo -c -o libbenchmark_la-benchmark_transformer.lo `test -f 'supersonic/benchmark/infrastructure/benchmark_transformer.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_transformer.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-benchmark_transformer.Tpo $(DEPDIR)/libbenchmark_la-benchmark_transformer.Plo
#	source='supersonic/benchmark/infrastructure/benchmark_transformer.cc' object='libbenchmark_la-benchmark_transformer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-benchmark_transformer.lo `test -f 'supersonic/benchmark/infrastructure/benchmark_transformer.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_transformer.cc

libbenchmark_la-cursor_statistics.lo: supersonic/benchmark/infrastructure/cursor_statistics.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-cursor_statistics.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-cursor_statistics.Tpo -c -o libbenchmark_la-cursor_statistics.lo `test -f 'supersonic/benchmark/infrastructure/cursor_statistics.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/cursor_statistics.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-cursor_statistics.Tpo $(DEPDIR)/libbenchmark_la-cursor_statistics.Plo
#	source='supersonic/benchmark/infrastructure/cursor_statistics.cc' object='libbenchmark_la-cursor_statistics.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-cursor_statistics.lo `test -f 'supersonic/benchmark/infrastructure/cursor_statistics.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/cursor_statistics.cc

libbenchmark_la-node.lo: supersonic/benchmark/infrastructure/node.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-node.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-node.Tpo -c -o libbenchmark_la-node.lo `test -f 'supersonic/benchmark/infrastructure/node.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/node.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-node.Tpo $(DEPDIR)/libbenchmark_la-node.Plo
#	source='supersonic/benchmark/infrastructure/node.cc' object='libbenchmark_la-node.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-node.lo `test -f 'supersonic/benchmark/infrastructure/node.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/node.cc

libbenchmark_la-tree_builder.lo: supersonic/benchmark/infrastructure/tree_builder.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-tree_builder.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-tree_builder.Tpo -c -o libbenchmark_la-tree_builder.lo `test -f 'supersonic/benchmark/infrastructure/tree_builder.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/tree_builder.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-tree_builder.Tpo $(DEPDIR)/libbenchmark_la-tree_builder.Plo
#	source='supersonic/benchmark/infrastructure/tree_builder.cc' object='libbenchmark_la-tree_builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-tree_builder.lo `test -f 'supersonic/benchmark/infrastructure/tree_builder.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/tree_builder.cc

libbenchmark_la-benchmark_manager.lo: supersonic/benchmark/manager/benchmark_manager.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -MT libbenchmark_la-benchmark_manager.lo -MD -MP -MF $(DEPDIR)/libbenchmark_la-benchmark_manager.Tpo -c -o libbenchmark_la-benchmark_manager.lo `test -f 'supersonic/benchmark/manager/benchmark_manager.cc' || echo '$(srcdir)/'`supersonic/benchmark/manager/benchmark_manager.cc
	$(am__mv) $(DEPDIR)/libbenchmark_la-benchmark_manager.Tpo $(DEPDIR)/libbenchmark_la-benchmark_manager.Plo
#	source='supersonic/benchmark/manager/benchmark_manager.cc' object='libbenchmark_la-benchmark_manager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libbenchmark_la_CXXFLAGS) $(CXXFLAGS) -c -o libbenchmark_la-benchmark_manager.lo `test -f 'supersonic/benchmark/manager/benchmark_manager.cc' || echo '$(srcdir)/'`supersonic/benchmark/manager/benchmark_manager.cc

libsupersonic_la-stack_trace.pb.lo: supersonic/utils/exception/stack_trace.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-stack_trace.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-stack_trace.pb.Tpo -c -o libsupersonic_la-stack_trace.pb.lo `test -f 'supersonic/utils/exception/stack_trace.pb.cc' || echo '$(srcdir)/'`supersonic/utils/exception/stack_trace.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-stack_trace.pb.Tpo $(DEPDIR)/libsupersonic_la-stack_trace.pb.Plo
#	source='supersonic/utils/exception/stack_trace.pb.cc' object='libsupersonic_la-stack_trace.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-stack_trace.pb.lo `test -f 'supersonic/utils/exception/stack_trace.pb.cc' || echo '$(srcdir)/'`supersonic/utils/exception/stack_trace.pb.cc

libsupersonic_la-expressions.pb.lo: supersonic/utils/proto/expressions.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-expressions.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-expressions.pb.Tpo -c -o libsupersonic_la-expressions.pb.lo `test -f 'supersonic/utils/proto/expressions.pb.cc' || echo '$(srcdir)/'`supersonic/utils/proto/expressions.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-expressions.pb.Tpo $(DEPDIR)/libsupersonic_la-expressions.pb.Plo
#	source='supersonic/utils/proto/expressions.pb.cc' object='libsupersonic_la-expressions.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-expressions.pb.lo `test -f 'supersonic/utils/proto/expressions.pb.cc' || echo '$(srcdir)/'`supersonic/utils/proto/expressions.pb.cc

libsupersonic_la-types.pb.lo: supersonic/utils/proto/types.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-types.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-types.pb.Tpo -c -o libsupersonic_la-types.pb.lo `test -f 'supersonic/utils/proto/types.pb.cc' || echo '$(srcdir)/'`supersonic/utils/proto/types.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-types.pb.Tpo $(DEPDIR)/libsupersonic_la-types.pb.Plo
#	source='supersonic/utils/proto/types.pb.cc' object='libsupersonic_la-types.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-types.pb.lo `test -f 'supersonic/utils/proto/types.pb.cc' || echo '$(srcdir)/'`supersonic/utils/proto/types.pb.cc

libsupersonic_la-benchmark.pb.lo: supersonic/benchmark/proto/benchmark.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-benchmark.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-benchmark.pb.Tpo -c -o libsupersonic_la-benchmark.pb.lo `test -f 'supersonic/benchmark/proto/benchmark.pb.cc' || echo '$(srcdir)/'`supersonic/benchmark/proto/benchmark.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-benchmark.pb.Tpo $(DEPDIR)/libsupersonic_la-benchmark.pb.Plo
#	source='supersonic/benchmark/proto/benchmark.pb.cc' object='libsupersonic_la-benchmark.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-benchmark.pb.lo `test -f 'supersonic/benchmark/proto/benchmark.pb.cc' || echo '$(srcdir)/'`supersonic/benchmark/proto/benchmark.pb.cc

libsupersonic_la-cursors.pb.lo: supersonic/cursor/proto/cursors.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-cursors.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-cursors.pb.Tpo -c -o libsupersonic_la-cursors.pb.lo `test -f 'supersonic/cursor/proto/cursors.pb.cc' || echo '$(srcdir)/'`supersonic/cursor/proto/cursors.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-cursors.pb.Tpo $(DEPDIR)/libsupersonic_la-cursors.pb.Plo
#	source='supersonic/cursor/proto/cursors.pb.cc' object='libsupersonic_la-cursors.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-cursors.pb.lo `test -f 'supersonic/cursor/proto/cursors.pb.cc' || echo '$(srcdir)/'`supersonic/cursor/proto/cursors.pb.cc

libsupersonic_la-operators.pb.lo: supersonic/expression/proto/operators.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-operators.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-operators.pb.Tpo -c -o libsupersonic_la-operators.pb.lo `test -f 'supersonic/expression/proto/operators.pb.cc' || echo '$(srcdir)/'`supersonic/expression/proto/operators.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-operators.pb.Tpo $(DEPDIR)/libsupersonic_la-operators.pb.Plo
#	source='supersonic/expression/proto/operators.pb.cc' object='libsupersonic_la-operators.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-operators.pb.lo `test -f 'supersonic/expression/proto/operators.pb.cc' || echo '$(srcdir)/'`supersonic/expression/proto/operators.pb.cc

libsupersonic_la-specification.pb.lo: supersonic/proto/specification.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-specification.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-specification.pb.Tpo -c -o libsupersonic_la-specification.pb.lo `test -f 'supersonic/proto/specification.pb.cc' || echo '$(srcdir)/'`supersonic/proto/specification.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-specification.pb.Tpo $(DEPDIR)/libsupersonic_la-specification.pb.Plo
#	source='supersonic/proto/specification.pb.cc' object='libsupersonic_la-specification.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-specification.pb.lo `test -f 'supersonic/proto/specification.pb.cc' || echo '$(srcdir)/'`supersonic/proto/specification.pb.cc

libsupersonic_la-supersonic.pb.lo: supersonic/proto/supersonic.pb.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-supersonic.pb.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-supersonic.pb.Tpo -c -o libsupersonic_la-supersonic.pb.lo `test -f 'supersonic/proto/supersonic.pb.cc' || echo '$(srcdir)/'`supersonic/proto/supersonic.pb.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-supersonic.pb.Tpo $(DEPDIR)/libsupersonic_la-supersonic.pb.Plo
#	source='supersonic/proto/supersonic.pb.cc' object='libsupersonic_la-supersonic.pb.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-supersonic.pb.lo `test -f 'supersonic/proto/supersonic.pb.cc' || echo '$(srcdir)/'`supersonic/proto/supersonic.pb.cc

libsupersonic_la-atomicops-internals-x86.lo: supersonic/utils/atomicops-internals-x86.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-atomicops-internals-x86.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-atomicops-internals-x86.Tpo -c -o libsupersonic_la-atomicops-internals-x86.lo `test -f 'supersonic/utils/atomicops-internals-x86.cc' || echo '$(srcdir)/'`supersonic/utils/atomicops-internals-x86.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-atomicops-internals-x86.Tpo $(DEPDIR)/libsupersonic_la-atomicops-internals-x86.Plo
#	source='supersonic/utils/atomicops-internals-x86.cc' object='libsupersonic_la-atomicops-internals-x86.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-atomicops-internals-x86.lo `test -f 'supersonic/utils/atomicops-internals-x86.cc' || echo '$(srcdir)/'`supersonic/utils/atomicops-internals-x86.cc

libsupersonic_la-bits.lo: supersonic/utils/bits.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-bits.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-bits.Tpo -c -o libsupersonic_la-bits.lo `test -f 'supersonic/utils/bits.cc' || echo '$(srcdir)/'`supersonic/utils/bits.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-bits.Tpo $(DEPDIR)/libsupersonic_la-bits.Plo
#	source='supersonic/utils/bits.cc' object='libsupersonic_la-bits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-bits.lo `test -f 'supersonic/utils/bits.cc' || echo '$(srcdir)/'`supersonic/utils/bits.cc

libsupersonic_la-demangle.lo: supersonic/utils/demangle.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-demangle.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-demangle.Tpo -c -o libsupersonic_la-demangle.lo `test -f 'supersonic/utils/demangle.cc' || echo '$(srcdir)/'`supersonic/utils/demangle.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-demangle.Tpo $(DEPDIR)/libsupersonic_la-demangle.Plo
#	source='supersonic/utils/demangle.cc' object='libsupersonic_la-demangle.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-demangle.lo `test -f 'supersonic/utils/demangle.cc' || echo '$(srcdir)/'`supersonic/utils/demangle.cc

libsupersonic_la-int128.lo: supersonic/utils/int128.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-int128.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-int128.Tpo -c -o libsupersonic_la-int128.lo `test -f 'supersonic/utils/int128.cc' || echo '$(srcdir)/'`supersonic/utils/int128.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-int128.Tpo $(DEPDIR)/libsupersonic_la-int128.Plo
#	source='supersonic/utils/int128.cc' object='libsupersonic_la-int128.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-int128.lo `test -f 'supersonic/utils/int128.cc' || echo '$(srcdir)/'`supersonic/utils/int128.cc

libsupersonic_la-mathlimits.lo: supersonic/utils/mathlimits.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-mathlimits.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-mathlimits.Tpo -c -o libsupersonic_la-mathlimits.lo `test -f 'supersonic/utils/mathlimits.cc' || echo '$(srcdir)/'`supersonic/utils/mathlimits.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-mathlimits.Tpo $(DEPDIR)/libsupersonic_la-mathlimits.Plo
#	source='supersonic/utils/mathlimits.cc' object='libsupersonic_la-mathlimits.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-mathlimits.lo `test -f 'supersonic/utils/mathlimits.cc' || echo '$(srcdir)/'`supersonic/utils/mathlimits.cc

libsupersonic_la-once.lo: supersonic/utils/once.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-once.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-once.Tpo -c -o libsupersonic_la-once.lo `test -f 'supersonic/utils/once.cc' || echo '$(srcdir)/'`supersonic/utils/once.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-once.Tpo $(DEPDIR)/libsupersonic_la-once.Plo
#	source='supersonic/utils/once.cc' object='libsupersonic_la-once.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-once.lo `test -f 'supersonic/utils/once.cc' || echo '$(srcdir)/'`supersonic/utils/once.cc

libsupersonic_la-spinlock_wait.lo: supersonic/utils/spinlock_wait.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-spinlock_wait.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-spinlock_wait.Tpo -c -o libsupersonic_la-spinlock_wait.lo `test -f 'supersonic/utils/spinlock_wait.cc' || echo '$(srcdir)/'`supersonic/utils/spinlock_wait.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-spinlock_wait.Tpo $(DEPDIR)/libsupersonic_la-spinlock_wait.Plo
#	source='supersonic/utils/spinlock_wait.cc' object='libsupersonic_la-spinlock_wait.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-spinlock_wait.lo `test -f 'supersonic/utils/spinlock_wait.cc' || echo '$(srcdir)/'`supersonic/utils/spinlock_wait.cc

libsupersonic_la-strtoint.lo: supersonic/utils/strtoint.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-strtoint.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-strtoint.Tpo -c -o libsupersonic_la-strtoint.lo `test -f 'supersonic/utils/strtoint.cc' || echo '$(srcdir)/'`supersonic/utils/strtoint.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-strtoint.Tpo $(DEPDIR)/libsupersonic_la-strtoint.Plo
#	source='supersonic/utils/strtoint.cc' object='libsupersonic_la-strtoint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-strtoint.lo `test -f 'supersonic/utils/strtoint.cc' || echo '$(srcdir)/'`supersonic/utils/strtoint.cc

libsupersonic_la-stringprintf.lo: supersonic/utils/stringprintf.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-stringprintf.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-stringprintf.Tpo -c -o libsupersonic_la-stringprintf.lo `test -f 'supersonic/utils/stringprintf.cc' || echo '$(srcdir)/'`supersonic/utils/stringprintf.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-stringprintf.Tpo $(DEPDIR)/libsupersonic_la-stringprintf.Plo
#	source='supersonic/utils/stringprintf.cc' object='libsupersonic_la-stringprintf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-stringprintf.lo `test -f 'supersonic/utils/stringprintf.cc' || echo '$(srcdir)/'`supersonic/utils/stringprintf.cc

libsupersonic_la-locking.lo: supersonic/utils/atomic/locking.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-locking.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-locking.Tpo -c -o libsupersonic_la-locking.lo `test -f 'supersonic/utils/atomic/locking.cc' || echo '$(srcdir)/'`supersonic/utils/atomic/locking.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-locking.Tpo $(DEPDIR)/libsupersonic_la-locking.Plo
#	source='supersonic/utils/atomic/locking.cc' object='libsupersonic_la-locking.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-locking.lo `test -f 'supersonic/utils/atomic/locking.cc' || echo '$(srcdir)/'`supersonic/utils/atomic/locking.cc

libsupersonic_la-x86-gcc.lo: supersonic/utils/atomic/x86-gcc.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-x86-gcc.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-x86-gcc.Tpo -c -o libsupersonic_la-x86-gcc.lo `test -f 'supersonic/utils/atomic/x86-gcc.cc' || echo '$(srcdir)/'`supersonic/utils/atomic/x86-gcc.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-x86-gcc.Tpo $(DEPDIR)/libsupersonic_la-x86-gcc.Plo
#	source='supersonic/utils/atomic/x86-gcc.cc' object='libsupersonic_la-x86-gcc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-x86-gcc.lo `test -f 'supersonic/utils/atomic/x86-gcc.cc' || echo '$(srcdir)/'`supersonic/utils/atomic/x86-gcc.cc

libsupersonic_la-hash.lo: supersonic/utils/hash/hash.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-hash.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-hash.Tpo -c -o libsupersonic_la-hash.lo `test -f 'supersonic/utils/hash/hash.cc' || echo '$(srcdir)/'`supersonic/utils/hash/hash.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-hash.Tpo $(DEPDIR)/libsupersonic_la-hash.Plo
#	source='supersonic/utils/hash/hash.cc' object='libsupersonic_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-hash.lo `test -f 'supersonic/utils/hash/hash.cc' || echo '$(srcdir)/'`supersonic/utils/hash/hash.cc

libsupersonic_la-stack_trace.lo: supersonic/utils/exception/stack_trace.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-stack_trace.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-stack_trace.Tpo -c -o libsupersonic_la-stack_trace.lo `test -f 'supersonic/utils/exception/stack_trace.cc' || echo '$(srcdir)/'`supersonic/utils/exception/stack_trace.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-stack_trace.Tpo $(DEPDIR)/libsupersonic_la-stack_trace.Plo
#	source='supersonic/utils/exception/stack_trace.cc' object='libsupersonic_la-stack_trace.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-stack_trace.lo `test -f 'supersonic/utils/exception/stack_trace.cc' || echo '$(srcdir)/'`supersonic/utils/exception/stack_trace.cc

libsupersonic_la-join.lo: supersonic/utils/strings/join.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-join.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-join.Tpo -c -o libsupersonic_la-join.lo `test -f 'supersonic/utils/strings/join.cc' || echo '$(srcdir)/'`supersonic/utils/strings/join.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-join.Tpo $(DEPDIR)/libsupersonic_la-join.Plo
#	source='supersonic/utils/strings/join.cc' object='libsupersonic_la-join.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-join.lo `test -f 'supersonic/utils/strings/join.cc' || echo '$(srcdir)/'`supersonic/utils/strings/join.cc

libsupersonic_la-stringpiece.lo: supersonic/utils/strings/stringpiece.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-stringpiece.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-stringpiece.Tpo -c -o libsupersonic_la-stringpiece.lo `test -f 'supersonic/utils/strings/stringpiece.cc' || echo '$(srcdir)/'`supersonic/utils/strings/stringpiece.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-stringpiece.Tpo $(DEPDIR)/libsupersonic_la-stringpiece.Plo
#	source='supersonic/utils/strings/stringpiece.cc' object='libsupersonic_la-stringpiece.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-stringpiece.lo `test -f 'supersonic/utils/strings/stringpiece.cc' || echo '$(srcdir)/'`supersonic/utils/strings/stringpiece.cc

libsupersonic_la-ascii_ctype.lo: supersonic/utils/strings/ascii_ctype.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-ascii_ctype.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-ascii_ctype.Tpo -c -o libsupersonic_la-ascii_ctype.lo `test -f 'supersonic/utils/strings/ascii_ctype.cc' || echo '$(srcdir)/'`supersonic/utils/strings/ascii_ctype.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-ascii_ctype.Tpo $(DEPDIR)/libsupersonic_la-ascii_ctype.Plo
#	source='supersonic/utils/strings/ascii_ctype.cc' object='libsupersonic_la-ascii_ctype.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-ascii_ctype.lo `test -f 'supersonic/utils/strings/ascii_ctype.cc' || echo '$(srcdir)/'`supersonic/utils/strings/ascii_ctype.cc

libsupersonic_la-charset.lo: supersonic/utils/strings/charset.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-charset.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-charset.Tpo -c -o libsupersonic_la-charset.lo `test -f 'supersonic/utils/strings/charset.cc' || echo '$(srcdir)/'`supersonic/utils/strings/charset.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-charset.Tpo $(DEPDIR)/libsupersonic_la-charset.Plo
#	source='supersonic/utils/strings/charset.cc' object='libsupersonic_la-charset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-charset.lo `test -f 'supersonic/utils/strings/charset.cc' || echo '$(srcdir)/'`supersonic/utils/strings/charset.cc

libsupersonic_la-escaping.lo: supersonic/utils/strings/escaping.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-escaping.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-escaping.Tpo -c -o libsupersonic_la-escaping.lo `test -f 'supersonic/utils/strings/escaping.cc' || echo '$(srcdir)/'`supersonic/utils/strings/escaping.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-escaping.Tpo $(DEPDIR)/libsupersonic_la-escaping.Plo
#	source='supersonic/utils/strings/escaping.cc' object='libsupersonic_la-escaping.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-escaping.lo `test -f 'supersonic/utils/strings/escaping.cc' || echo '$(srcdir)/'`supersonic/utils/strings/escaping.cc

libsupersonic_la-human_readable.lo: supersonic/utils/strings/human_readable.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-human_readable.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-human_readable.Tpo -c -o libsupersonic_la-human_readable.lo `test -f 'supersonic/utils/strings/human_readable.cc' || echo '$(srcdir)/'`supersonic/utils/strings/human_readable.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-human_readable.Tpo $(DEPDIR)/libsupersonic_la-human_readable.Plo
#	source='supersonic/utils/strings/human_readable.cc' object='libsupersonic_la-human_readable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-human_readable.lo `test -f 'supersonic/utils/strings/human_readable.cc' || echo '$(srcdir)/'`supersonic/utils/strings/human_readable.cc

libsupersonic_la-memutil.lo: supersonic/utils/strings/memutil.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-memutil.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-memutil.Tpo -c -o libsupersonic_la-memutil.lo `test -f 'supersonic/utils/strings/memutil.cc' || echo '$(srcdir)/'`supersonic/utils/strings/memutil.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-memutil.Tpo $(DEPDIR)/libsupersonic_la-memutil.Plo
#	source='supersonic/utils/strings/memutil.cc' object='libsupersonic_la-memutil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-memutil.lo `test -f 'supersonic/utils/strings/memutil.cc' || echo '$(srcdir)/'`supersonic/utils/strings/memutil.cc

libsupersonic_la-numbers.lo: supersonic/utils/strings/numbers.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-numbers.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-numbers.Tpo -c -o libsupersonic_la-numbers.lo `test -f 'supersonic/utils/strings/numbers.cc' || echo '$(srcdir)/'`supersonic/utils/strings/numbers.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-numbers.Tpo $(DEPDIR)/libsupersonic_la-numbers.Plo
#	source='supersonic/utils/strings/numbers.cc' object='libsupersonic_la-numbers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-numbers.lo `test -f 'supersonic/utils/strings/numbers.cc' || echo '$(srcdir)/'`supersonic/utils/strings/numbers.cc

libsupersonic_la-serialize.lo: supersonic/utils/strings/serialize.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-serialize.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-serialize.Tpo -c -o libsupersonic_la-serialize.lo `test -f 'supersonic/utils/strings/serialize.cc' || echo '$(srcdir)/'`supersonic/utils/strings/serialize.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-serialize.Tpo $(DEPDIR)/libsupersonic_la-serialize.Plo
#	source='supersonic/utils/strings/serialize.cc' object='libsupersonic_la-serialize.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-serialize.lo `test -f 'supersonic/utils/strings/serialize.cc' || echo '$(srcdir)/'`supersonic/utils/strings/serialize.cc

libsupersonic_la-split.lo: supersonic/utils/strings/split.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-split.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-split.Tpo -c -o libsupersonic_la-split.lo `test -f 'supersonic/utils/strings/split.cc' || echo '$(srcdir)/'`supersonic/utils/strings/split.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-split.Tpo $(DEPDIR)/libsupersonic_la-split.Plo
#	source='supersonic/utils/strings/split.cc' object='libsupersonic_la-split.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-split.lo `test -f 'supersonic/utils/strings/split.cc' || echo '$(srcdir)/'`supersonic/utils/strings/split.cc

libsupersonic_la-strcat.lo: supersonic/utils/strings/strcat.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-strcat.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-strcat.Tpo -c -o libsupersonic_la-strcat.lo `test -f 'supersonic/utils/strings/strcat.cc' || echo '$(srcdir)/'`supersonic/utils/strings/strcat.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-strcat.Tpo $(DEPDIR)/libsupersonic_la-strcat.Plo
#	source='supersonic/utils/strings/strcat.cc' object='libsupersonic_la-strcat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-strcat.lo `test -f 'supersonic/utils/strings/strcat.cc' || echo '$(srcdir)/'`supersonic/utils/strings/strcat.cc

libsupersonic_la-substitute.lo: supersonic/utils/strings/substitute.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-substitute.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-substitute.Tpo -c -o libsupersonic_la-substitute.lo `test -f 'supersonic/utils/strings/substitute.cc' || echo '$(srcdir)/'`supersonic/utils/strings/substitute.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-substitute.Tpo $(DEPDIR)/libsupersonic_la-substitute.Plo
#	source='supersonic/utils/strings/substitute.cc' object='libsupersonic_la-substitute.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-substitute.lo `test -f 'supersonic/utils/strings/substitute.cc' || echo '$(srcdir)/'`supersonic/utils/strings/substitute.cc

libsupersonic_la-strip.lo: supersonic/utils/strings/strip.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-strip.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-strip.Tpo -c -o libsupersonic_la-strip.lo `test -f 'supersonic/utils/strings/strip.cc' || echo '$(srcdir)/'`supersonic/utils/strings/strip.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-strip.Tpo $(DEPDIR)/libsupersonic_la-strip.Plo
#	source='supersonic/utils/strings/strip.cc' object='libsupersonic_la-strip.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-strip.lo `test -f 'supersonic/utils/strings/strip.cc' || echo '$(srcdir)/'`supersonic/utils/strings/strip.cc

libsupersonic_la-util.lo: supersonic/utils/strings/util.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-util.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-util.Tpo -c -o libsupersonic_la-util.lo `test -f 'supersonic/utils/strings/util.cc' || echo '$(srcdir)/'`supersonic/utils/strings/util.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-util.Tpo $(DEPDIR)/libsupersonic_la-util.Plo
#	source='supersonic/utils/strings/util.cc' object='libsupersonic_la-util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-util.lo `test -f 'supersonic/utils/strings/util.cc' || echo '$(srcdir)/'`supersonic/utils/strings/util.cc

libsupersonic_la-random.lo: supersonic/utils/random.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-random.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-random.Tpo -c -o libsupersonic_la-random.lo `test -f 'supersonic/utils/random.cc' || echo '$(srcdir)/'`supersonic/utils/random.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-random.Tpo $(DEPDIR)/libsupersonic_la-random.Plo
#	source='supersonic/utils/random.cc' object='libsupersonic_la-random.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-random.lo `test -f 'supersonic/utils/random.cc' || echo '$(srcdir)/'`supersonic/utils/random.cc

libsupersonic_la-walltime.lo: supersonic/utils/walltime.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-walltime.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-walltime.Tpo -c -o libsupersonic_la-walltime.lo `test -f 'supersonic/utils/walltime.cc' || echo '$(srcdir)/'`supersonic/utils/walltime.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-walltime.Tpo $(DEPDIR)/libsupersonic_la-walltime.Plo
#	source='supersonic/utils/walltime.cc' object='libsupersonic_la-walltime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-walltime.lo `test -f 'supersonic/utils/walltime.cc' || echo '$(srcdir)/'`supersonic/utils/walltime.cc

libsupersonic_la-file.lo: supersonic/utils/file.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-file.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-file.Tpo -c -o libsupersonic_la-file.lo `test -f 'supersonic/utils/file.cc' || echo '$(srcdir)/'`supersonic/utils/file.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-file.Tpo $(DEPDIR)/libsupersonic_la-file.Plo
#	source='supersonic/utils/file.cc' object='libsupersonic_la-file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-file.lo `test -f 'supersonic/utils/file.cc' || echo '$(srcdir)/'`supersonic/utils/file.cc

libsupersonic_la-file_util.lo: supersonic/utils/file_util.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-file_util.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-file_util.Tpo -c -o libsupersonic_la-file_util.lo `test -f 'supersonic/utils/file_util.cc' || echo '$(srcdir)/'`supersonic/utils/file_util.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-file_util.Tpo $(DEPDIR)/libsupersonic_la-file_util.Plo
#	source='supersonic/utils/file_util.cc' object='libsupersonic_la-file_util.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-file_util.lo `test -f 'supersonic/utils/file_util.cc' || echo '$(srcdir)/'`supersonic/utils/file_util.cc

libsupersonic_la-bit_pointers.lo: supersonic/base/infrastructure/bit_pointers.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-bit_pointers.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-bit_pointers.Tpo -c -o libsupersonic_la-bit_pointers.lo `test -f 'supersonic/base/infrastructure/bit_pointers.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/bit_pointers.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-bit_pointers.Tpo $(DEPDIR)/libsupersonic_la-bit_pointers.Plo
#	source='supersonic/base/infrastructure/bit_pointers.cc' object='libsupersonic_la-bit_pointers.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-bit_pointers.lo `test -f 'supersonic/base/infrastructure/bit_pointers.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/bit_pointers.cc

libsupersonic_la-block.lo: supersonic/base/infrastructure/block.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-block.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-block.Tpo -c -o libsupersonic_la-block.lo `test -f 'supersonic/base/infrastructure/block.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/block.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-block.Tpo $(DEPDIR)/libsupersonic_la-block.Plo
#	source='supersonic/base/infrastructure/block.cc' object='libsupersonic_la-block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-block.lo `test -f 'supersonic/base/infrastructure/block.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/block.cc

libsupersonic_la-copy_column.lo: supersonic/base/infrastructure/copy_column.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-copy_column.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-copy_column.Tpo -c -o libsupersonic_la-copy_column.lo `test -f 'supersonic/base/infrastructure/copy_column.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/copy_column.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-copy_column.Tpo $(DEPDIR)/libsupersonic_la-copy_column.Plo
#	source='supersonic/base/infrastructure/copy_column.cc' object='libsupersonic_la-copy_column.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-copy_column.lo `test -f 'supersonic/base/infrastructure/copy_column.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/copy_column.cc

libsupersonic_la-double_buffered_block.lo: supersonic/base/infrastructure/double_buffered_block.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-double_buffered_block.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-double_buffered_block.Tpo -c -o libsupersonic_la-double_buffered_block.lo `test -f 'supersonic/base/infrastructure/double_buffered_block.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/double_buffered_block.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-double_buffered_block.Tpo $(DEPDIR)/libsupersonic_la-double_buffered_block.Plo
#	source='supersonic/base/infrastructure/double_buffered_block.cc' object='libsupersonic_la-double_buffered_block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-double_buffered_block.lo `test -f 'supersonic/base/infrastructure/double_buffered_block.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/double_buffered_block.cc

libsupersonic_la-projector.lo: supersonic/base/infrastructure/projector.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-projector.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-projector.Tpo -c -o libsupersonic_la-projector.lo `test -f 'supersonic/base/infrastructure/projector.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/projector.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-projector.Tpo $(DEPDIR)/libsupersonic_la-projector.Plo
#	source='supersonic/base/infrastructure/projector.cc' object='libsupersonic_la-projector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-projector.lo `test -f 'supersonic/base/infrastructure/projector.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/projector.cc

libsupersonic_la-tuple_schema.lo: supersonic/base/infrastructure/tuple_schema.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-tuple_schema.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-tuple_schema.Tpo -c -o libsupersonic_la-tuple_schema.lo `test -f 'supersonic/base/infrastructure/tuple_schema.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/tuple_schema.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-tuple_schema.Tpo $(DEPDIR)/libsupersonic_la-tuple_schema.Plo
#	source='supersonic/base/infrastructure/tuple_schema.cc' object='libsupersonic_la-tuple_schema.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-tuple_schema.lo `test -f 'supersonic/base/infrastructure/tuple_schema.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/tuple_schema.cc

libsupersonic_la-types_infrastructure.lo: supersonic/base/infrastructure/types_infrastructure.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-types_infrastructure.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-types_infrastructure.Tpo -c -o libsupersonic_la-types_infrastructure.lo `test -f 'supersonic/base/infrastructure/types_infrastructure.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types_infrastructure.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-types_infrastructure.Tpo $(DEPDIR)/libsupersonic_la-types_infrastructure.Plo
#	source='supersonic/base/infrastructure/types_infrastructure.cc' object='libsupersonic_la-types_infrastructure.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-types_infrastructure.lo `test -f 'supersonic/base/infrastructure/types_infrastructure.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types_infrastructure.cc

libsupersonic_la-types.lo: supersonic/base/infrastructure/types.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-types.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-types.Tpo -c -o libsupersonic_la-types.lo `test -f 'supersonic/base/infrastructure/types.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-types.Tpo $(DEPDIR)/libsupersonic_la-types.Plo
#	source='supersonic/base/infrastructure/types.cc' object='libsupersonic_la-types.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-types.lo `test -f 'supersonic/base/infrastructure/types.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types.cc

libsupersonic_la-view_copier.lo: supersonic/base/infrastructure/view_copier.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-view_copier.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-view_copier.Tpo -c -o libsupersonic_la-view_copier.lo `test -f 'supersonic/base/infrastructure/view_copier.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/view_copier.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-view_copier.Tpo $(DEPDIR)/libsupersonic_la-view_copier.Plo
#	source='supersonic/base/infrastructure/view_copier.cc' object='libsupersonic_la-view_copier.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-view_copier.lo `test -f 'supersonic/base/infrastructure/view_copier.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/view_copier.cc

libsupersonic_la-arena.lo: supersonic/base/memory/arena.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-arena.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-arena.Tpo -c -o libsupersonic_la-arena.lo `test -f 'supersonic/base/memory/arena.cc' || echo '$(srcdir)/'`supersonic/base/memory/arena.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-arena.Tpo $(DEPDIR)/libsupersonic_la-arena.Plo
#	source='supersonic/base/memory/arena.cc' object='libsupersonic_la-arena.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-arena.lo `test -f 'supersonic/base/memory/arena.cc' || echo '$(srcdir)/'`supersonic/base/memory/arena.cc

libsupersonic_la-memory.lo: supersonic/base/memory/memory.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-memory.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-memory.Tpo -c -o libsupersonic_la-memory.lo `test -f 'supersonic/base/memory/memory.cc' || echo '$(srcdir)/'`supersonic/base/memory/memory.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-memory.Tpo $(DEPDIR)/libsupersonic_la-memory.Plo
#	source='supersonic/base/memory/memory.cc' object='libsupersonic_la-memory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-memory.lo `test -f 'supersonic/base/memory/memory.cc' || echo '$(srcdir)/'`supersonic/base/memory/memory.cc

libsupersonic_la-cursor.lo: supersonic/cursor/base/cursor.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-cursor.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-cursor.Tpo -c -o libsupersonic_la-cursor.lo `test -f 'supersonic/cursor/base/cursor.cc' || echo '$(srcdir)/'`supersonic/cursor/base/cursor.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-cursor.Tpo $(DEPDIR)/libsupersonic_la-cursor.Plo
#	source='supersonic/cursor/base/cursor.cc' object='libsupersonic_la-cursor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-cursor.lo `test -f 'supersonic/cursor/base/cursor.cc' || echo '$(srcdir)/'`supersonic/cursor/base/cursor.cc

libsupersonic_la-lookup_index.lo: supersonic/cursor/base/lookup_index.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-lookup_index.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-lookup_index.Tpo -c -o libsupersonic_la-lookup_index.lo `test -f 'supersonic/cursor/base/lookup_index.cc' || echo '$(srcdir)/'`supersonic/cursor/base/lookup_index.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-lookup_index.Tpo $(DEPDIR)/libsupersonic_la-lookup_index.Plo
#	source='supersonic/cursor/base/lookup_index.cc' object='libsupersonic_la-lookup_index.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-lookup_index.lo `test -f 'supersonic/cursor/base/lookup_index.cc' || echo '$(srcdir)/'`supersonic/cursor/base/lookup_index.cc

libsupersonic_la-aggregate_clusters.lo: supersonic/cursor/core/aggregate_clusters.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-aggregate_clusters.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-aggregate_clusters.Tpo -c -o libsupersonic_la-aggregate_clusters.lo `test -f 'supersonic/cursor/core/aggregate_clusters.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_clusters.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-aggregate_clusters.Tpo $(DEPDIR)/libsupersonic_la-aggregate_clusters.Plo
#	source='supersonic/cursor/core/aggregate_clusters.cc' object='libsupersonic_la-aggregate_clusters.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-aggregate_clusters.lo `test -f 'supersonic/cursor/core/aggregate_clusters.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_clusters.cc

libsupersonic_la-aggregate_groups.lo: supersonic/cursor/core/aggregate_groups.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-aggregate_groups.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-aggregate_groups.Tpo -c -o libsupersonic_la-aggregate_groups.lo `test -f 'supersonic/cursor/core/aggregate_groups.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_groups.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-aggregate_groups.Tpo $(DEPDIR)/libsupersonic_la-aggregate_groups.Plo
#	source='supersonic/cursor/core/aggregate_groups.cc' object='libsupersonic_la-aggregate_groups.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-aggregate_groups.lo `test -f 'supersonic/cursor/core/aggregate_groups.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_groups.cc

libsupersonic_la-aggregate_scalar.lo: supersonic/cursor/core/aggregate_scalar.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-aggregate_scalar.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-aggregate_scalar.Tpo -c -o libsupersonic_la-aggregate_scalar.lo `test -f 'supersonic/cursor/core/aggregate_scalar.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_scalar.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-aggregate_scalar.Tpo $(DEPDIR)/libsupersonic_la-aggregate_scalar.Plo
#	source='supersonic/cursor/core/aggregate_scalar.cc' object='libsupersonic_la-aggregate_scalar.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-aggregate_scalar.lo `test -f 'supersonic/cursor/core/aggregate_scalar.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_scalar.cc

libsupersonic_la-aggregator.lo: supersonic/cursor/core/aggregator.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-aggregator.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-aggregator.Tpo -c -o libsupersonic_la-aggregator.lo `test -f 'supersonic/cursor/core/aggregator.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregator.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-aggregator.Tpo $(DEPDIR)/libsupersonic_la-aggregator.Plo
#	source='supersonic/cursor/core/aggregator.cc' object='libsupersonic_la-aggregator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-aggregator.lo `test -f 'supersonic/cursor/core/aggregator.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregator.cc

libsupersonic_la-benchmarks.lo: supersonic/cursor/core/benchmarks.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-benchmarks.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-benchmarks.Tpo -c -o libsupersonic_la-benchmarks.lo `test -f 'supersonic/cursor/core/benchmarks.cc' || echo '$(srcdir)/'`supersonic/cursor/core/benchmarks.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-benchmarks.Tpo $(DEPDIR)/libsupersonic_la-benchmarks.Plo
#	source='supersonic/cursor/core/benchmarks.cc' object='libsupersonic_la-benchmarks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-benchmarks.lo `test -f 'supersonic/cursor/core/benchmarks.cc' || echo '$(srcdir)/'`supersonic/cursor/core/benchmarks.cc

libsupersonic_la-coalesce.lo: supersonic/cursor/core/coalesce.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-coalesce.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-coalesce.Tpo -c -o libsupersonic_la-coalesce.lo `test -f 'supersonic/cursor/core/coalesce.cc' || echo '$(srcdir)/'`supersonic/cursor/core/coalesce.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-coalesce.Tpo $(DEPDIR)/libsupersonic_la-coalesce.Plo
#	source='supersonic/cursor/core/coalesce.cc' object='libsupersonic_la-coalesce.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-coalesce.lo `test -f 'supersonic/cursor/core/coalesce.cc' || echo '$(srcdir)/'`supersonic/cursor/core/coalesce.cc

libsupersonic_la-column_aggregator.lo: supersonic/cursor/core/column_aggregator.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-column_aggregator.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-column_aggregator.Tpo -c -o libsupersonic_la-column_aggregator.lo `test -f 'supersonic/cursor/core/column_aggregator.cc' || echo '$(srcdir)/'`supersonic/cursor/core/column_aggregator.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-column_aggregator.Tpo $(DEPDIR)/libsupersonic_la-column_aggregator.Plo
#	source='supersonic/cursor/core/column_aggregator.cc' object='libsupersonic_la-column_aggregator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-column_aggregator.lo `test -f 'supersonic/cursor/core/column_aggregator.cc' || echo '$(srcdir)/'`supersonic/cursor/core/column_aggregator.cc

libsupersonic_la-compute.lo: supersonic/cursor/core/compute.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-compute.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-compute.Tpo -c -o libsupersonic_la-compute.lo `test -f 'supersonic/cursor/core/compute.cc' || echo '$(srcdir)/'`supersonic/cursor/core/compute.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-compute.Tpo $(DEPDIR)/libsupersonic_la-compute.Plo
#	source='supersonic/cursor/core/compute.cc' object='libsupersonic_la-compute.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-compute.lo `test -f 'supersonic/cursor/core/compute.cc' || echo '$(srcdir)/'`supersonic/cursor/core/compute.cc

libsupersonic_la-filter.lo: supersonic/cursor/core/filter.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-filter.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-filter.Tpo -c -o libsupersonic_la-filter.lo `test -f 'supersonic/cursor/core/filter.cc' || echo '$(srcdir)/'`supersonic/cursor/core/filter.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-filter.Tpo $(DEPDIR)/libsupersonic_la-filter.Plo
#	source='supersonic/cursor/core/filter.cc' object='libsupersonic_la-filter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-filter.lo `test -f 'supersonic/cursor/core/filter.cc' || echo '$(srcdir)/'`supersonic/cursor/core/filter.cc

libsupersonic_la-foreign_filter.lo: supersonic/cursor/core/foreign_filter.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-foreign_filter.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-foreign_filter.Tpo -c -o libsupersonic_la-foreign_filter.lo `test -f 'supersonic/cursor/core/foreign_filter.cc' || echo '$(srcdir)/'`supersonic/cursor/core/foreign_filter.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-foreign_filter.Tpo $(DEPDIR)/libsupersonic_la-foreign_filter.Plo
#	source='supersonic/cursor/core/foreign_filter.cc' object='libsupersonic_la-foreign_filter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-foreign_filter.lo `test -f 'supersonic/cursor/core/foreign_filter.cc' || echo '$(srcdir)/'`supersonic/cursor/core/foreign_filter.cc

libsupersonic_la-generate.lo: supersonic/cursor/core/generate.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-generate.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-generate.Tpo -c -o libsupersonic_la-generate.lo `test -f 'supersonic/cursor/core/generate.cc' || echo '$(srcdir)/'`supersonic/cursor/core/generate.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-generate.Tpo $(DEPDIR)/libsupersonic_la-generate.Plo
#	source='supersonic/cursor/core/generate.cc' object='libsupersonic_la-generate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-generate.lo `test -f 'supersonic/cursor/core/generate.cc' || echo '$(srcdir)/'`supersonic/cursor/core/generate.cc

libsupersonic_la-hash_join.lo: supersonic/cursor/core/hash_join.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-hash_join.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-hash_join.Tpo -c -o libsupersonic_la-hash_join.lo `test -f 'supersonic/cursor/core/hash_join.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hash_join.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-hash_join.Tpo $(DEPDIR)/libsupersonic_la-hash_join.Plo
#	source='supersonic/cursor/core/hash_join.cc' object='libsupersonic_la-hash_join.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-hash_join.lo `test -f 'supersonic/cursor/core/hash_join.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hash_join.cc

libsupersonic_la-hybrid_group_utils.lo: supersonic/cursor/core/hybrid_group_utils.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-hybrid_group_utils.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-hybrid_group_utils.Tpo -c -o libsupersonic_la-hybrid_group_utils.lo `test -f 'supersonic/cursor/core/hybrid_group_utils.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_group_utils.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-hybrid_group_utils.Tpo $(DEPDIR)/libsupersonic_la-hybrid_group_utils.Plo
#	source='supersonic/cursor/core/hybrid_group_utils.cc' object='libsupersonic_la-hybrid_group_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-hybrid_group_utils.lo `test -f 'supersonic/cursor/core/hybrid_group_utils.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_group_utils.cc

libsupersonic_la-limit.lo: supersonic/cursor/core/limit.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-limit.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-limit.Tpo -c -o libsupersonic_la-limit.lo `test -f 'supersonic/cursor/core/limit.cc' || echo '$(srcdir)/'`supersonic/cursor/core/limit.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-limit.Tpo $(DEPDIR)/libsupersonic_la-limit.Plo
#	source='supersonic/cursor/core/limit.cc' object='libsupersonic_la-limit.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-limit.lo `test -f 'supersonic/cursor/core/limit.cc' || echo '$(srcdir)/'`supersonic/cursor/core/limit.cc

libsupersonic_la-merge_union_all.lo: supersonic/cursor/core/merge_union_all.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-merge_union_all.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-merge_union_all.Tpo -c -o libsupersonic_la-merge_union_all.lo `test -f 'supersonic/cursor/core/merge_union_all.cc' || echo '$(srcdir)/'`supersonic/cursor/core/merge_union_all.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-merge_union_all.Tpo $(DEPDIR)/libsupersonic_la-merge_union_all.Plo
#	source='supersonic/cursor/core/merge_union_all.cc' object='libsupersonic_la-merge_union_all.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-merge_union_all.lo `test -f 'supersonic/cursor/core/merge_union_all.cc' || echo '$(srcdir)/'`supersonic/cursor/core/merge_union_all.cc

libsupersonic_la-project.lo: supersonic/cursor/core/project.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-project.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-project.Tpo -c -o libsupersonic_la-project.lo `test -f 'supersonic/cursor/core/project.cc' || echo '$(srcdir)/'`supersonic/cursor/core/project.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-project.Tpo $(DEPDIR)/libsupersonic_la-project.Plo
#	source='supersonic/cursor/core/project.cc' object='libsupersonic_la-project.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-project.lo `test -f 'supersonic/cursor/core/project.cc' || echo '$(srcdir)/'`supersonic/cursor/core/project.cc

libsupersonic_la-rowid_merge_join.lo: supersonic/cursor/core/rowid_merge_join.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-rowid_merge_join.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-rowid_merge_join.Tpo -c -o libsupersonic_la-rowid_merge_join.lo `test -f 'supersonic/cursor/core/rowid_merge_join.cc' || echo '$(srcdir)/'`supersonic/cursor/core/rowid_merge_join.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-rowid_merge_join.Tpo $(DEPDIR)/libsupersonic_la-rowid_merge_join.Plo
#	source='supersonic/cursor/core/rowid_merge_join.cc' object='libsupersonic_la-rowid_merge_join.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-rowid_merge_join.lo `test -f 'supersonic/cursor/core/rowid_merge_join.cc' || echo '$(srcdir)/'`supersonic/cursor/core/rowid_merge_join.cc

libsupersonic_la-scan_view.lo: supersonic/cursor/core/scan_view.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-scan_view.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-scan_view.Tpo -c -o libsupersonic_la-scan_view.lo `test -f 'supersonic/cursor/core/scan_view.cc' || echo '$(srcdir)/'`supersonic/cursor/core/scan_view.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-scan_view.Tpo $(DEPDIR)/libsupersonic_la-scan_view.Plo
#	source='supersonic/cursor/core/scan_view.cc' object='libsupersonic_la-scan_view.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-scan_view.lo `test -f 'supersonic/cursor/core/scan_view.cc' || echo '$(srcdir)/'`supersonic/cursor/core/scan_view.cc

libsupersonic_la-sort.lo: supersonic/cursor/core/sort.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-sort.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-sort.Tpo -c -o libsupersonic_la-sort.lo `test -f 'supersonic/cursor/core/sort.cc' || echo '$(srcdir)/'`supersonic/cursor/core/sort.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-sort.Tpo $(DEPDIR)/libsupersonic_la-sort.Plo
#	source='supersonic/cursor/core/sort.cc' object='libsupersonic_la-sort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-sort.lo `test -f 'supersonic/cursor/core/sort.cc' || echo '$(srcdir)/'`supersonic/cursor/core/sort.cc

libsupersonic_la-specification_builder.lo: supersonic/cursor/core/specification_builder.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-specification_builder.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-specification_builder.Tpo -c -o libsupersonic_la-specification_builder.lo `test -f 'supersonic/cursor/core/specification_builder.cc' || echo '$(srcdir)/'`supersonic/cursor/core/specification_builder.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-specification_builder.Tpo $(DEPDIR)/libsupersonic_la-specification_builder.Plo
#	source='supersonic/cursor/core/specification_builder.cc' object='libsupersonic_la-specification_builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-specification_builder.lo `test -f 'supersonic/cursor/core/specification_builder.cc' || echo '$(srcdir)/'`supersonic/cursor/core/specification_builder.cc

libsupersonic_la-splitter.lo: supersonic/cursor/core/splitter.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-splitter.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-splitter.Tpo -c -o libsupersonic_la-splitter.lo `test -f 'supersonic/cursor/core/splitter.cc' || echo '$(srcdir)/'`supersonic/cursor/core/splitter.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-splitter.Tpo $(DEPDIR)/libsupersonic_la-splitter.Plo
#	source='supersonic/cursor/core/splitter.cc' object='libsupersonic_la-splitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-splitter.lo `test -f 'supersonic/cursor/core/splitter.cc' || echo '$(srcdir)/'`supersonic/cursor/core/splitter.cc

libsupersonic_la-spy.lo: supersonic/cursor/core/spy.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-spy.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-spy.Tpo -c -o libsupersonic_la-spy.lo `test -f 'supersonic/cursor/core/spy.cc' || echo '$(srcdir)/'`supersonic/cursor/core/spy.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-spy.Tpo $(DEPDIR)/libsupersonic_la-spy.Plo
#	source='supersonic/cursor/core/spy.cc' object='libsupersonic_la-spy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-spy.lo `test -f 'supersonic/cursor/core/spy.cc' || echo '$(srcdir)/'`supersonic/cursor/core/spy.cc

libsupersonic_la-basic_cursor.lo: supersonic/cursor/infrastructure/basic_cursor.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-basic_cursor.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-basic_cursor.Tpo -c -o libsupersonic_la-basic_cursor.lo `test -f 'supersonic/cursor/infrastructure/basic_cursor.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/basic_cursor.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-basic_cursor.Tpo $(DEPDIR)/libsupersonic_la-basic_cursor.Plo
#	source='supersonic/cursor/infrastructure/basic_cursor.cc' object='libsupersonic_la-basic_cursor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-basic_cursor.lo `test -f 'supersonic/cursor/infrastructure/basic_cursor.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/basic_cursor.cc

libsupersonic_la-basic_operation.lo: supersonic/cursor/infrastructure/basic_operation.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-basic_operation.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-basic_operation.Tpo -c -o libsupersonic_la-basic_operation.lo `test -f 'supersonic/cursor/infrastructure/basic_operation.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/basic_operation.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-basic_operation.Tpo $(DEPDIR)/libsupersonic_la-basic_operation.Plo
#	source='supersonic/cursor/infrastructure/basic_operation.cc' object='libsupersonic_la-basic_operation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-basic_operation.lo `test -f 'supersonic/cursor/infrastructure/basic_operation.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/basic_operation.cc

libsupersonic_la-file_io.lo: supersonic/cursor/infrastructure/file_io.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-file_io.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-file_io.Tpo -c -o libsupersonic_la-file_io.lo `test -f 'supersonic/cursor/infrastructure/file_io.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/file_io.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-file_io.Tpo $(DEPDIR)/libsupersonic_la-file_io.Plo
#	source='supersonic/cursor/infrastructure/file_io.cc' object='libsupersonic_la-file_io.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-file_io.lo `test -f 'supersonic/cursor/infrastructure/file_io.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/file_io.cc

libsupersonic_la-iterators.lo: supersonic/cursor/infrastructure/iterators.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-iterators.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-iterators.Tpo -c -o libsupersonic_la-iterators.lo `test -f 'supersonic/cursor/infrastructure/iterators.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/iterators.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-iterators.Tpo $(DEPDIR)/libsupersonic_la-iterators.Plo
#	source='supersonic/cursor/infrastructure/iterators.cc' object='libsupersonic_la-iterators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-iterators.lo `test -f 'supersonic/cursor/infrastructure/iterators.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/iterators.cc

libsupersonic_la-ordering.lo: supersonic/cursor/infrastructure/ordering.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-ordering.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-ordering.Tpo -c -o libsupersonic_la-ordering.lo `test -f 'supersonic/cursor/infrastructure/ordering.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/ordering.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-ordering.Tpo $(DEPDIR)/libsupersonic_la-ordering.Plo
#	source='supersonic/cursor/infrastructure/ordering.cc' object='libsupersonic_la-ordering.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-ordering.lo `test -f 'supersonic/cursor/infrastructure/ordering.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/ordering.cc

libsupersonic_la-row_hash_set.lo: supersonic/cursor/infrastructure/row_hash_set.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-row_hash_set.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-row_hash_set.Tpo -c -o libsupersonic_la-row_hash_set.lo `test -f 'supersonic/cursor/infrastructure/row_hash_set.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_hash_set.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-row_hash_set.Tpo $(DEPDIR)/libsupersonic_la-row_hash_set.Plo
#	source='supersonic/cursor/infrastructure/row_hash_set.cc' object='libsupersonic_la-row_hash_set.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-row_hash_set.lo `test -f 'supersonic/cursor/infrastructure/row_hash_set.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_hash_set.cc

libsupersonic_la-table.lo: supersonic/cursor/infrastructure/table.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-table.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-table.Tpo -c -o libsupersonic_la-table.lo `test -f 'supersonic/cursor/infrastructure/table.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/table.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-table.Tpo $(DEPDIR)/libsupersonic_la-table.Plo
#	source='supersonic/cursor/infrastructure/table.cc' object='libsupersonic_la-table.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-table.lo `test -f 'supersonic/cursor/infrastructure/table.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/table.cc

libsupersonic_la-view_cursor.lo: supersonic/cursor/infrastructure/view_cursor.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-view_cursor.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-view_cursor.Tpo -c -o libsupersonic_la-view_cursor.lo `test -f 'supersonic/cursor/infrastructure/view_cursor.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/view_cursor.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-view_cursor.Tpo $(DEPDIR)/libsupersonic_la-view_cursor.Plo
#	source='supersonic/cursor/infrastructure/view_cursor.cc' object='libsupersonic_la-view_cursor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-view_cursor.lo `test -f 'supersonic/cursor/infrastructure/view_cursor.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/view_cursor.cc

libsupersonic_la-view_printer.lo: supersonic/cursor/infrastructure/view_printer.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-view_printer.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-view_printer.Tpo -c -o libsupersonic_la-view_printer.lo `test -f 'supersonic/cursor/infrastructure/view_printer.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/view_printer.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-view_printer.Tpo $(DEPDIR)/libsupersonic_la-view_printer.Plo
#	source='supersonic/cursor/infrastructure/view_printer.cc' object='libsupersonic_la-view_printer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-view_printer.lo `test -f 'supersonic/cursor/infrastructure/view_printer.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/view_printer.cc

libsupersonic_la-writer.lo: supersonic/cursor/infrastructure/writer.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-writer.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-writer.Tpo -c -o libsupersonic_la-writer.lo `test -f 'supersonic/cursor/infrastructure/writer.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/writer.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-writer.Tpo $(DEPDIR)/libsupersonic_la-writer.Plo
#	source='supersonic/cursor/infrastructure/writer.cc' object='libsupersonic_la-writer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-writer.lo `test -f 'supersonic/cursor/infrastructure/writer.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/writer.cc

libsupersonic_la-expression.lo: supersonic/expression/base/expression.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-expression.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-expression.Tpo -c -o libsupersonic_la-expression.lo `test -f 'supersonic/expression/base/expression.cc' || echo '$(srcdir)/'`supersonic/expression/base/expression.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-expression.Tpo $(DEPDIR)/libsupersonic_la-expression.Plo
#	source='supersonic/expression/base/expression.cc' object='libsupersonic_la-expression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-expression.lo `test -f 'supersonic/expression/base/expression.cc' || echo '$(srcdir)/'`supersonic/expression/base/expression.cc

libsupersonic_la-arithmetic_bound_expressions.lo: supersonic/expression/core/arithmetic_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-arithmetic_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-arithmetic_bound_expressions.Tpo -c -o libsupersonic_la-arithmetic_bound_expressions.lo `test -f 'supersonic/expression/core/arithmetic_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-arithmetic_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-arithmetic_bound_expressions.Plo
#	source='supersonic/expression/core/arithmetic_bound_expressions.cc' object='libsupersonic_la-arithmetic_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-arithmetic_bound_expressions.lo `test -f 'supersonic/expression/core/arithmetic_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_bound_expressions.cc

libsupersonic_la-arithmetic_expressions.lo: supersonic/expression/core/arithmetic_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-arithmetic_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-arithmetic_expressions.Tpo -c -o libsupersonic_la-arithmetic_expressions.lo `test -f 'supersonic/expression/core/arithmetic_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-arithmetic_expressions.Tpo $(DEPDIR)/libsupersonic_la-arithmetic_expressions.Plo
#	source='supersonic/expression/core/arithmetic_expressions.cc' object='libsupersonic_la-arithmetic_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-arithmetic_expressions.lo `test -f 'supersonic/expression/core/arithmetic_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_expressions.cc

libsupersonic_la-comparison_bound_expressions.lo: supersonic/expression/core/comparison_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-comparison_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-comparison_bound_expressions.Tpo -c -o libsupersonic_la-comparison_bound_expressions.lo `test -f 'supersonic/expression/core/comparison_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/comparison_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-comparison_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-comparison_bound_expressions.Plo
#	source='supersonic/expression/core/comparison_bound_expressions.cc' object='libsupersonic_la-comparison_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-comparison_bound_expressions.lo `test -f 'supersonic/expression/core/comparison_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/comparison_bound_expressions.cc

libsupersonic_la-comparison_expressions.lo: supersonic/expression/core/comparison_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-comparison_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-comparison_expressions.Tpo -c -o libsupersonic_la-comparison_expressions.lo `test -f 'supersonic/expression/core/comparison_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/comparison_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-comparison_expressions.Tpo $(DEPDIR)/libsupersonic_la-comparison_expressions.Plo
#	source='supersonic/expression/core/comparison_expressions.cc' object='libsupersonic_la-comparison_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-comparison_expressions.lo `test -f 'supersonic/expression/core/comparison_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/comparison_expressions.cc

libsupersonic_la-date_bound_expressions.lo: supersonic/expression/core/date_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-date_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-date_bound_expressions.Tpo -c -o libsupersonic_la-date_bound_expressions.lo `test -f 'supersonic/expression/core/date_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-date_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-date_bound_expressions.Plo
#	source='supersonic/expression/core/date_bound_expressions.cc' object='libsupersonic_la-date_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-date_bound_expressions.lo `test -f 'supersonic/expression/core/date_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_bound_expressions.cc

libsupersonic_la-date_evaluators.lo: supersonic/expression/core/date_evaluators.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-date_evaluators.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-date_evaluators.Tpo -c -o libsupersonic_la-date_evaluators.lo `test -f 'supersonic/expression/core/date_evaluators.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_evaluators.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-date_evaluators.Tpo $(DEPDIR)/libsupersonic_la-date_evaluators.Plo
#	source='supersonic/expression/core/date_evaluators.cc' object='libsupersonic_la-date_evaluators.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-date_evaluators.lo `test -f 'supersonic/expression/core/date_evaluators.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_evaluators.cc

libsupersonic_la-date_expressions.lo: supersonic/expression/core/date_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-date_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-date_expressions.Tpo -c -o libsupersonic_la-date_expressions.lo `test -f 'supersonic/expression/core/date_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-date_expressions.Tpo $(DEPDIR)/libsupersonic_la-date_expressions.Plo
#	source='supersonic/expression/core/date_expressions.cc' object='libsupersonic_la-date_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-date_expressions.lo `test -f 'supersonic/expression/core/date_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_expressions.cc

libsupersonic_la-elementary_bound_expressions.lo: supersonic/expression/core/elementary_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-elementary_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-elementary_bound_expressions.Tpo -c -o libsupersonic_la-elementary_bound_expressions.lo `test -f 'supersonic/expression/core/elementary_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-elementary_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-elementary_bound_expressions.Plo
#	source='supersonic/expression/core/elementary_bound_expressions.cc' object='libsupersonic_la-elementary_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-elementary_bound_expressions.lo `test -f 'supersonic/expression/core/elementary_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_bound_expressions.cc

libsupersonic_la-elementary_expressions.lo: supersonic/expression/core/elementary_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-elementary_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-elementary_expressions.Tpo -c -o libsupersonic_la-elementary_expressions.lo `test -f 'supersonic/expression/core/elementary_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-elementary_expressions.Tpo $(DEPDIR)/libsupersonic_la-elementary_expressions.Plo
#	source='supersonic/expression/core/elementary_expressions.cc' object='libsupersonic_la-elementary_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-elementary_expressions.lo `test -f 'supersonic/expression/core/elementary_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_expressions.cc

libsupersonic_la-math_bound_expressions.lo: supersonic/expression/core/math_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-math_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-math_bound_expressions.Tpo -c -o libsupersonic_la-math_bound_expressions.lo `test -f 'supersonic/expression/core/math_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-math_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-math_bound_expressions.Plo
#	source='supersonic/expression/core/math_bound_expressions.cc' object='libsupersonic_la-math_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-math_bound_expressions.lo `test -f 'supersonic/expression/core/math_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_bound_expressions.cc

libsupersonic_la-math_expressions.lo: supersonic/expression/core/math_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-math_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-math_expressions.Tpo -c -o libsupersonic_la-math_expressions.lo `test -f 'supersonic/expression/core/math_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-math_expressions.Tpo $(DEPDIR)/libsupersonic_la-math_expressions.Plo
#	source='supersonic/expression/core/math_expressions.cc' object='libsupersonic_la-math_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-math_expressions.lo `test -f 'supersonic/expression/core/math_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_expressions.cc

libsupersonic_la-projecting_bound_expressions.lo: supersonic/expression/core/projecting_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-projecting_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-projecting_bound_expressions.Tpo -c -o libsupersonic_la-projecting_bound_expressions.lo `test -f 'supersonic/expression/core/projecting_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-projecting_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-projecting_bound_expressions.Plo
#	source='supersonic/expression/core/projecting_bound_expressions.cc' object='libsupersonic_la-projecting_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-projecting_bound_expressions.lo `test -f 'supersonic/expression/core/projecting_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_bound_expressions.cc

libsupersonic_la-projecting_expressions.lo: supersonic/expression/core/projecting_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-projecting_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-projecting_expressions.Tpo -c -o libsupersonic_la-projecting_expressions.lo `test -f 'supersonic/expression/core/projecting_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-projecting_expressions.Tpo $(DEPDIR)/libsupersonic_la-projecting_expressions.Plo
#	source='supersonic/expression/core/projecting_expressions.cc' object='libsupersonic_la-projecting_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-projecting_expressions.lo `test -f 'supersonic/expression/core/projecting_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_expressions.cc

libsupersonic_la-stateful_bound_expressions.lo: supersonic/expression/core/stateful_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-stateful_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-stateful_bound_expressions.Tpo -c -o libsupersonic_la-stateful_bound_expressions.lo `test -f 'supersonic/expression/core/stateful_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-stateful_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-stateful_bound_expressions.Plo
#	source='supersonic/expression/core/stateful_bound_expressions.cc' object='libsupersonic_la-stateful_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-stateful_bound_expressions.lo `test -f 'supersonic/expression/core/stateful_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_bound_expressions.cc

libsupersonic_la-stateful_expressions.lo: supersonic/expression/core/stateful_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-stateful_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-stateful_expressions.Tpo -c -o libsupersonic_la-stateful_expressions.lo `test -f 'supersonic/expression/core/stateful_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-stateful_expressions.Tpo $(DEPDIR)/libsupersonic_la-stateful_expressions.Plo
#	source='supersonic/expression/core/stateful_expressions.cc' object='libsupersonic_la-stateful_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-stateful_expressions.lo `test -f 'supersonic/expression/core/stateful_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_expressions.cc

libsupersonic_la-string_bound_expressions.lo: supersonic/expression/core/string_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-string_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-string_bound_expressions.Tpo -c -o libsupersonic_la-string_bound_expressions.lo `test -f 'supersonic/expression/core/string_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-string_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-string_bound_expressions.Plo
#	source='supersonic/expression/core/string_bound_expressions.cc' object='libsupersonic_la-string_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-string_bound_expressions.lo `test -f 'supersonic/expression/core/string_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_bound_expressions.cc

libsupersonic_la-string_expressions.lo: supersonic/expression/core/string_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-string_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-string_expressions.Tpo -c -o libsupersonic_la-string_expressions.lo `test -f 'supersonic/expression/core/string_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-string_expressions.Tpo $(DEPDIR)/libsupersonic_la-string_expressions.Plo
#	source='supersonic/expression/core/string_expressions.cc' object='libsupersonic_la-string_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-string_expressions.lo `test -f 'supersonic/expression/core/string_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_expressions.cc

libsupersonic_la-hashing_bound_expressions.lo: supersonic/expression/ext/hashing/hashing_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-hashing_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-hashing_bound_expressions.Tpo -c -o libsupersonic_la-hashing_bound_expressions.lo `test -f 'supersonic/expression/ext/hashing/hashing_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/ext/hashing/hashing_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-hashing_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-hashing_bound_expressions.Plo
#	source='supersonic/expression/ext/hashing/hashing_bound_expressions.cc' object='libsupersonic_la-hashing_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-hashing_bound_expressions.lo `test -f 'supersonic/expression/ext/hashing/hashing_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/ext/hashing/hashing_bound_expressions.cc

libsupersonic_la-hashing_expressions.lo: supersonic/expression/ext/hashing/hashing_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-hashing_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-hashing_expressions.Tpo -c -o libsupersonic_la-hashing_expressions.lo `test -f 'supersonic/expression/ext/hashing/hashing_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/ext/hashing/hashing_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-hashing_expressions.Tpo $(DEPDIR)/libsupersonic_la-hashing_expressions.Plo
#	source='supersonic/expression/ext/hashing/hashing_expressions.cc' object='libsupersonic_la-hashing_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-hashing_expressions.lo `test -f 'supersonic/expression/ext/hashing/hashing_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/ext/hashing/hashing_expressions.cc

libsupersonic_la-basic_bound_expression.lo: supersonic/expression/infrastructure/basic_bound_expression.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-basic_bound_expression.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-basic_bound_expression.Tpo -c -o libsupersonic_la-basic_bound_expression.lo `test -f 'supersonic/expression/infrastructure/basic_bound_expression.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/basic_bound_expression.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-basic_bound_expression.Tpo $(DEPDIR)/libsupersonic_la-basic_bound_expression.Plo
#	source='supersonic/expression/infrastructure/basic_bound_expression.cc' object='libsupersonic_la-basic_bound_expression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-basic_bound_expression.lo `test -f 'supersonic/expression/infrastructure/basic_bound_expression.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/basic_bound_expression.cc

libsupersonic_la-basic_expressions.lo: supersonic/expression/infrastructure/basic_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-basic_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-basic_expressions.Tpo -c -o libsupersonic_la-basic_expressions.lo `test -f 'supersonic/expression/infrastructure/basic_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/basic_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-basic_expressions.Tpo $(DEPDIR)/libsupersonic_la-basic_expressions.Plo
#	source='supersonic/expression/infrastructure/basic_expressions.cc' object='libsupersonic_la-basic_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-basic_expressions.lo `test -f 'supersonic/expression/infrastructure/basic_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/basic_expressions.cc

libsupersonic_la-expression_utils.lo: supersonic/expression/infrastructure/expression_utils.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-expression_utils.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-expression_utils.Tpo -c -o libsupersonic_la-expression_utils.lo `test -f 'supersonic/expression/infrastructure/expression_utils.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/expression_utils.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-expression_utils.Tpo $(DEPDIR)/libsupersonic_la-expression_utils.Plo
#	source='supersonic/expression/infrastructure/expression_utils.cc' object='libsupersonic_la-expression_utils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-expression_utils.lo `test -f 'supersonic/expression/infrastructure/expression_utils.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/expression_utils.cc

libsupersonic_la-terminal_bound_expressions.lo: supersonic/expression/infrastructure/terminal_bound_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-terminal_bound_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-terminal_bound_expressions.Tpo -c -o libsupersonic_la-terminal_bound_expressions.lo `test -f 'supersonic/expression/infrastructure/terminal_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/terminal_bound_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-terminal_bound_expressions.Tpo $(DEPDIR)/libsupersonic_la-terminal_bound_expressions.Plo
#	source='supersonic/expression/infrastructure/terminal_bound_expressions.cc' object='libsupersonic_la-terminal_bound_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-terminal_bound_expressions.lo `test -f 'supersonic/expression/infrastructure/terminal_bound_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/terminal_bound_expressions.cc

libsupersonic_la-terminal_expressions.lo: supersonic/expression/infrastructure/terminal_expressions.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-terminal_expressions.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-terminal_expressions.Tpo -c -o libsupersonic_la-terminal_expressions.lo `test -f 'supersonic/expression/infrastructure/terminal_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/terminal_expressions.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-terminal_expressions.Tpo $(DEPDIR)/libsupersonic_la-terminal_expressions.Plo
#	source='supersonic/expression/infrastructure/terminal_expressions.cc' object='libsupersonic_la-terminal_expressions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-terminal_expressions.lo `test -f 'supersonic/expression/infrastructure/terminal_expressions.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/terminal_expressions.cc

libsupersonic_la-bound_expression_factory.lo: supersonic/expression/templated/bound_expression_factory.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-bound_expression_factory.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-bound_expression_factory.Tpo -c -o libsupersonic_la-bound_expression_factory.lo `test -f 'supersonic/expression/templated/bound_expression_factory.cc' || echo '$(srcdir)/'`supersonic/expression/templated/bound_expression_factory.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-bound_expression_factory.Tpo $(DEPDIR)/libsupersonic_la-bound_expression_factory.Plo
#	source='supersonic/expression/templated/bound_expression_factory.cc' object='libsupersonic_la-bound_expression_factory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-bound_expression_factory.lo `test -f 'supersonic/expression/templated/bound_expression_factory.cc' || echo '$(srcdir)/'`supersonic/expression/templated/bound_expression_factory.cc

libsupersonic_la-cast_bound_expression.lo: supersonic/expression/templated/cast_bound_expression.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-cast_bound_expression.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-cast_bound_expression.Tpo -c -o libsupersonic_la-cast_bound_expression.lo `test -f 'supersonic/expression/templated/cast_bound_expression.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_bound_expression.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-cast_bound_expression.Tpo $(DEPDIR)/libsupersonic_la-cast_bound_expression.Plo
#	source='supersonic/expression/templated/cast_bound_expression.cc' object='libsupersonic_la-cast_bound_expression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-cast_bound_expression.lo `test -f 'supersonic/expression/templated/cast_bound_expression.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_bound_expression.cc

libsupersonic_la-cast_expression.lo: supersonic/expression/templated/cast_expression.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-cast_expression.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-cast_expression.Tpo -c -o libsupersonic_la-cast_expression.lo `test -f 'supersonic/expression/templated/cast_expression.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_expression.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-cast_expression.Tpo $(DEPDIR)/libsupersonic_la-cast_expression.Plo
#	source='supersonic/expression/templated/cast_expression.cc' object='libsupersonic_la-cast_expression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-cast_expression.lo `test -f 'supersonic/expression/templated/cast_expression.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_expression.cc

libsupersonic_la-vector_logic.lo: supersonic/expression/vector/vector_logic.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-vector_logic.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-vector_logic.Tpo -c -o libsupersonic_la-vector_logic.lo `test -f 'supersonic/expression/vector/vector_logic.cc' || echo '$(srcdir)/'`supersonic/expression/vector/vector_logic.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-vector_logic.Tpo $(DEPDIR)/libsupersonic_la-vector_logic.Plo
#	source='supersonic/expression/vector/vector_logic.cc' object='libsupersonic_la-vector_logic.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-vector_logic.lo `test -f 'supersonic/expression/vector/vector_logic.cc' || echo '$(srcdir)/'`supersonic/expression/vector/vector_logic.cc

libsupersonic_la-build_expression_from_proto.lo: supersonic/serialization/build_expression_from_proto.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -MT libsupersonic_la-build_expression_from_proto.lo -MD -MP -MF $(DEPDIR)/libsupersonic_la-build_expression_from_proto.Tpo -c -o libsupersonic_la-build_expression_from_proto.lo `test -f 'supersonic/serialization/build_expression_from_proto.cc' || echo '$(srcdir)/'`supersonic/serialization/build_expression_from_proto.cc
	$(am__mv) $(DEPDIR)/libsupersonic_la-build_expression_from_proto.Tpo $(DEPDIR)/libsupersonic_la-build_expression_from_proto.Plo
#	source='supersonic/serialization/build_expression_from_proto.cc' object='libsupersonic_la-build_expression_from_proto.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libsupersonic_la_CXXFLAGS) $(CXXFLAGS) -c -o libsupersonic_la-build_expression_from_proto.lo `test -f 'supersonic/serialization/build_expression_from_proto.cc' || echo '$(srcdir)/'`supersonic/serialization/build_expression_from_proto.cc

libtestutils_la-block_builder.lo: supersonic/testing/block_builder.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-block_builder.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-block_builder.Tpo -c -o libtestutils_la-block_builder.lo `test -f 'supersonic/testing/block_builder.cc' || echo '$(srcdir)/'`supersonic/testing/block_builder.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-block_builder.Tpo $(DEPDIR)/libtestutils_la-block_builder.Plo
#	source='supersonic/testing/block_builder.cc' object='libtestutils_la-block_builder.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-block_builder.lo `test -f 'supersonic/testing/block_builder.cc' || echo '$(srcdir)/'`supersonic/testing/block_builder.cc

libtestutils_la-comparable_cursor.lo: supersonic/testing/comparable_cursor.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-comparable_cursor.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-comparable_cursor.Tpo -c -o libtestutils_la-comparable_cursor.lo `test -f 'supersonic/testing/comparable_cursor.cc' || echo '$(srcdir)/'`supersonic/testing/comparable_cursor.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-comparable_cursor.Tpo $(DEPDIR)/libtestutils_la-comparable_cursor.Plo
#	source='supersonic/testing/comparable_cursor.cc' object='libtestutils_la-comparable_cursor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-comparable_cursor.lo `test -f 'supersonic/testing/comparable_cursor.cc' || echo '$(srcdir)/'`supersonic/testing/comparable_cursor.cc

libtestutils_la-comparable_tuple_schema.lo: supersonic/testing/comparable_tuple_schema.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-comparable_tuple_schema.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-comparable_tuple_schema.Tpo -c -o libtestutils_la-comparable_tuple_schema.lo `test -f 'supersonic/testing/comparable_tuple_schema.cc' || echo '$(srcdir)/'`supersonic/testing/comparable_tuple_schema.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-comparable_tuple_schema.Tpo $(DEPDIR)/libtestutils_la-comparable_tuple_schema.Plo
#	source='supersonic/testing/comparable_tuple_schema.cc' object='libtestutils_la-comparable_tuple_schema.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-comparable_tuple_schema.lo `test -f 'supersonic/testing/comparable_tuple_schema.cc' || echo '$(srcdir)/'`supersonic/testing/comparable_tuple_schema.cc

libtestutils_la-comparable_view.lo: supersonic/testing/comparable_view.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-comparable_view.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-comparable_view.Tpo -c -o libtestutils_la-comparable_view.lo `test -f 'supersonic/testing/comparable_view.cc' || echo '$(srcdir)/'`supersonic/testing/comparable_view.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-comparable_view.Tpo $(DEPDIR)/libtestutils_la-comparable_view.Plo
#	source='supersonic/testing/comparable_view.cc' object='libtestutils_la-comparable_view.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-comparable_view.lo `test -f 'supersonic/testing/comparable_view.cc' || echo '$(srcdir)/'`supersonic/testing/comparable_view.cc

libtestutils_la-expression_test_helper.lo: supersonic/testing/expression_test_helper.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-expression_test_helper.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-expression_test_helper.Tpo -c -o libtestutils_la-expression_test_helper.lo `test -f 'supersonic/testing/expression_test_helper.cc' || echo '$(srcdir)/'`supersonic/testing/expression_test_helper.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-expression_test_helper.Tpo $(DEPDIR)/libtestutils_la-expression_test_helper.Plo
#	source='supersonic/testing/expression_test_helper.cc' object='libtestutils_la-expression_test_helper.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-expression_test_helper.lo `test -f 'supersonic/testing/expression_test_helper.cc' || echo '$(srcdir)/'`supersonic/testing/expression_test_helper.cc

libtestutils_la-operation_testing.lo: supersonic/testing/operation_testing.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-operation_testing.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-operation_testing.Tpo -c -o libtestutils_la-operation_testing.lo `test -f 'supersonic/testing/operation_testing.cc' || echo '$(srcdir)/'`supersonic/testing/operation_testing.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-operation_testing.Tpo $(DEPDIR)/libtestutils_la-operation_testing.Plo
#	source='supersonic/testing/operation_testing.cc' object='libtestutils_la-operation_testing.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-operation_testing.lo `test -f 'supersonic/testing/operation_testing.cc' || echo '$(srcdir)/'`supersonic/testing/operation_testing.cc

libtestutils_la-repeating_block.lo: supersonic/testing/repeating_block.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-repeating_block.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-repeating_block.Tpo -c -o libtestutils_la-repeating_block.lo `test -f 'supersonic/testing/repeating_block.cc' || echo '$(srcdir)/'`supersonic/testing/repeating_block.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-repeating_block.Tpo $(DEPDIR)/libtestutils_la-repeating_block.Plo
#	source='supersonic/testing/repeating_block.cc' object='libtestutils_la-repeating_block.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-repeating_block.lo `test -f 'supersonic/testing/repeating_block.cc' || echo '$(srcdir)/'`supersonic/testing/repeating_block.cc

libtestutils_la-row.lo: supersonic/testing/row.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-row.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-row.Tpo -c -o libtestutils_la-row.lo `test -f 'supersonic/testing/row.cc' || echo '$(srcdir)/'`supersonic/testing/row.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-row.Tpo $(DEPDIR)/libtestutils_la-row.Plo
#	source='supersonic/testing/row.cc' object='libtestutils_la-row.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-row.lo `test -f 'supersonic/testing/row.cc' || echo '$(srcdir)/'`supersonic/testing/row.cc

libtestutils_la-short_circuit_tester.lo: supersonic/testing/short_circuit_tester.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-short_circuit_tester.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-short_circuit_tester.Tpo -c -o libtestutils_la-short_circuit_tester.lo `test -f 'supersonic/testing/short_circuit_tester.cc' || echo '$(srcdir)/'`supersonic/testing/short_circuit_tester.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-short_circuit_tester.Tpo $(DEPDIR)/libtestutils_la-short_circuit_tester.Plo
#	source='supersonic/testing/short_circuit_tester.cc' object='libtestutils_la-short_circuit_tester.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-short_circuit_tester.lo `test -f 'supersonic/testing/short_circuit_tester.cc' || echo '$(srcdir)/'`supersonic/testing/short_circuit_tester.cc

libtestutils_la-streamable.lo: supersonic/testing/streamable.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-streamable.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-streamable.Tpo -c -o libtestutils_la-streamable.lo `test -f 'supersonic/testing/streamable.cc' || echo '$(srcdir)/'`supersonic/testing/streamable.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-streamable.Tpo $(DEPDIR)/libtestutils_la-streamable.Plo
#	source='supersonic/testing/streamable.cc' object='libtestutils_la-streamable.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-streamable.lo `test -f 'supersonic/testing/streamable.cc' || echo '$(srcdir)/'`supersonic/testing/streamable.cc

libtestutils_la-view_comparator.lo: supersonic/testing/view_comparator.cc
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -MT libtestutils_la-view_comparator.lo -MD -MP -MF $(DEPDIR)/libtestutils_la-view_comparator.Tpo -c -o libtestutils_la-view_comparator.lo `test -f 'supersonic/testing/view_comparator.cc' || echo '$(srcdir)/'`supersonic/testing/view_comparator.cc
	$(am__mv) $(DEPDIR)/libtestutils_la-view_comparator.Tpo $(DEPDIR)/libtestutils_la-view_comparator.Plo
#	source='supersonic/testing/view_comparator.cc' object='libtestutils_la-view_comparator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libtestutils_la_CXXFLAGS) $(CXXFLAGS) -c -o libtestutils_la-view_comparator.lo `test -f 'supersonic/testing/view_comparator.cc' || echo '$(srcdir)/'`supersonic/testing/view_comparator.cc

operation_example-operation_example.o: supersonic/benchmark/examples/operation_example.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(operation_example_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT operation_example-operation_example.o -MD -MP -MF $(DEPDIR)/operation_example-operation_example.Tpo -c -o operation_example-operation_example.o `test -f 'supersonic/benchmark/examples/operation_example.cc' || echo '$(srcdir)/'`supersonic/benchmark/examples/operation_example.cc
	$(am__mv) $(DEPDIR)/operation_example-operation_example.Tpo $(DEPDIR)/operation_example-operation_example.Po
#	source='supersonic/benchmark/examples/operation_example.cc' object='operation_example-operation_example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(operation_example_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o operation_example-operation_example.o `test -f 'supersonic/benchmark/examples/operation_example.cc' || echo '$(srcdir)/'`supersonic/benchmark/examples/operation_example.cc

operation_example-operation_example.obj: supersonic/benchmark/examples/operation_example.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(operation_example_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT operation_example-operation_example.obj -MD -MP -MF $(DEPDIR)/operation_example-operation_example.Tpo -c -o operation_example-operation_example.obj `if test -f 'supersonic/benchmark/examples/operation_example.cc'; then $(CYGPATH_W) 'supersonic/benchmark/examples/operation_example.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/examples/operation_example.cc'; fi`
	$(am__mv) $(DEPDIR)/operation_example-operation_example.Tpo $(DEPDIR)/operation_example-operation_example.Po
#	source='supersonic/benchmark/examples/operation_example.cc' object='operation_example-operation_example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(operation_example_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o operation_example-operation_example.obj `if test -f 'supersonic/benchmark/examples/operation_example.cc'; then $(CYGPATH_W) 'supersonic/benchmark/examples/operation_example.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/examples/operation_example.cc'; fi`

supersonic_guidetest-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-gtest-all.o -MD -MP -MF $(DEPDIR)/supersonic_guidetest-gtest-all.Tpo -c -o supersonic_guidetest-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/supersonic_guidetest-gtest-all.Tpo $(DEPDIR)/supersonic_guidetest-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='supersonic_guidetest-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

supersonic_guidetest-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-gtest-all.obj -MD -MP -MF $(DEPDIR)/supersonic_guidetest-gtest-all.Tpo -c -o supersonic_guidetest-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/supersonic_guidetest-gtest-all.Tpo $(DEPDIR)/supersonic_guidetest-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='supersonic_guidetest-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

supersonic_guidetest-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-gmock-all.o -MD -MP -MF $(DEPDIR)/supersonic_guidetest-gmock-all.Tpo -c -o supersonic_guidetest-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/supersonic_guidetest-gmock-all.Tpo $(DEPDIR)/supersonic_guidetest-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='supersonic_guidetest-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

supersonic_guidetest-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-gmock-all.obj -MD -MP -MF $(DEPDIR)/supersonic_guidetest-gmock-all.Tpo -c -o supersonic_guidetest-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/supersonic_guidetest-gmock-all.Tpo $(DEPDIR)/supersonic_guidetest-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='supersonic_guidetest-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

supersonic_guidetest-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/supersonic_guidetest-supersonic_test_main.Tpo -c -o supersonic_guidetest-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/supersonic_guidetest-supersonic_test_main.Tpo $(DEPDIR)/supersonic_guidetest-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='supersonic_guidetest-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

supersonic_guidetest-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/supersonic_guidetest-supersonic_test_main.Tpo -c -o supersonic_guidetest-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/supersonic_guidetest-supersonic_test_main.Tpo $(DEPDIR)/supersonic_guidetest-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='supersonic_guidetest-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

supersonic_guidetest-smoke_test.o: test/smoke_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-smoke_test.o -MD -MP -MF $(DEPDIR)/supersonic_guidetest-smoke_test.Tpo -c -o supersonic_guidetest-smoke_test.o `test -f 'test/smoke_test.cc' || echo '$(srcdir)/'`test/smoke_test.cc
	$(am__mv) $(DEPDIR)/supersonic_guidetest-smoke_test.Tpo $(DEPDIR)/supersonic_guidetest-smoke_test.Po
#	source='test/smoke_test.cc' object='supersonic_guidetest-smoke_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-smoke_test.o `test -f 'test/smoke_test.cc' || echo '$(srcdir)/'`test/smoke_test.cc

supersonic_guidetest-smoke_test.obj: test/smoke_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-smoke_test.obj -MD -MP -MF $(DEPDIR)/supersonic_guidetest-smoke_test.Tpo -c -o supersonic_guidetest-smoke_test.obj `if test -f 'test/smoke_test.cc'; then $(CYGPATH_W) 'test/smoke_test.cc'; else $(CYGPATH_W) '$(srcdir)/test/smoke_test.cc'; fi`
	$(am__mv) $(DEPDIR)/supersonic_guidetest-smoke_test.Tpo $(DEPDIR)/supersonic_guidetest-smoke_test.Po
#	source='test/smoke_test.cc' object='supersonic_guidetest-smoke_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-smoke_test.obj `if test -f 'test/smoke_test.cc'; then $(CYGPATH_W) 'test/smoke_test.cc'; else $(CYGPATH_W) '$(srcdir)/test/smoke_test.cc'; fi`

supersonic_guidetest-group_sort.o: test/guide/group_sort.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-group_sort.o -MD -MP -MF $(DEPDIR)/supersonic_guidetest-group_sort.Tpo -c -o supersonic_guidetest-group_sort.o `test -f 'test/guide/group_sort.cc' || echo '$(srcdir)/'`test/guide/group_sort.cc
	$(am__mv) $(DEPDIR)/supersonic_guidetest-group_sort.Tpo $(DEPDIR)/supersonic_guidetest-group_sort.Po
#	source='test/guide/group_sort.cc' object='supersonic_guidetest-group_sort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-group_sort.o `test -f 'test/guide/group_sort.cc' || echo '$(srcdir)/'`test/guide/group_sort.cc

supersonic_guidetest-group_sort.obj: test/guide/group_sort.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-group_sort.obj -MD -MP -MF $(DEPDIR)/supersonic_guidetest-group_sort.Tpo -c -o supersonic_guidetest-group_sort.obj `if test -f 'test/guide/group_sort.cc'; then $(CYGPATH_W) 'test/guide/group_sort.cc'; else $(CYGPATH_W) '$(srcdir)/test/guide/group_sort.cc'; fi`
	$(am__mv) $(DEPDIR)/supersonic_guidetest-group_sort.Tpo $(DEPDIR)/supersonic_guidetest-group_sort.Po
#	source='test/guide/group_sort.cc' object='supersonic_guidetest-group_sort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-group_sort.obj `if test -f 'test/guide/group_sort.cc'; then $(CYGPATH_W) 'test/guide/group_sort.cc'; else $(CYGPATH_W) '$(srcdir)/test/guide/group_sort.cc'; fi`

supersonic_guidetest-join.o: test/guide/join.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-join.o -MD -MP -MF $(DEPDIR)/supersonic_guidetest-join.Tpo -c -o supersonic_guidetest-join.o `test -f 'test/guide/join.cc' || echo '$(srcdir)/'`test/guide/join.cc
	$(am__mv) $(DEPDIR)/supersonic_guidetest-join.Tpo $(DEPDIR)/supersonic_guidetest-join.Po
#	source='test/guide/join.cc' object='supersonic_guidetest-join.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-join.o `test -f 'test/guide/join.cc' || echo '$(srcdir)/'`test/guide/join.cc

supersonic_guidetest-join.obj: test/guide/join.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-join.obj -MD -MP -MF $(DEPDIR)/supersonic_guidetest-join.Tpo -c -o supersonic_guidetest-join.obj `if test -f 'test/guide/join.cc'; then $(CYGPATH_W) 'test/guide/join.cc'; else $(CYGPATH_W) '$(srcdir)/test/guide/join.cc'; fi`
	$(am__mv) $(DEPDIR)/supersonic_guidetest-join.Tpo $(DEPDIR)/supersonic_guidetest-join.Po
#	source='test/guide/join.cc' object='supersonic_guidetest-join.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-join.obj `if test -f 'test/guide/join.cc'; then $(CYGPATH_W) 'test/guide/join.cc'; else $(CYGPATH_W) '$(srcdir)/test/guide/join.cc'; fi`

supersonic_guidetest-primer.o: test/guide/primer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-primer.o -MD -MP -MF $(DEPDIR)/supersonic_guidetest-primer.Tpo -c -o supersonic_guidetest-primer.o `test -f 'test/guide/primer.cc' || echo '$(srcdir)/'`test/guide/primer.cc
	$(am__mv) $(DEPDIR)/supersonic_guidetest-primer.Tpo $(DEPDIR)/supersonic_guidetest-primer.Po
#	source='test/guide/primer.cc' object='supersonic_guidetest-primer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-primer.o `test -f 'test/guide/primer.cc' || echo '$(srcdir)/'`test/guide/primer.cc

supersonic_guidetest-primer.obj: test/guide/primer.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT supersonic_guidetest-primer.obj -MD -MP -MF $(DEPDIR)/supersonic_guidetest-primer.Tpo -c -o supersonic_guidetest-primer.obj `if test -f 'test/guide/primer.cc'; then $(CYGPATH_W) 'test/guide/primer.cc'; else $(CYGPATH_W) '$(srcdir)/test/guide/primer.cc'; fi`
	$(am__mv) $(DEPDIR)/supersonic_guidetest-primer.Tpo $(DEPDIR)/supersonic_guidetest-primer.Po
#	source='test/guide/primer.cc' object='supersonic_guidetest-primer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(supersonic_guidetest_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o supersonic_guidetest-primer.obj `if test -f 'test/guide/primer.cc'; then $(CYGPATH_W) 'test/guide/primer.cc'; else $(CYGPATH_W) '$(srcdir)/test/guide/primer.cc'; fi`

test_base_exception-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-gtest-all.o -MD -MP -MF $(DEPDIR)/test_base_exception-gtest-all.Tpo -c -o test_base_exception-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_base_exception-gtest-all.Tpo $(DEPDIR)/test_base_exception-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_base_exception-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_base_exception-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_base_exception-gtest-all.Tpo -c -o test_base_exception-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_exception-gtest-all.Tpo $(DEPDIR)/test_base_exception-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_base_exception-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_base_exception-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-gmock-all.o -MD -MP -MF $(DEPDIR)/test_base_exception-gmock-all.Tpo -c -o test_base_exception-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_base_exception-gmock-all.Tpo $(DEPDIR)/test_base_exception-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_base_exception-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_base_exception-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_base_exception-gmock-all.Tpo -c -o test_base_exception-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_exception-gmock-all.Tpo $(DEPDIR)/test_base_exception-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_base_exception-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_base_exception-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_base_exception-supersonic_test_main.Tpo -c -o test_base_exception-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_base_exception-supersonic_test_main.Tpo $(DEPDIR)/test_base_exception-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_base_exception-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_base_exception-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_base_exception-supersonic_test_main.Tpo -c -o test_base_exception-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_exception-supersonic_test_main.Tpo $(DEPDIR)/test_base_exception-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_base_exception-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_base_exception-exception_test.o: supersonic/base/exception/exception_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-exception_test.o -MD -MP -MF $(DEPDIR)/test_base_exception-exception_test.Tpo -c -o test_base_exception-exception_test.o `test -f 'supersonic/base/exception/exception_test.cc' || echo '$(srcdir)/'`supersonic/base/exception/exception_test.cc
	$(am__mv) $(DEPDIR)/test_base_exception-exception_test.Tpo $(DEPDIR)/test_base_exception-exception_test.Po
#	source='supersonic/base/exception/exception_test.cc' object='test_base_exception-exception_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-exception_test.o `test -f 'supersonic/base/exception/exception_test.cc' || echo '$(srcdir)/'`supersonic/base/exception/exception_test.cc

test_base_exception-exception_test.obj: supersonic/base/exception/exception_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-exception_test.obj -MD -MP -MF $(DEPDIR)/test_base_exception-exception_test.Tpo -c -o test_base_exception-exception_test.obj `if test -f 'supersonic/base/exception/exception_test.cc'; then $(CYGPATH_W) 'supersonic/base/exception/exception_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/exception/exception_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_exception-exception_test.Tpo $(DEPDIR)/test_base_exception-exception_test.Po
#	source='supersonic/base/exception/exception_test.cc' object='test_base_exception-exception_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-exception_test.obj `if test -f 'supersonic/base/exception/exception_test.cc'; then $(CYGPATH_W) 'supersonic/base/exception/exception_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/exception/exception_test.cc'; fi`

test_base_exception-result_test.o: supersonic/base/exception/result_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-result_test.o -MD -MP -MF $(DEPDIR)/test_base_exception-result_test.Tpo -c -o test_base_exception-result_test.o `test -f 'supersonic/base/exception/result_test.cc' || echo '$(srcdir)/'`supersonic/base/exception/result_test.cc
	$(am__mv) $(DEPDIR)/test_base_exception-result_test.Tpo $(DEPDIR)/test_base_exception-result_test.Po
#	source='supersonic/base/exception/result_test.cc' object='test_base_exception-result_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-result_test.o `test -f 'supersonic/base/exception/result_test.cc' || echo '$(srcdir)/'`supersonic/base/exception/result_test.cc

test_base_exception-result_test.obj: supersonic/base/exception/result_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_exception-result_test.obj -MD -MP -MF $(DEPDIR)/test_base_exception-result_test.Tpo -c -o test_base_exception-result_test.obj `if test -f 'supersonic/base/exception/result_test.cc'; then $(CYGPATH_W) 'supersonic/base/exception/result_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/exception/result_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_exception-result_test.Tpo $(DEPDIR)/test_base_exception-result_test.Po
#	source='supersonic/base/exception/result_test.cc' object='test_base_exception-result_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_exception_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_exception-result_test.obj `if test -f 'supersonic/base/exception/result_test.cc'; then $(CYGPATH_W) 'supersonic/base/exception/result_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/exception/result_test.cc'; fi`

test_base_infrastructure-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-gtest-all.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-gtest-all.Tpo -c -o test_base_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-gtest-all.Tpo $(DEPDIR)/test_base_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_base_infrastructure-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_base_infrastructure-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-gtest-all.Tpo -c -o test_base_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-gtest-all.Tpo $(DEPDIR)/test_base_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_base_infrastructure-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_base_infrastructure-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-gmock-all.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-gmock-all.Tpo -c -o test_base_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-gmock-all.Tpo $(DEPDIR)/test_base_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_base_infrastructure-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_base_infrastructure-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-gmock-all.Tpo -c -o test_base_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-gmock-all.Tpo $(DEPDIR)/test_base_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_base_infrastructure-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_base_infrastructure-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-supersonic_test_main.Tpo -c -o test_base_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_base_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_base_infrastructure-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_base_infrastructure-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-supersonic_test_main.Tpo -c -o test_base_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_base_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_base_infrastructure-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_base_infrastructure-aggregation_operators_test.o: supersonic/base/infrastructure/aggregation_operators_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-aggregation_operators_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-aggregation_operators_test.Tpo -c -o test_base_infrastructure-aggregation_operators_test.o `test -f 'supersonic/base/infrastructure/aggregation_operators_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/aggregation_operators_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-aggregation_operators_test.Tpo $(DEPDIR)/test_base_infrastructure-aggregation_operators_test.Po
#	source='supersonic/base/infrastructure/aggregation_operators_test.cc' object='test_base_infrastructure-aggregation_operators_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-aggregation_operators_test.o `test -f 'supersonic/base/infrastructure/aggregation_operators_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/aggregation_operators_test.cc

test_base_infrastructure-aggregation_operators_test.obj: supersonic/base/infrastructure/aggregation_operators_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-aggregation_operators_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-aggregation_operators_test.Tpo -c -o test_base_infrastructure-aggregation_operators_test.obj `if test -f 'supersonic/base/infrastructure/aggregation_operators_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/aggregation_operators_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/aggregation_operators_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-aggregation_operators_test.Tpo $(DEPDIR)/test_base_infrastructure-aggregation_operators_test.Po
#	source='supersonic/base/infrastructure/aggregation_operators_test.cc' object='test_base_infrastructure-aggregation_operators_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-aggregation_operators_test.obj `if test -f 'supersonic/base/infrastructure/aggregation_operators_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/aggregation_operators_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/aggregation_operators_test.cc'; fi`

test_base_infrastructure-bit_pointers_test.o: supersonic/base/infrastructure/bit_pointers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-bit_pointers_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-bit_pointers_test.Tpo -c -o test_base_infrastructure-bit_pointers_test.o `test -f 'supersonic/base/infrastructure/bit_pointers_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/bit_pointers_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-bit_pointers_test.Tpo $(DEPDIR)/test_base_infrastructure-bit_pointers_test.Po
#	source='supersonic/base/infrastructure/bit_pointers_test.cc' object='test_base_infrastructure-bit_pointers_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-bit_pointers_test.o `test -f 'supersonic/base/infrastructure/bit_pointers_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/bit_pointers_test.cc

test_base_infrastructure-bit_pointers_test.obj: supersonic/base/infrastructure/bit_pointers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-bit_pointers_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-bit_pointers_test.Tpo -c -o test_base_infrastructure-bit_pointers_test.obj `if test -f 'supersonic/base/infrastructure/bit_pointers_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/bit_pointers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/bit_pointers_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-bit_pointers_test.Tpo $(DEPDIR)/test_base_infrastructure-bit_pointers_test.Po
#	source='supersonic/base/infrastructure/bit_pointers_test.cc' object='test_base_infrastructure-bit_pointers_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-bit_pointers_test.obj `if test -f 'supersonic/base/infrastructure/bit_pointers_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/bit_pointers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/bit_pointers_test.cc'; fi`

test_base_infrastructure-block_test.o: supersonic/base/infrastructure/block_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-block_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-block_test.Tpo -c -o test_base_infrastructure-block_test.o `test -f 'supersonic/base/infrastructure/block_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/block_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-block_test.Tpo $(DEPDIR)/test_base_infrastructure-block_test.Po
#	source='supersonic/base/infrastructure/block_test.cc' object='test_base_infrastructure-block_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-block_test.o `test -f 'supersonic/base/infrastructure/block_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/block_test.cc

test_base_infrastructure-block_test.obj: supersonic/base/infrastructure/block_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-block_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-block_test.Tpo -c -o test_base_infrastructure-block_test.obj `if test -f 'supersonic/base/infrastructure/block_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/block_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/block_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-block_test.Tpo $(DEPDIR)/test_base_infrastructure-block_test.Po
#	source='supersonic/base/infrastructure/block_test.cc' object='test_base_infrastructure-block_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-block_test.obj `if test -f 'supersonic/base/infrastructure/block_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/block_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/block_test.cc'; fi`

test_base_infrastructure-copy_column_test.o: supersonic/base/infrastructure/copy_column_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-copy_column_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-copy_column_test.Tpo -c -o test_base_infrastructure-copy_column_test.o `test -f 'supersonic/base/infrastructure/copy_column_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/copy_column_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-copy_column_test.Tpo $(DEPDIR)/test_base_infrastructure-copy_column_test.Po
#	source='supersonic/base/infrastructure/copy_column_test.cc' object='test_base_infrastructure-copy_column_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-copy_column_test.o `test -f 'supersonic/base/infrastructure/copy_column_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/copy_column_test.cc

test_base_infrastructure-copy_column_test.obj: supersonic/base/infrastructure/copy_column_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-copy_column_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-copy_column_test.Tpo -c -o test_base_infrastructure-copy_column_test.obj `if test -f 'supersonic/base/infrastructure/copy_column_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/copy_column_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/copy_column_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-copy_column_test.Tpo $(DEPDIR)/test_base_infrastructure-copy_column_test.Po
#	source='supersonic/base/infrastructure/copy_column_test.cc' object='test_base_infrastructure-copy_column_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-copy_column_test.obj `if test -f 'supersonic/base/infrastructure/copy_column_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/copy_column_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/copy_column_test.cc'; fi`

test_base_infrastructure-double_buffered_block_test.o: supersonic/base/infrastructure/double_buffered_block_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-double_buffered_block_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-double_buffered_block_test.Tpo -c -o test_base_infrastructure-double_buffered_block_test.o `test -f 'supersonic/base/infrastructure/double_buffered_block_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/double_buffered_block_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-double_buffered_block_test.Tpo $(DEPDIR)/test_base_infrastructure-double_buffered_block_test.Po
#	source='supersonic/base/infrastructure/double_buffered_block_test.cc' object='test_base_infrastructure-double_buffered_block_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-double_buffered_block_test.o `test -f 'supersonic/base/infrastructure/double_buffered_block_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/double_buffered_block_test.cc

test_base_infrastructure-double_buffered_block_test.obj: supersonic/base/infrastructure/double_buffered_block_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-double_buffered_block_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-double_buffered_block_test.Tpo -c -o test_base_infrastructure-double_buffered_block_test.obj `if test -f 'supersonic/base/infrastructure/double_buffered_block_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/double_buffered_block_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/double_buffered_block_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-double_buffered_block_test.Tpo $(DEPDIR)/test_base_infrastructure-double_buffered_block_test.Po
#	source='supersonic/base/infrastructure/double_buffered_block_test.cc' object='test_base_infrastructure-double_buffered_block_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-double_buffered_block_test.obj `if test -f 'supersonic/base/infrastructure/double_buffered_block_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/double_buffered_block_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/double_buffered_block_test.cc'; fi`

test_base_infrastructure-operators_test.o: supersonic/base/infrastructure/operators_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-operators_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-operators_test.Tpo -c -o test_base_infrastructure-operators_test.o `test -f 'supersonic/base/infrastructure/operators_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/operators_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-operators_test.Tpo $(DEPDIR)/test_base_infrastructure-operators_test.Po
#	source='supersonic/base/infrastructure/operators_test.cc' object='test_base_infrastructure-operators_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-operators_test.o `test -f 'supersonic/base/infrastructure/operators_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/operators_test.cc

test_base_infrastructure-operators_test.obj: supersonic/base/infrastructure/operators_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-operators_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-operators_test.Tpo -c -o test_base_infrastructure-operators_test.obj `if test -f 'supersonic/base/infrastructure/operators_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/operators_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/operators_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-operators_test.Tpo $(DEPDIR)/test_base_infrastructure-operators_test.Po
#	source='supersonic/base/infrastructure/operators_test.cc' object='test_base_infrastructure-operators_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-operators_test.obj `if test -f 'supersonic/base/infrastructure/operators_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/operators_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/operators_test.cc'; fi`

test_base_infrastructure-projector_test.o: supersonic/base/infrastructure/projector_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-projector_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-projector_test.Tpo -c -o test_base_infrastructure-projector_test.o `test -f 'supersonic/base/infrastructure/projector_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/projector_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-projector_test.Tpo $(DEPDIR)/test_base_infrastructure-projector_test.Po
#	source='supersonic/base/infrastructure/projector_test.cc' object='test_base_infrastructure-projector_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-projector_test.o `test -f 'supersonic/base/infrastructure/projector_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/projector_test.cc

test_base_infrastructure-projector_test.obj: supersonic/base/infrastructure/projector_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-projector_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-projector_test.Tpo -c -o test_base_infrastructure-projector_test.obj `if test -f 'supersonic/base/infrastructure/projector_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/projector_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/projector_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-projector_test.Tpo $(DEPDIR)/test_base_infrastructure-projector_test.Po
#	source='supersonic/base/infrastructure/projector_test.cc' object='test_base_infrastructure-projector_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-projector_test.obj `if test -f 'supersonic/base/infrastructure/projector_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/projector_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/projector_test.cc'; fi`

test_base_infrastructure-types_infrastructure_test.o: supersonic/base/infrastructure/types_infrastructure_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-types_infrastructure_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-types_infrastructure_test.Tpo -c -o test_base_infrastructure-types_infrastructure_test.o `test -f 'supersonic/base/infrastructure/types_infrastructure_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types_infrastructure_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-types_infrastructure_test.Tpo $(DEPDIR)/test_base_infrastructure-types_infrastructure_test.Po
#	source='supersonic/base/infrastructure/types_infrastructure_test.cc' object='test_base_infrastructure-types_infrastructure_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-types_infrastructure_test.o `test -f 'supersonic/base/infrastructure/types_infrastructure_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types_infrastructure_test.cc

test_base_infrastructure-types_infrastructure_test.obj: supersonic/base/infrastructure/types_infrastructure_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-types_infrastructure_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-types_infrastructure_test.Tpo -c -o test_base_infrastructure-types_infrastructure_test.obj `if test -f 'supersonic/base/infrastructure/types_infrastructure_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/types_infrastructure_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/types_infrastructure_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-types_infrastructure_test.Tpo $(DEPDIR)/test_base_infrastructure-types_infrastructure_test.Po
#	source='supersonic/base/infrastructure/types_infrastructure_test.cc' object='test_base_infrastructure-types_infrastructure_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-types_infrastructure_test.obj `if test -f 'supersonic/base/infrastructure/types_infrastructure_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/types_infrastructure_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/types_infrastructure_test.cc'; fi`

test_base_infrastructure-types_test.o: supersonic/base/infrastructure/types_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-types_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-types_test.Tpo -c -o test_base_infrastructure-types_test.o `test -f 'supersonic/base/infrastructure/types_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-types_test.Tpo $(DEPDIR)/test_base_infrastructure-types_test.Po
#	source='supersonic/base/infrastructure/types_test.cc' object='test_base_infrastructure-types_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-types_test.o `test -f 'supersonic/base/infrastructure/types_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/types_test.cc

test_base_infrastructure-types_test.obj: supersonic/base/infrastructure/types_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-types_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-types_test.Tpo -c -o test_base_infrastructure-types_test.obj `if test -f 'supersonic/base/infrastructure/types_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/types_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/types_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-types_test.Tpo $(DEPDIR)/test_base_infrastructure-types_test.Po
#	source='supersonic/base/infrastructure/types_test.cc' object='test_base_infrastructure-types_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-types_test.obj `if test -f 'supersonic/base/infrastructure/types_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/types_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/types_test.cc'; fi`

test_base_infrastructure-variant_pointer_test.o: supersonic/base/infrastructure/variant_pointer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-variant_pointer_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-variant_pointer_test.Tpo -c -o test_base_infrastructure-variant_pointer_test.o `test -f 'supersonic/base/infrastructure/variant_pointer_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/variant_pointer_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-variant_pointer_test.Tpo $(DEPDIR)/test_base_infrastructure-variant_pointer_test.Po
#	source='supersonic/base/infrastructure/variant_pointer_test.cc' object='test_base_infrastructure-variant_pointer_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-variant_pointer_test.o `test -f 'supersonic/base/infrastructure/variant_pointer_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/variant_pointer_test.cc

test_base_infrastructure-variant_pointer_test.obj: supersonic/base/infrastructure/variant_pointer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-variant_pointer_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-variant_pointer_test.Tpo -c -o test_base_infrastructure-variant_pointer_test.obj `if test -f 'supersonic/base/infrastructure/variant_pointer_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/variant_pointer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/variant_pointer_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-variant_pointer_test.Tpo $(DEPDIR)/test_base_infrastructure-variant_pointer_test.Po
#	source='supersonic/base/infrastructure/variant_pointer_test.cc' object='test_base_infrastructure-variant_pointer_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-variant_pointer_test.obj `if test -f 'supersonic/base/infrastructure/variant_pointer_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/variant_pointer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/variant_pointer_test.cc'; fi`

test_base_infrastructure-view_copier_test.o: supersonic/base/infrastructure/view_copier_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-view_copier_test.o -MD -MP -MF $(DEPDIR)/test_base_infrastructure-view_copier_test.Tpo -c -o test_base_infrastructure-view_copier_test.o `test -f 'supersonic/base/infrastructure/view_copier_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/view_copier_test.cc
	$(am__mv) $(DEPDIR)/test_base_infrastructure-view_copier_test.Tpo $(DEPDIR)/test_base_infrastructure-view_copier_test.Po
#	source='supersonic/base/infrastructure/view_copier_test.cc' object='test_base_infrastructure-view_copier_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-view_copier_test.o `test -f 'supersonic/base/infrastructure/view_copier_test.cc' || echo '$(srcdir)/'`supersonic/base/infrastructure/view_copier_test.cc

test_base_infrastructure-view_copier_test.obj: supersonic/base/infrastructure/view_copier_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_infrastructure-view_copier_test.obj -MD -MP -MF $(DEPDIR)/test_base_infrastructure-view_copier_test.Tpo -c -o test_base_infrastructure-view_copier_test.obj `if test -f 'supersonic/base/infrastructure/view_copier_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/view_copier_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/view_copier_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_infrastructure-view_copier_test.Tpo $(DEPDIR)/test_base_infrastructure-view_copier_test.Po
#	source='supersonic/base/infrastructure/view_copier_test.cc' object='test_base_infrastructure-view_copier_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_infrastructure-view_copier_test.obj `if test -f 'supersonic/base/infrastructure/view_copier_test.cc'; then $(CYGPATH_W) 'supersonic/base/infrastructure/view_copier_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/infrastructure/view_copier_test.cc'; fi`

test_base_memory-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-gtest-all.o -MD -MP -MF $(DEPDIR)/test_base_memory-gtest-all.Tpo -c -o test_base_memory-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_base_memory-gtest-all.Tpo $(DEPDIR)/test_base_memory-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_base_memory-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_base_memory-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_base_memory-gtest-all.Tpo -c -o test_base_memory-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_memory-gtest-all.Tpo $(DEPDIR)/test_base_memory-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_base_memory-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_base_memory-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-gmock-all.o -MD -MP -MF $(DEPDIR)/test_base_memory-gmock-all.Tpo -c -o test_base_memory-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_base_memory-gmock-all.Tpo $(DEPDIR)/test_base_memory-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_base_memory-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_base_memory-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_base_memory-gmock-all.Tpo -c -o test_base_memory-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_memory-gmock-all.Tpo $(DEPDIR)/test_base_memory-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_base_memory-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_base_memory-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_base_memory-supersonic_test_main.Tpo -c -o test_base_memory-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_base_memory-supersonic_test_main.Tpo $(DEPDIR)/test_base_memory-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_base_memory-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_base_memory-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_base_memory-supersonic_test_main.Tpo -c -o test_base_memory-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_memory-supersonic_test_main.Tpo $(DEPDIR)/test_base_memory-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_base_memory-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_base_memory-arena_test.o: supersonic/base/memory/arena_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-arena_test.o -MD -MP -MF $(DEPDIR)/test_base_memory-arena_test.Tpo -c -o test_base_memory-arena_test.o `test -f 'supersonic/base/memory/arena_test.cc' || echo '$(srcdir)/'`supersonic/base/memory/arena_test.cc
	$(am__mv) $(DEPDIR)/test_base_memory-arena_test.Tpo $(DEPDIR)/test_base_memory-arena_test.Po
#	source='supersonic/base/memory/arena_test.cc' object='test_base_memory-arena_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-arena_test.o `test -f 'supersonic/base/memory/arena_test.cc' || echo '$(srcdir)/'`supersonic/base/memory/arena_test.cc

test_base_memory-arena_test.obj: supersonic/base/memory/arena_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-arena_test.obj -MD -MP -MF $(DEPDIR)/test_base_memory-arena_test.Tpo -c -o test_base_memory-arena_test.obj `if test -f 'supersonic/base/memory/arena_test.cc'; then $(CYGPATH_W) 'supersonic/base/memory/arena_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/memory/arena_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_memory-arena_test.Tpo $(DEPDIR)/test_base_memory-arena_test.Po
#	source='supersonic/base/memory/arena_test.cc' object='test_base_memory-arena_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-arena_test.obj `if test -f 'supersonic/base/memory/arena_test.cc'; then $(CYGPATH_W) 'supersonic/base/memory/arena_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/memory/arena_test.cc'; fi`

test_base_memory-memory_mocks.o: supersonic/base/memory/memory_mocks.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-memory_mocks.o -MD -MP -MF $(DEPDIR)/test_base_memory-memory_mocks.Tpo -c -o test_base_memory-memory_mocks.o `test -f 'supersonic/base/memory/memory_mocks.cc' || echo '$(srcdir)/'`supersonic/base/memory/memory_mocks.cc
	$(am__mv) $(DEPDIR)/test_base_memory-memory_mocks.Tpo $(DEPDIR)/test_base_memory-memory_mocks.Po
#	source='supersonic/base/memory/memory_mocks.cc' object='test_base_memory-memory_mocks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-memory_mocks.o `test -f 'supersonic/base/memory/memory_mocks.cc' || echo '$(srcdir)/'`supersonic/base/memory/memory_mocks.cc

test_base_memory-memory_mocks.obj: supersonic/base/memory/memory_mocks.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-memory_mocks.obj -MD -MP -MF $(DEPDIR)/test_base_memory-memory_mocks.Tpo -c -o test_base_memory-memory_mocks.obj `if test -f 'supersonic/base/memory/memory_mocks.cc'; then $(CYGPATH_W) 'supersonic/base/memory/memory_mocks.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/memory/memory_mocks.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_memory-memory_mocks.Tpo $(DEPDIR)/test_base_memory-memory_mocks.Po
#	source='supersonic/base/memory/memory_mocks.cc' object='test_base_memory-memory_mocks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-memory_mocks.obj `if test -f 'supersonic/base/memory/memory_mocks.cc'; then $(CYGPATH_W) 'supersonic/base/memory/memory_mocks.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/memory/memory_mocks.cc'; fi`

test_base_memory-memory_test.o: supersonic/base/memory/memory_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-memory_test.o -MD -MP -MF $(DEPDIR)/test_base_memory-memory_test.Tpo -c -o test_base_memory-memory_test.o `test -f 'supersonic/base/memory/memory_test.cc' || echo '$(srcdir)/'`supersonic/base/memory/memory_test.cc
	$(am__mv) $(DEPDIR)/test_base_memory-memory_test.Tpo $(DEPDIR)/test_base_memory-memory_test.Po
#	source='supersonic/base/memory/memory_test.cc' object='test_base_memory-memory_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-memory_test.o `test -f 'supersonic/base/memory/memory_test.cc' || echo '$(srcdir)/'`supersonic/base/memory/memory_test.cc

test_base_memory-memory_test.obj: supersonic/base/memory/memory_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_base_memory-memory_test.obj -MD -MP -MF $(DEPDIR)/test_base_memory-memory_test.Tpo -c -o test_base_memory-memory_test.obj `if test -f 'supersonic/base/memory/memory_test.cc'; then $(CYGPATH_W) 'supersonic/base/memory/memory_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/memory/memory_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_base_memory-memory_test.Tpo $(DEPDIR)/test_base_memory-memory_test.Po
#	source='supersonic/base/memory/memory_test.cc' object='test_base_memory-memory_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_base_memory_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_base_memory-memory_test.obj `if test -f 'supersonic/base/memory/memory_test.cc'; then $(CYGPATH_W) 'supersonic/base/memory/memory_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/base/memory/memory_test.cc'; fi`

test_benchmark_dot-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-gtest-all.o -MD -MP -MF $(DEPDIR)/test_benchmark_dot-gtest-all.Tpo -c -o test_benchmark_dot-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_benchmark_dot-gtest-all.Tpo $(DEPDIR)/test_benchmark_dot-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_benchmark_dot-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_benchmark_dot-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_benchmark_dot-gtest-all.Tpo -c -o test_benchmark_dot-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_dot-gtest-all.Tpo $(DEPDIR)/test_benchmark_dot-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_benchmark_dot-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_benchmark_dot-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-gmock-all.o -MD -MP -MF $(DEPDIR)/test_benchmark_dot-gmock-all.Tpo -c -o test_benchmark_dot-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_benchmark_dot-gmock-all.Tpo $(DEPDIR)/test_benchmark_dot-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_benchmark_dot-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_benchmark_dot-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_benchmark_dot-gmock-all.Tpo -c -o test_benchmark_dot-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_dot-gmock-all.Tpo $(DEPDIR)/test_benchmark_dot-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_benchmark_dot-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_benchmark_dot-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_benchmark_dot-supersonic_test_main.Tpo -c -o test_benchmark_dot-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_benchmark_dot-supersonic_test_main.Tpo $(DEPDIR)/test_benchmark_dot-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_benchmark_dot-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_benchmark_dot-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_benchmark_dot-supersonic_test_main.Tpo -c -o test_benchmark_dot-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_dot-supersonic_test_main.Tpo $(DEPDIR)/test_benchmark_dot-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_benchmark_dot-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_benchmark_dot-dot_drawer_test.o: supersonic/benchmark/dot/dot_drawer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-dot_drawer_test.o -MD -MP -MF $(DEPDIR)/test_benchmark_dot-dot_drawer_test.Tpo -c -o test_benchmark_dot-dot_drawer_test.o `test -f 'supersonic/benchmark/dot/dot_drawer_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/dot/dot_drawer_test.cc
	$(am__mv) $(DEPDIR)/test_benchmark_dot-dot_drawer_test.Tpo $(DEPDIR)/test_benchmark_dot-dot_drawer_test.Po
#	source='supersonic/benchmark/dot/dot_drawer_test.cc' object='test_benchmark_dot-dot_drawer_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-dot_drawer_test.o `test -f 'supersonic/benchmark/dot/dot_drawer_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/dot/dot_drawer_test.cc

test_benchmark_dot-dot_drawer_test.obj: supersonic/benchmark/dot/dot_drawer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_dot-dot_drawer_test.obj -MD -MP -MF $(DEPDIR)/test_benchmark_dot-dot_drawer_test.Tpo -c -o test_benchmark_dot-dot_drawer_test.obj `if test -f 'supersonic/benchmark/dot/dot_drawer_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/dot/dot_drawer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/dot/dot_drawer_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_dot-dot_drawer_test.Tpo $(DEPDIR)/test_benchmark_dot-dot_drawer_test.Po
#	source='supersonic/benchmark/dot/dot_drawer_test.cc' object='test_benchmark_dot-dot_drawer_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_dot_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_dot-dot_drawer_test.obj `if test -f 'supersonic/benchmark/dot/dot_drawer_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/dot/dot_drawer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/dot/dot_drawer_test.cc'; fi`

test_benchmark_infrastructure-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-gtest-all.o -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-gtest-all.Tpo -c -o test_benchmark_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-gtest-all.Tpo $(DEPDIR)/test_benchmark_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_benchmark_infrastructure-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_benchmark_infrastructure-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-gtest-all.Tpo -c -o test_benchmark_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-gtest-all.Tpo $(DEPDIR)/test_benchmark_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_benchmark_infrastructure-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_benchmark_infrastructure-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-gmock-all.o -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-gmock-all.Tpo -c -o test_benchmark_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-gmock-all.Tpo $(DEPDIR)/test_benchmark_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_benchmark_infrastructure-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_benchmark_infrastructure-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-gmock-all.Tpo -c -o test_benchmark_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-gmock-all.Tpo $(DEPDIR)/test_benchmark_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_benchmark_infrastructure-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_benchmark_infrastructure-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-supersonic_test_main.Tpo -c -o test_benchmark_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_benchmark_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_benchmark_infrastructure-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_benchmark_infrastructure-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-supersonic_test_main.Tpo -c -o test_benchmark_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_benchmark_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_benchmark_infrastructure-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_benchmark_infrastructure-benchmark_listener_test.o: supersonic/benchmark/infrastructure/benchmark_listener_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-benchmark_listener_test.o -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-benchmark_listener_test.Tpo -c -o test_benchmark_infrastructure-benchmark_listener_test.o `test -f 'supersonic/benchmark/infrastructure/benchmark_listener_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_listener_test.cc
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-benchmark_listener_test.Tpo $(DEPDIR)/test_benchmark_infrastructure-benchmark_listener_test.Po
#	source='supersonic/benchmark/infrastructure/benchmark_listener_test.cc' object='test_benchmark_infrastructure-benchmark_listener_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-benchmark_listener_test.o `test -f 'supersonic/benchmark/infrastructure/benchmark_listener_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_listener_test.cc

test_benchmark_infrastructure-benchmark_listener_test.obj: supersonic/benchmark/infrastructure/benchmark_listener_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-benchmark_listener_test.obj -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-benchmark_listener_test.Tpo -c -o test_benchmark_infrastructure-benchmark_listener_test.obj `if test -f 'supersonic/benchmark/infrastructure/benchmark_listener_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/infrastructure/benchmark_listener_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/infrastructure/benchmark_listener_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-benchmark_listener_test.Tpo $(DEPDIR)/test_benchmark_infrastructure-benchmark_listener_test.Po
#	source='supersonic/benchmark/infrastructure/benchmark_listener_test.cc' object='test_benchmark_infrastructure-benchmark_listener_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-benchmark_listener_test.obj `if test -f 'supersonic/benchmark/infrastructure/benchmark_listener_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/infrastructure/benchmark_listener_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/infrastructure/benchmark_listener_test.cc'; fi`

test_benchmark_infrastructure-benchmark_transformer_test.o: supersonic/benchmark/infrastructure/benchmark_transformer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-benchmark_transformer_test.o -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-benchmark_transformer_test.Tpo -c -o test_benchmark_infrastructure-benchmark_transformer_test.o `test -f 'supersonic/benchmark/infrastructure/benchmark_transformer_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_transformer_test.cc
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-benchmark_transformer_test.Tpo $(DEPDIR)/test_benchmark_infrastructure-benchmark_transformer_test.Po
#	source='supersonic/benchmark/infrastructure/benchmark_transformer_test.cc' object='test_benchmark_infrastructure-benchmark_transformer_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-benchmark_transformer_test.o `test -f 'supersonic/benchmark/infrastructure/benchmark_transformer_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/benchmark_transformer_test.cc

test_benchmark_infrastructure-benchmark_transformer_test.obj: supersonic/benchmark/infrastructure/benchmark_transformer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-benchmark_transformer_test.obj -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-benchmark_transformer_test.Tpo -c -o test_benchmark_infrastructure-benchmark_transformer_test.obj `if test -f 'supersonic/benchmark/infrastructure/benchmark_transformer_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/infrastructure/benchmark_transformer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/infrastructure/benchmark_transformer_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-benchmark_transformer_test.Tpo $(DEPDIR)/test_benchmark_infrastructure-benchmark_transformer_test.Po
#	source='supersonic/benchmark/infrastructure/benchmark_transformer_test.cc' object='test_benchmark_infrastructure-benchmark_transformer_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-benchmark_transformer_test.obj `if test -f 'supersonic/benchmark/infrastructure/benchmark_transformer_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/infrastructure/benchmark_transformer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/infrastructure/benchmark_transformer_test.cc'; fi`

test_benchmark_infrastructure-node_test.o: supersonic/benchmark/infrastructure/node_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-node_test.o -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-node_test.Tpo -c -o test_benchmark_infrastructure-node_test.o `test -f 'supersonic/benchmark/infrastructure/node_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/node_test.cc
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-node_test.Tpo $(DEPDIR)/test_benchmark_infrastructure-node_test.Po
#	source='supersonic/benchmark/infrastructure/node_test.cc' object='test_benchmark_infrastructure-node_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-node_test.o `test -f 'supersonic/benchmark/infrastructure/node_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/infrastructure/node_test.cc

test_benchmark_infrastructure-node_test.obj: supersonic/benchmark/infrastructure/node_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_infrastructure-node_test.obj -MD -MP -MF $(DEPDIR)/test_benchmark_infrastructure-node_test.Tpo -c -o test_benchmark_infrastructure-node_test.obj `if test -f 'supersonic/benchmark/infrastructure/node_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/infrastructure/node_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/infrastructure/node_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_infrastructure-node_test.Tpo $(DEPDIR)/test_benchmark_infrastructure-node_test.Po
#	source='supersonic/benchmark/infrastructure/node_test.cc' object='test_benchmark_infrastructure-node_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_infrastructure-node_test.obj `if test -f 'supersonic/benchmark/infrastructure/node_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/infrastructure/node_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/infrastructure/node_test.cc'; fi`

test_benchmark_manager-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-gtest-all.o -MD -MP -MF $(DEPDIR)/test_benchmark_manager-gtest-all.Tpo -c -o test_benchmark_manager-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_benchmark_manager-gtest-all.Tpo $(DEPDIR)/test_benchmark_manager-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_benchmark_manager-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_benchmark_manager-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_benchmark_manager-gtest-all.Tpo -c -o test_benchmark_manager-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_manager-gtest-all.Tpo $(DEPDIR)/test_benchmark_manager-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_benchmark_manager-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_benchmark_manager-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-gmock-all.o -MD -MP -MF $(DEPDIR)/test_benchmark_manager-gmock-all.Tpo -c -o test_benchmark_manager-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_benchmark_manager-gmock-all.Tpo $(DEPDIR)/test_benchmark_manager-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_benchmark_manager-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_benchmark_manager-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_benchmark_manager-gmock-all.Tpo -c -o test_benchmark_manager-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_manager-gmock-all.Tpo $(DEPDIR)/test_benchmark_manager-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_benchmark_manager-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_benchmark_manager-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_benchmark_manager-supersonic_test_main.Tpo -c -o test_benchmark_manager-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_benchmark_manager-supersonic_test_main.Tpo $(DEPDIR)/test_benchmark_manager-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_benchmark_manager-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_benchmark_manager-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_benchmark_manager-supersonic_test_main.Tpo -c -o test_benchmark_manager-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_manager-supersonic_test_main.Tpo $(DEPDIR)/test_benchmark_manager-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_benchmark_manager-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_benchmark_manager-benchmark_manager_test.o: supersonic/benchmark/manager/benchmark_manager_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-benchmark_manager_test.o -MD -MP -MF $(DEPDIR)/test_benchmark_manager-benchmark_manager_test.Tpo -c -o test_benchmark_manager-benchmark_manager_test.o `test -f 'supersonic/benchmark/manager/benchmark_manager_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/manager/benchmark_manager_test.cc
	$(am__mv) $(DEPDIR)/test_benchmark_manager-benchmark_manager_test.Tpo $(DEPDIR)/test_benchmark_manager-benchmark_manager_test.Po
#	source='supersonic/benchmark/manager/benchmark_manager_test.cc' object='test_benchmark_manager-benchmark_manager_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-benchmark_manager_test.o `test -f 'supersonic/benchmark/manager/benchmark_manager_test.cc' || echo '$(srcdir)/'`supersonic/benchmark/manager/benchmark_manager_test.cc

test_benchmark_manager-benchmark_manager_test.obj: supersonic/benchmark/manager/benchmark_manager_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_benchmark_manager-benchmark_manager_test.obj -MD -MP -MF $(DEPDIR)/test_benchmark_manager-benchmark_manager_test.Tpo -c -o test_benchmark_manager-benchmark_manager_test.obj `if test -f 'supersonic/benchmark/manager/benchmark_manager_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/manager/benchmark_manager_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/manager/benchmark_manager_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_benchmark_manager-benchmark_manager_test.Tpo $(DEPDIR)/test_benchmark_manager-benchmark_manager_test.Po
#	source='supersonic/benchmark/manager/benchmark_manager_test.cc' object='test_benchmark_manager-benchmark_manager_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_benchmark_manager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_benchmark_manager-benchmark_manager_test.obj `if test -f 'supersonic/benchmark/manager/benchmark_manager_test.cc'; then $(CYGPATH_W) 'supersonic/benchmark/manager/benchmark_manager_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/benchmark/manager/benchmark_manager_test.cc'; fi`

test_cursor_base-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-gtest-all.o -MD -MP -MF $(DEPDIR)/test_cursor_base-gtest-all.Tpo -c -o test_cursor_base-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_cursor_base-gtest-all.Tpo $(DEPDIR)/test_cursor_base-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_cursor_base-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_cursor_base-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_cursor_base-gtest-all.Tpo -c -o test_cursor_base-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_base-gtest-all.Tpo $(DEPDIR)/test_cursor_base-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_cursor_base-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_cursor_base-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-gmock-all.o -MD -MP -MF $(DEPDIR)/test_cursor_base-gmock-all.Tpo -c -o test_cursor_base-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_cursor_base-gmock-all.Tpo $(DEPDIR)/test_cursor_base-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_cursor_base-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_cursor_base-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_cursor_base-gmock-all.Tpo -c -o test_cursor_base-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_base-gmock-all.Tpo $(DEPDIR)/test_cursor_base-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_cursor_base-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_cursor_base-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_cursor_base-supersonic_test_main.Tpo -c -o test_cursor_base-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_cursor_base-supersonic_test_main.Tpo $(DEPDIR)/test_cursor_base-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_cursor_base-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_cursor_base-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_cursor_base-supersonic_test_main.Tpo -c -o test_cursor_base-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_base-supersonic_test_main.Tpo $(DEPDIR)/test_cursor_base-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_cursor_base-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_cursor_base-lookup_index_test.o: supersonic/cursor/base/lookup_index_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-lookup_index_test.o -MD -MP -MF $(DEPDIR)/test_cursor_base-lookup_index_test.Tpo -c -o test_cursor_base-lookup_index_test.o `test -f 'supersonic/cursor/base/lookup_index_test.cc' || echo '$(srcdir)/'`supersonic/cursor/base/lookup_index_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_base-lookup_index_test.Tpo $(DEPDIR)/test_cursor_base-lookup_index_test.Po
#	source='supersonic/cursor/base/lookup_index_test.cc' object='test_cursor_base-lookup_index_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-lookup_index_test.o `test -f 'supersonic/cursor/base/lookup_index_test.cc' || echo '$(srcdir)/'`supersonic/cursor/base/lookup_index_test.cc

test_cursor_base-lookup_index_test.obj: supersonic/cursor/base/lookup_index_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_base-lookup_index_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_base-lookup_index_test.Tpo -c -o test_cursor_base-lookup_index_test.obj `if test -f 'supersonic/cursor/base/lookup_index_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/base/lookup_index_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/base/lookup_index_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_base-lookup_index_test.Tpo $(DEPDIR)/test_cursor_base-lookup_index_test.Po
#	source='supersonic/cursor/base/lookup_index_test.cc' object='test_cursor_base-lookup_index_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_base_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_base-lookup_index_test.obj `if test -f 'supersonic/cursor/base/lookup_index_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/base/lookup_index_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/base/lookup_index_test.cc'; fi`

test_cursor_core-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-gtest-all.o -MD -MP -MF $(DEPDIR)/test_cursor_core-gtest-all.Tpo -c -o test_cursor_core-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-gtest-all.Tpo $(DEPDIR)/test_cursor_core-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_cursor_core-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_cursor_core-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-gtest-all.Tpo -c -o test_cursor_core-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-gtest-all.Tpo $(DEPDIR)/test_cursor_core-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_cursor_core-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_cursor_core-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-gmock-all.o -MD -MP -MF $(DEPDIR)/test_cursor_core-gmock-all.Tpo -c -o test_cursor_core-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-gmock-all.Tpo $(DEPDIR)/test_cursor_core-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_cursor_core-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_cursor_core-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-gmock-all.Tpo -c -o test_cursor_core-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-gmock-all.Tpo $(DEPDIR)/test_cursor_core-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_cursor_core-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_cursor_core-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_cursor_core-supersonic_test_main.Tpo -c -o test_cursor_core-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-supersonic_test_main.Tpo $(DEPDIR)/test_cursor_core-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_cursor_core-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_cursor_core-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-supersonic_test_main.Tpo -c -o test_cursor_core-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-supersonic_test_main.Tpo $(DEPDIR)/test_cursor_core-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_cursor_core-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_cursor_core-aggregate_clusters_test.o: supersonic/cursor/core/aggregate_clusters_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-aggregate_clusters_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-aggregate_clusters_test.Tpo -c -o test_cursor_core-aggregate_clusters_test.o `test -f 'supersonic/cursor/core/aggregate_clusters_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_clusters_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-aggregate_clusters_test.Tpo $(DEPDIR)/test_cursor_core-aggregate_clusters_test.Po
#	source='supersonic/cursor/core/aggregate_clusters_test.cc' object='test_cursor_core-aggregate_clusters_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-aggregate_clusters_test.o `test -f 'supersonic/cursor/core/aggregate_clusters_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_clusters_test.cc

test_cursor_core-aggregate_clusters_test.obj: supersonic/cursor/core/aggregate_clusters_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-aggregate_clusters_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-aggregate_clusters_test.Tpo -c -o test_cursor_core-aggregate_clusters_test.obj `if test -f 'supersonic/cursor/core/aggregate_clusters_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/aggregate_clusters_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/aggregate_clusters_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-aggregate_clusters_test.Tpo $(DEPDIR)/test_cursor_core-aggregate_clusters_test.Po
#	source='supersonic/cursor/core/aggregate_clusters_test.cc' object='test_cursor_core-aggregate_clusters_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-aggregate_clusters_test.obj `if test -f 'supersonic/cursor/core/aggregate_clusters_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/aggregate_clusters_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/aggregate_clusters_test.cc'; fi`

test_cursor_core-aggregate_groups_test.o: supersonic/cursor/core/aggregate_groups_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-aggregate_groups_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-aggregate_groups_test.Tpo -c -o test_cursor_core-aggregate_groups_test.o `test -f 'supersonic/cursor/core/aggregate_groups_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_groups_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-aggregate_groups_test.Tpo $(DEPDIR)/test_cursor_core-aggregate_groups_test.Po
#	source='supersonic/cursor/core/aggregate_groups_test.cc' object='test_cursor_core-aggregate_groups_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-aggregate_groups_test.o `test -f 'supersonic/cursor/core/aggregate_groups_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_groups_test.cc

test_cursor_core-aggregate_groups_test.obj: supersonic/cursor/core/aggregate_groups_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-aggregate_groups_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-aggregate_groups_test.Tpo -c -o test_cursor_core-aggregate_groups_test.obj `if test -f 'supersonic/cursor/core/aggregate_groups_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/aggregate_groups_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/aggregate_groups_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-aggregate_groups_test.Tpo $(DEPDIR)/test_cursor_core-aggregate_groups_test.Po
#	source='supersonic/cursor/core/aggregate_groups_test.cc' object='test_cursor_core-aggregate_groups_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-aggregate_groups_test.obj `if test -f 'supersonic/cursor/core/aggregate_groups_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/aggregate_groups_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/aggregate_groups_test.cc'; fi`

test_cursor_core-aggregate_scalar_test.o: supersonic/cursor/core/aggregate_scalar_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-aggregate_scalar_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-aggregate_scalar_test.Tpo -c -o test_cursor_core-aggregate_scalar_test.o `test -f 'supersonic/cursor/core/aggregate_scalar_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_scalar_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-aggregate_scalar_test.Tpo $(DEPDIR)/test_cursor_core-aggregate_scalar_test.Po
#	source='supersonic/cursor/core/aggregate_scalar_test.cc' object='test_cursor_core-aggregate_scalar_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-aggregate_scalar_test.o `test -f 'supersonic/cursor/core/aggregate_scalar_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/aggregate_scalar_test.cc

test_cursor_core-aggregate_scalar_test.obj: supersonic/cursor/core/aggregate_scalar_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-aggregate_scalar_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-aggregate_scalar_test.Tpo -c -o test_cursor_core-aggregate_scalar_test.obj `if test -f 'supersonic/cursor/core/aggregate_scalar_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/aggregate_scalar_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/aggregate_scalar_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-aggregate_scalar_test.Tpo $(DEPDIR)/test_cursor_core-aggregate_scalar_test.Po
#	source='supersonic/cursor/core/aggregate_scalar_test.cc' object='test_cursor_core-aggregate_scalar_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-aggregate_scalar_test.obj `if test -f 'supersonic/cursor/core/aggregate_scalar_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/aggregate_scalar_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/aggregate_scalar_test.cc'; fi`

test_cursor_core-coalesce_test.o: supersonic/cursor/core/coalesce_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-coalesce_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-coalesce_test.Tpo -c -o test_cursor_core-coalesce_test.o `test -f 'supersonic/cursor/core/coalesce_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/coalesce_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-coalesce_test.Tpo $(DEPDIR)/test_cursor_core-coalesce_test.Po
#	source='supersonic/cursor/core/coalesce_test.cc' object='test_cursor_core-coalesce_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-coalesce_test.o `test -f 'supersonic/cursor/core/coalesce_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/coalesce_test.cc

test_cursor_core-coalesce_test.obj: supersonic/cursor/core/coalesce_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-coalesce_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-coalesce_test.Tpo -c -o test_cursor_core-coalesce_test.obj `if test -f 'supersonic/cursor/core/coalesce_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/coalesce_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/coalesce_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-coalesce_test.Tpo $(DEPDIR)/test_cursor_core-coalesce_test.Po
#	source='supersonic/cursor/core/coalesce_test.cc' object='test_cursor_core-coalesce_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-coalesce_test.obj `if test -f 'supersonic/cursor/core/coalesce_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/coalesce_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/coalesce_test.cc'; fi`

test_cursor_core-column_aggregator_test.o: supersonic/cursor/core/column_aggregator_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-column_aggregator_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-column_aggregator_test.Tpo -c -o test_cursor_core-column_aggregator_test.o `test -f 'supersonic/cursor/core/column_aggregator_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/column_aggregator_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-column_aggregator_test.Tpo $(DEPDIR)/test_cursor_core-column_aggregator_test.Po
#	source='supersonic/cursor/core/column_aggregator_test.cc' object='test_cursor_core-column_aggregator_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-column_aggregator_test.o `test -f 'supersonic/cursor/core/column_aggregator_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/column_aggregator_test.cc

test_cursor_core-column_aggregator_test.obj: supersonic/cursor/core/column_aggregator_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-column_aggregator_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-column_aggregator_test.Tpo -c -o test_cursor_core-column_aggregator_test.obj `if test -f 'supersonic/cursor/core/column_aggregator_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/column_aggregator_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/column_aggregator_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-column_aggregator_test.Tpo $(DEPDIR)/test_cursor_core-column_aggregator_test.Po
#	source='supersonic/cursor/core/column_aggregator_test.cc' object='test_cursor_core-column_aggregator_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-column_aggregator_test.obj `if test -f 'supersonic/cursor/core/column_aggregator_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/column_aggregator_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/column_aggregator_test.cc'; fi`

test_cursor_core-compute_test.o: supersonic/cursor/core/compute_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-compute_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-compute_test.Tpo -c -o test_cursor_core-compute_test.o `test -f 'supersonic/cursor/core/compute_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/compute_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-compute_test.Tpo $(DEPDIR)/test_cursor_core-compute_test.Po
#	source='supersonic/cursor/core/compute_test.cc' object='test_cursor_core-compute_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-compute_test.o `test -f 'supersonic/cursor/core/compute_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/compute_test.cc

test_cursor_core-compute_test.obj: supersonic/cursor/core/compute_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-compute_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-compute_test.Tpo -c -o test_cursor_core-compute_test.obj `if test -f 'supersonic/cursor/core/compute_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/compute_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/compute_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-compute_test.Tpo $(DEPDIR)/test_cursor_core-compute_test.Po
#	source='supersonic/cursor/core/compute_test.cc' object='test_cursor_core-compute_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-compute_test.obj `if test -f 'supersonic/cursor/core/compute_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/compute_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/compute_test.cc'; fi`

test_cursor_core-filter_test.o: supersonic/cursor/core/filter_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-filter_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-filter_test.Tpo -c -o test_cursor_core-filter_test.o `test -f 'supersonic/cursor/core/filter_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/filter_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-filter_test.Tpo $(DEPDIR)/test_cursor_core-filter_test.Po
#	source='supersonic/cursor/core/filter_test.cc' object='test_cursor_core-filter_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-filter_test.o `test -f 'supersonic/cursor/core/filter_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/filter_test.cc

test_cursor_core-filter_test.obj: supersonic/cursor/core/filter_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-filter_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-filter_test.Tpo -c -o test_cursor_core-filter_test.obj `if test -f 'supersonic/cursor/core/filter_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/filter_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/filter_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-filter_test.Tpo $(DEPDIR)/test_cursor_core-filter_test.Po
#	source='supersonic/cursor/core/filter_test.cc' object='test_cursor_core-filter_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-filter_test.obj `if test -f 'supersonic/cursor/core/filter_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/filter_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/filter_test.cc'; fi`

test_cursor_core-foreign_filter_test.o: supersonic/cursor/core/foreign_filter_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-foreign_filter_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-foreign_filter_test.Tpo -c -o test_cursor_core-foreign_filter_test.o `test -f 'supersonic/cursor/core/foreign_filter_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/foreign_filter_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-foreign_filter_test.Tpo $(DEPDIR)/test_cursor_core-foreign_filter_test.Po
#	source='supersonic/cursor/core/foreign_filter_test.cc' object='test_cursor_core-foreign_filter_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-foreign_filter_test.o `test -f 'supersonic/cursor/core/foreign_filter_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/foreign_filter_test.cc

test_cursor_core-foreign_filter_test.obj: supersonic/cursor/core/foreign_filter_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-foreign_filter_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-foreign_filter_test.Tpo -c -o test_cursor_core-foreign_filter_test.obj `if test -f 'supersonic/cursor/core/foreign_filter_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/foreign_filter_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/foreign_filter_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-foreign_filter_test.Tpo $(DEPDIR)/test_cursor_core-foreign_filter_test.Po
#	source='supersonic/cursor/core/foreign_filter_test.cc' object='test_cursor_core-foreign_filter_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-foreign_filter_test.obj `if test -f 'supersonic/cursor/core/foreign_filter_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/foreign_filter_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/foreign_filter_test.cc'; fi`

test_cursor_core-generate_test.o: supersonic/cursor/core/generate_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-generate_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-generate_test.Tpo -c -o test_cursor_core-generate_test.o `test -f 'supersonic/cursor/core/generate_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/generate_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-generate_test.Tpo $(DEPDIR)/test_cursor_core-generate_test.Po
#	source='supersonic/cursor/core/generate_test.cc' object='test_cursor_core-generate_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-generate_test.o `test -f 'supersonic/cursor/core/generate_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/generate_test.cc

test_cursor_core-generate_test.obj: supersonic/cursor/core/generate_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-generate_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-generate_test.Tpo -c -o test_cursor_core-generate_test.obj `if test -f 'supersonic/cursor/core/generate_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/generate_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/generate_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-generate_test.Tpo $(DEPDIR)/test_cursor_core-generate_test.Po
#	source='supersonic/cursor/core/generate_test.cc' object='test_cursor_core-generate_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-generate_test.obj `if test -f 'supersonic/cursor/core/generate_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/generate_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/generate_test.cc'; fi`

test_cursor_core-hash_join_test.o: supersonic/cursor/core/hash_join_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hash_join_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-hash_join_test.Tpo -c -o test_cursor_core-hash_join_test.o `test -f 'supersonic/cursor/core/hash_join_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hash_join_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-hash_join_test.Tpo $(DEPDIR)/test_cursor_core-hash_join_test.Po
#	source='supersonic/cursor/core/hash_join_test.cc' object='test_cursor_core-hash_join_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hash_join_test.o `test -f 'supersonic/cursor/core/hash_join_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hash_join_test.cc

test_cursor_core-hash_join_test.obj: supersonic/cursor/core/hash_join_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hash_join_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-hash_join_test.Tpo -c -o test_cursor_core-hash_join_test.obj `if test -f 'supersonic/cursor/core/hash_join_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hash_join_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hash_join_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-hash_join_test.Tpo $(DEPDIR)/test_cursor_core-hash_join_test.Po
#	source='supersonic/cursor/core/hash_join_test.cc' object='test_cursor_core-hash_join_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hash_join_test.obj `if test -f 'supersonic/cursor/core/hash_join_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hash_join_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hash_join_test.cc'; fi`

test_cursor_core-hybrid_aggregate_test.o: supersonic/cursor/core/hybrid_aggregate_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hybrid_aggregate_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-hybrid_aggregate_test.Tpo -c -o test_cursor_core-hybrid_aggregate_test.o `test -f 'supersonic/cursor/core/hybrid_aggregate_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_aggregate_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-hybrid_aggregate_test.Tpo $(DEPDIR)/test_cursor_core-hybrid_aggregate_test.Po
#	source='supersonic/cursor/core/hybrid_aggregate_test.cc' object='test_cursor_core-hybrid_aggregate_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hybrid_aggregate_test.o `test -f 'supersonic/cursor/core/hybrid_aggregate_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_aggregate_test.cc

test_cursor_core-hybrid_aggregate_test.obj: supersonic/cursor/core/hybrid_aggregate_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hybrid_aggregate_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-hybrid_aggregate_test.Tpo -c -o test_cursor_core-hybrid_aggregate_test.obj `if test -f 'supersonic/cursor/core/hybrid_aggregate_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hybrid_aggregate_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hybrid_aggregate_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-hybrid_aggregate_test.Tpo $(DEPDIR)/test_cursor_core-hybrid_aggregate_test.Po
#	source='supersonic/cursor/core/hybrid_aggregate_test.cc' object='test_cursor_core-hybrid_aggregate_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hybrid_aggregate_test.obj `if test -f 'supersonic/cursor/core/hybrid_aggregate_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hybrid_aggregate_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hybrid_aggregate_test.cc'; fi`

test_cursor_core-hybrid_aggregate_large_test.o: supersonic/cursor/core/hybrid_aggregate_large_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hybrid_aggregate_large_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-hybrid_aggregate_large_test.Tpo -c -o test_cursor_core-hybrid_aggregate_large_test.o `test -f 'supersonic/cursor/core/hybrid_aggregate_large_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_aggregate_large_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-hybrid_aggregate_large_test.Tpo $(DEPDIR)/test_cursor_core-hybrid_aggregate_large_test.Po
#	source='supersonic/cursor/core/hybrid_aggregate_large_test.cc' object='test_cursor_core-hybrid_aggregate_large_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hybrid_aggregate_large_test.o `test -f 'supersonic/cursor/core/hybrid_aggregate_large_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_aggregate_large_test.cc

test_cursor_core-hybrid_aggregate_large_test.obj: supersonic/cursor/core/hybrid_aggregate_large_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hybrid_aggregate_large_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-hybrid_aggregate_large_test.Tpo -c -o test_cursor_core-hybrid_aggregate_large_test.obj `if test -f 'supersonic/cursor/core/hybrid_aggregate_large_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hybrid_aggregate_large_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hybrid_aggregate_large_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-hybrid_aggregate_large_test.Tpo $(DEPDIR)/test_cursor_core-hybrid_aggregate_large_test.Po
#	source='supersonic/cursor/core/hybrid_aggregate_large_test.cc' object='test_cursor_core-hybrid_aggregate_large_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hybrid_aggregate_large_test.obj `if test -f 'supersonic/cursor/core/hybrid_aggregate_large_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hybrid_aggregate_large_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hybrid_aggregate_large_test.cc'; fi`

test_cursor_core-hybrid_group_utils_test.o: supersonic/cursor/core/hybrid_group_utils_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hybrid_group_utils_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-hybrid_group_utils_test.Tpo -c -o test_cursor_core-hybrid_group_utils_test.o `test -f 'supersonic/cursor/core/hybrid_group_utils_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_group_utils_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-hybrid_group_utils_test.Tpo $(DEPDIR)/test_cursor_core-hybrid_group_utils_test.Po
#	source='supersonic/cursor/core/hybrid_group_utils_test.cc' object='test_cursor_core-hybrid_group_utils_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hybrid_group_utils_test.o `test -f 'supersonic/cursor/core/hybrid_group_utils_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/hybrid_group_utils_test.cc

test_cursor_core-hybrid_group_utils_test.obj: supersonic/cursor/core/hybrid_group_utils_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-hybrid_group_utils_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-hybrid_group_utils_test.Tpo -c -o test_cursor_core-hybrid_group_utils_test.obj `if test -f 'supersonic/cursor/core/hybrid_group_utils_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hybrid_group_utils_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hybrid_group_utils_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-hybrid_group_utils_test.Tpo $(DEPDIR)/test_cursor_core-hybrid_group_utils_test.Po
#	source='supersonic/cursor/core/hybrid_group_utils_test.cc' object='test_cursor_core-hybrid_group_utils_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-hybrid_group_utils_test.obj `if test -f 'supersonic/cursor/core/hybrid_group_utils_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/hybrid_group_utils_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/hybrid_group_utils_test.cc'; fi`

test_cursor_core-limit_test.o: supersonic/cursor/core/limit_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-limit_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-limit_test.Tpo -c -o test_cursor_core-limit_test.o `test -f 'supersonic/cursor/core/limit_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/limit_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-limit_test.Tpo $(DEPDIR)/test_cursor_core-limit_test.Po
#	source='supersonic/cursor/core/limit_test.cc' object='test_cursor_core-limit_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-limit_test.o `test -f 'supersonic/cursor/core/limit_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/limit_test.cc

test_cursor_core-limit_test.obj: supersonic/cursor/core/limit_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-limit_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-limit_test.Tpo -c -o test_cursor_core-limit_test.obj `if test -f 'supersonic/cursor/core/limit_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/limit_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/limit_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-limit_test.Tpo $(DEPDIR)/test_cursor_core-limit_test.Po
#	source='supersonic/cursor/core/limit_test.cc' object='test_cursor_core-limit_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-limit_test.obj `if test -f 'supersonic/cursor/core/limit_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/limit_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/limit_test.cc'; fi`

test_cursor_core-merge_union_all_test.o: supersonic/cursor/core/merge_union_all_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-merge_union_all_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-merge_union_all_test.Tpo -c -o test_cursor_core-merge_union_all_test.o `test -f 'supersonic/cursor/core/merge_union_all_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/merge_union_all_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-merge_union_all_test.Tpo $(DEPDIR)/test_cursor_core-merge_union_all_test.Po
#	source='supersonic/cursor/core/merge_union_all_test.cc' object='test_cursor_core-merge_union_all_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-merge_union_all_test.o `test -f 'supersonic/cursor/core/merge_union_all_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/merge_union_all_test.cc

test_cursor_core-merge_union_all_test.obj: supersonic/cursor/core/merge_union_all_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-merge_union_all_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-merge_union_all_test.Tpo -c -o test_cursor_core-merge_union_all_test.obj `if test -f 'supersonic/cursor/core/merge_union_all_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/merge_union_all_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/merge_union_all_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-merge_union_all_test.Tpo $(DEPDIR)/test_cursor_core-merge_union_all_test.Po
#	source='supersonic/cursor/core/merge_union_all_test.cc' object='test_cursor_core-merge_union_all_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-merge_union_all_test.obj `if test -f 'supersonic/cursor/core/merge_union_all_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/merge_union_all_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/merge_union_all_test.cc'; fi`

test_cursor_core-project_test.o: supersonic/cursor/core/project_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-project_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-project_test.Tpo -c -o test_cursor_core-project_test.o `test -f 'supersonic/cursor/core/project_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/project_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-project_test.Tpo $(DEPDIR)/test_cursor_core-project_test.Po
#	source='supersonic/cursor/core/project_test.cc' object='test_cursor_core-project_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-project_test.o `test -f 'supersonic/cursor/core/project_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/project_test.cc

test_cursor_core-project_test.obj: supersonic/cursor/core/project_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-project_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-project_test.Tpo -c -o test_cursor_core-project_test.obj `if test -f 'supersonic/cursor/core/project_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/project_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/project_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-project_test.Tpo $(DEPDIR)/test_cursor_core-project_test.Po
#	source='supersonic/cursor/core/project_test.cc' object='test_cursor_core-project_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-project_test.obj `if test -f 'supersonic/cursor/core/project_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/project_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/project_test.cc'; fi`

test_cursor_core-rowid_merge_join_test.o: supersonic/cursor/core/rowid_merge_join_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-rowid_merge_join_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-rowid_merge_join_test.Tpo -c -o test_cursor_core-rowid_merge_join_test.o `test -f 'supersonic/cursor/core/rowid_merge_join_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/rowid_merge_join_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-rowid_merge_join_test.Tpo $(DEPDIR)/test_cursor_core-rowid_merge_join_test.Po
#	source='supersonic/cursor/core/rowid_merge_join_test.cc' object='test_cursor_core-rowid_merge_join_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-rowid_merge_join_test.o `test -f 'supersonic/cursor/core/rowid_merge_join_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/rowid_merge_join_test.cc

test_cursor_core-rowid_merge_join_test.obj: supersonic/cursor/core/rowid_merge_join_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-rowid_merge_join_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-rowid_merge_join_test.Tpo -c -o test_cursor_core-rowid_merge_join_test.obj `if test -f 'supersonic/cursor/core/rowid_merge_join_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/rowid_merge_join_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/rowid_merge_join_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-rowid_merge_join_test.Tpo $(DEPDIR)/test_cursor_core-rowid_merge_join_test.Po
#	source='supersonic/cursor/core/rowid_merge_join_test.cc' object='test_cursor_core-rowid_merge_join_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-rowid_merge_join_test.obj `if test -f 'supersonic/cursor/core/rowid_merge_join_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/rowid_merge_join_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/rowid_merge_join_test.cc'; fi`

test_cursor_core-scan_view_test.o: supersonic/cursor/core/scan_view_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-scan_view_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-scan_view_test.Tpo -c -o test_cursor_core-scan_view_test.o `test -f 'supersonic/cursor/core/scan_view_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/scan_view_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-scan_view_test.Tpo $(DEPDIR)/test_cursor_core-scan_view_test.Po
#	source='supersonic/cursor/core/scan_view_test.cc' object='test_cursor_core-scan_view_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-scan_view_test.o `test -f 'supersonic/cursor/core/scan_view_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/scan_view_test.cc

test_cursor_core-scan_view_test.obj: supersonic/cursor/core/scan_view_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-scan_view_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-scan_view_test.Tpo -c -o test_cursor_core-scan_view_test.obj `if test -f 'supersonic/cursor/core/scan_view_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/scan_view_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/scan_view_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-scan_view_test.Tpo $(DEPDIR)/test_cursor_core-scan_view_test.Po
#	source='supersonic/cursor/core/scan_view_test.cc' object='test_cursor_core-scan_view_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-scan_view_test.obj `if test -f 'supersonic/cursor/core/scan_view_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/scan_view_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/scan_view_test.cc'; fi`

test_cursor_core-sort_test.o: supersonic/cursor/core/sort_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-sort_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-sort_test.Tpo -c -o test_cursor_core-sort_test.o `test -f 'supersonic/cursor/core/sort_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/sort_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-sort_test.Tpo $(DEPDIR)/test_cursor_core-sort_test.Po
#	source='supersonic/cursor/core/sort_test.cc' object='test_cursor_core-sort_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-sort_test.o `test -f 'supersonic/cursor/core/sort_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/sort_test.cc

test_cursor_core-sort_test.obj: supersonic/cursor/core/sort_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-sort_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-sort_test.Tpo -c -o test_cursor_core-sort_test.obj `if test -f 'supersonic/cursor/core/sort_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/sort_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/sort_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-sort_test.Tpo $(DEPDIR)/test_cursor_core-sort_test.Po
#	source='supersonic/cursor/core/sort_test.cc' object='test_cursor_core-sort_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-sort_test.obj `if test -f 'supersonic/cursor/core/sort_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/sort_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/sort_test.cc'; fi`

test_cursor_core-specification_builder_test.o: supersonic/cursor/core/specification_builder_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-specification_builder_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-specification_builder_test.Tpo -c -o test_cursor_core-specification_builder_test.o `test -f 'supersonic/cursor/core/specification_builder_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/specification_builder_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-specification_builder_test.Tpo $(DEPDIR)/test_cursor_core-specification_builder_test.Po
#	source='supersonic/cursor/core/specification_builder_test.cc' object='test_cursor_core-specification_builder_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-specification_builder_test.o `test -f 'supersonic/cursor/core/specification_builder_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/specification_builder_test.cc

test_cursor_core-specification_builder_test.obj: supersonic/cursor/core/specification_builder_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-specification_builder_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-specification_builder_test.Tpo -c -o test_cursor_core-specification_builder_test.obj `if test -f 'supersonic/cursor/core/specification_builder_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/specification_builder_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/specification_builder_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-specification_builder_test.Tpo $(DEPDIR)/test_cursor_core-specification_builder_test.Po
#	source='supersonic/cursor/core/specification_builder_test.cc' object='test_cursor_core-specification_builder_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-specification_builder_test.obj `if test -f 'supersonic/cursor/core/specification_builder_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/specification_builder_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/specification_builder_test.cc'; fi`

test_cursor_core-splitter_test.o: supersonic/cursor/core/splitter_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-splitter_test.o -MD -MP -MF $(DEPDIR)/test_cursor_core-splitter_test.Tpo -c -o test_cursor_core-splitter_test.o `test -f 'supersonic/cursor/core/splitter_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/splitter_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_core-splitter_test.Tpo $(DEPDIR)/test_cursor_core-splitter_test.Po
#	source='supersonic/cursor/core/splitter_test.cc' object='test_cursor_core-splitter_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-splitter_test.o `test -f 'supersonic/cursor/core/splitter_test.cc' || echo '$(srcdir)/'`supersonic/cursor/core/splitter_test.cc

test_cursor_core-splitter_test.obj: supersonic/cursor/core/splitter_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_core-splitter_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_core-splitter_test.Tpo -c -o test_cursor_core-splitter_test.obj `if test -f 'supersonic/cursor/core/splitter_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/splitter_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/splitter_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_core-splitter_test.Tpo $(DEPDIR)/test_cursor_core-splitter_test.Po
#	source='supersonic/cursor/core/splitter_test.cc' object='test_cursor_core-splitter_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_core-splitter_test.obj `if test -f 'supersonic/cursor/core/splitter_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/core/splitter_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/core/splitter_test.cc'; fi`

test_cursor_infrastructure-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-gtest-all.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-gtest-all.Tpo -c -o test_cursor_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-gtest-all.Tpo $(DEPDIR)/test_cursor_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_cursor_infrastructure-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_cursor_infrastructure-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-gtest-all.Tpo -c -o test_cursor_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-gtest-all.Tpo $(DEPDIR)/test_cursor_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_cursor_infrastructure-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_cursor_infrastructure-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-gmock-all.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-gmock-all.Tpo -c -o test_cursor_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-gmock-all.Tpo $(DEPDIR)/test_cursor_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_cursor_infrastructure-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_cursor_infrastructure-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-gmock-all.Tpo -c -o test_cursor_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-gmock-all.Tpo $(DEPDIR)/test_cursor_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_cursor_infrastructure-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_cursor_infrastructure-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-supersonic_test_main.Tpo -c -o test_cursor_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_cursor_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_cursor_infrastructure-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_cursor_infrastructure-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-supersonic_test_main.Tpo -c -o test_cursor_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_cursor_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_cursor_infrastructure-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_cursor_infrastructure-basic_operation_test.o: supersonic/cursor/infrastructure/basic_operation_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-basic_operation_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-basic_operation_test.Tpo -c -o test_cursor_infrastructure-basic_operation_test.o `test -f 'supersonic/cursor/infrastructure/basic_operation_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/basic_operation_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-basic_operation_test.Tpo $(DEPDIR)/test_cursor_infrastructure-basic_operation_test.Po
#	source='supersonic/cursor/infrastructure/basic_operation_test.cc' object='test_cursor_infrastructure-basic_operation_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-basic_operation_test.o `test -f 'supersonic/cursor/infrastructure/basic_operation_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/basic_operation_test.cc

test_cursor_infrastructure-basic_operation_test.obj: supersonic/cursor/infrastructure/basic_operation_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-basic_operation_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-basic_operation_test.Tpo -c -o test_cursor_infrastructure-basic_operation_test.obj `if test -f 'supersonic/cursor/infrastructure/basic_operation_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/basic_operation_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/basic_operation_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-basic_operation_test.Tpo $(DEPDIR)/test_cursor_infrastructure-basic_operation_test.Po
#	source='supersonic/cursor/infrastructure/basic_operation_test.cc' object='test_cursor_infrastructure-basic_operation_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-basic_operation_test.obj `if test -f 'supersonic/cursor/infrastructure/basic_operation_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/basic_operation_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/basic_operation_test.cc'; fi`

test_cursor_infrastructure-iterators_test.o: supersonic/cursor/infrastructure/iterators_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-iterators_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-iterators_test.Tpo -c -o test_cursor_infrastructure-iterators_test.o `test -f 'supersonic/cursor/infrastructure/iterators_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/iterators_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-iterators_test.Tpo $(DEPDIR)/test_cursor_infrastructure-iterators_test.Po
#	source='supersonic/cursor/infrastructure/iterators_test.cc' object='test_cursor_infrastructure-iterators_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-iterators_test.o `test -f 'supersonic/cursor/infrastructure/iterators_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/iterators_test.cc

test_cursor_infrastructure-iterators_test.obj: supersonic/cursor/infrastructure/iterators_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-iterators_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-iterators_test.Tpo -c -o test_cursor_infrastructure-iterators_test.obj `if test -f 'supersonic/cursor/infrastructure/iterators_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/iterators_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/iterators_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-iterators_test.Tpo $(DEPDIR)/test_cursor_infrastructure-iterators_test.Po
#	source='supersonic/cursor/infrastructure/iterators_test.cc' object='test_cursor_infrastructure-iterators_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-iterators_test.obj `if test -f 'supersonic/cursor/infrastructure/iterators_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/iterators_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/iterators_test.cc'; fi`

test_cursor_infrastructure-row_copier_test.o: supersonic/cursor/infrastructure/row_copier_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-row_copier_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-row_copier_test.Tpo -c -o test_cursor_infrastructure-row_copier_test.o `test -f 'supersonic/cursor/infrastructure/row_copier_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_copier_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-row_copier_test.Tpo $(DEPDIR)/test_cursor_infrastructure-row_copier_test.Po
#	source='supersonic/cursor/infrastructure/row_copier_test.cc' object='test_cursor_infrastructure-row_copier_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-row_copier_test.o `test -f 'supersonic/cursor/infrastructure/row_copier_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_copier_test.cc

test_cursor_infrastructure-row_copier_test.obj: supersonic/cursor/infrastructure/row_copier_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-row_copier_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-row_copier_test.Tpo -c -o test_cursor_infrastructure-row_copier_test.obj `if test -f 'supersonic/cursor/infrastructure/row_copier_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/row_copier_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/row_copier_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-row_copier_test.Tpo $(DEPDIR)/test_cursor_infrastructure-row_copier_test.Po
#	source='supersonic/cursor/infrastructure/row_copier_test.cc' object='test_cursor_infrastructure-row_copier_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-row_copier_test.obj `if test -f 'supersonic/cursor/infrastructure/row_copier_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/row_copier_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/row_copier_test.cc'; fi`

test_cursor_infrastructure-row_hash_set_test.o: supersonic/cursor/infrastructure/row_hash_set_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-row_hash_set_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-row_hash_set_test.Tpo -c -o test_cursor_infrastructure-row_hash_set_test.o `test -f 'supersonic/cursor/infrastructure/row_hash_set_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_hash_set_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-row_hash_set_test.Tpo $(DEPDIR)/test_cursor_infrastructure-row_hash_set_test.Po
#	source='supersonic/cursor/infrastructure/row_hash_set_test.cc' object='test_cursor_infrastructure-row_hash_set_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-row_hash_set_test.o `test -f 'supersonic/cursor/infrastructure/row_hash_set_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_hash_set_test.cc

test_cursor_infrastructure-row_hash_set_test.obj: supersonic/cursor/infrastructure/row_hash_set_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-row_hash_set_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-row_hash_set_test.Tpo -c -o test_cursor_infrastructure-row_hash_set_test.obj `if test -f 'supersonic/cursor/infrastructure/row_hash_set_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/row_hash_set_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/row_hash_set_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-row_hash_set_test.Tpo $(DEPDIR)/test_cursor_infrastructure-row_hash_set_test.Po
#	source='supersonic/cursor/infrastructure/row_hash_set_test.cc' object='test_cursor_infrastructure-row_hash_set_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-row_hash_set_test.obj `if test -f 'supersonic/cursor/infrastructure/row_hash_set_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/row_hash_set_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/row_hash_set_test.cc'; fi`

test_cursor_infrastructure-row_test.o: supersonic/cursor/infrastructure/row_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-row_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-row_test.Tpo -c -o test_cursor_infrastructure-row_test.o `test -f 'supersonic/cursor/infrastructure/row_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-row_test.Tpo $(DEPDIR)/test_cursor_infrastructure-row_test.Po
#	source='supersonic/cursor/infrastructure/row_test.cc' object='test_cursor_infrastructure-row_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-row_test.o `test -f 'supersonic/cursor/infrastructure/row_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/row_test.cc

test_cursor_infrastructure-row_test.obj: supersonic/cursor/infrastructure/row_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-row_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-row_test.Tpo -c -o test_cursor_infrastructure-row_test.obj `if test -f 'supersonic/cursor/infrastructure/row_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/row_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/row_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-row_test.Tpo $(DEPDIR)/test_cursor_infrastructure-row_test.Po
#	source='supersonic/cursor/infrastructure/row_test.cc' object='test_cursor_infrastructure-row_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-row_test.obj `if test -f 'supersonic/cursor/infrastructure/row_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/row_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/row_test.cc'; fi`

test_cursor_infrastructure-table_test.o: supersonic/cursor/infrastructure/table_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-table_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-table_test.Tpo -c -o test_cursor_infrastructure-table_test.o `test -f 'supersonic/cursor/infrastructure/table_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/table_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-table_test.Tpo $(DEPDIR)/test_cursor_infrastructure-table_test.Po
#	source='supersonic/cursor/infrastructure/table_test.cc' object='test_cursor_infrastructure-table_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-table_test.o `test -f 'supersonic/cursor/infrastructure/table_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/table_test.cc

test_cursor_infrastructure-table_test.obj: supersonic/cursor/infrastructure/table_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-table_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-table_test.Tpo -c -o test_cursor_infrastructure-table_test.obj `if test -f 'supersonic/cursor/infrastructure/table_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/table_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/table_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-table_test.Tpo $(DEPDIR)/test_cursor_infrastructure-table_test.Po
#	source='supersonic/cursor/infrastructure/table_test.cc' object='test_cursor_infrastructure-table_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-table_test.obj `if test -f 'supersonic/cursor/infrastructure/table_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/table_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/table_test.cc'; fi`

test_cursor_infrastructure-view_cursor_test.o: supersonic/cursor/infrastructure/view_cursor_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-view_cursor_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-view_cursor_test.Tpo -c -o test_cursor_infrastructure-view_cursor_test.o `test -f 'supersonic/cursor/infrastructure/view_cursor_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/view_cursor_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-view_cursor_test.Tpo $(DEPDIR)/test_cursor_infrastructure-view_cursor_test.Po
#	source='supersonic/cursor/infrastructure/view_cursor_test.cc' object='test_cursor_infrastructure-view_cursor_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-view_cursor_test.o `test -f 'supersonic/cursor/infrastructure/view_cursor_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/view_cursor_test.cc

test_cursor_infrastructure-view_cursor_test.obj: supersonic/cursor/infrastructure/view_cursor_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-view_cursor_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-view_cursor_test.Tpo -c -o test_cursor_infrastructure-view_cursor_test.obj `if test -f 'supersonic/cursor/infrastructure/view_cursor_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/view_cursor_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/view_cursor_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-view_cursor_test.Tpo $(DEPDIR)/test_cursor_infrastructure-view_cursor_test.Po
#	source='supersonic/cursor/infrastructure/view_cursor_test.cc' object='test_cursor_infrastructure-view_cursor_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-view_cursor_test.obj `if test -f 'supersonic/cursor/infrastructure/view_cursor_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/view_cursor_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/view_cursor_test.cc'; fi`

test_cursor_infrastructure-writer_test.o: supersonic/cursor/infrastructure/writer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-writer_test.o -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-writer_test.Tpo -c -o test_cursor_infrastructure-writer_test.o `test -f 'supersonic/cursor/infrastructure/writer_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/writer_test.cc
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-writer_test.Tpo $(DEPDIR)/test_cursor_infrastructure-writer_test.Po
#	source='supersonic/cursor/infrastructure/writer_test.cc' object='test_cursor_infrastructure-writer_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-writer_test.o `test -f 'supersonic/cursor/infrastructure/writer_test.cc' || echo '$(srcdir)/'`supersonic/cursor/infrastructure/writer_test.cc

test_cursor_infrastructure-writer_test.obj: supersonic/cursor/infrastructure/writer_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_cursor_infrastructure-writer_test.obj -MD -MP -MF $(DEPDIR)/test_cursor_infrastructure-writer_test.Tpo -c -o test_cursor_infrastructure-writer_test.obj `if test -f 'supersonic/cursor/infrastructure/writer_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/writer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/writer_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_cursor_infrastructure-writer_test.Tpo $(DEPDIR)/test_cursor_infrastructure-writer_test.Po
#	source='supersonic/cursor/infrastructure/writer_test.cc' object='test_cursor_infrastructure-writer_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_cursor_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_cursor_infrastructure-writer_test.obj `if test -f 'supersonic/cursor/infrastructure/writer_test.cc'; then $(CYGPATH_W) 'supersonic/cursor/infrastructure/writer_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/cursor/infrastructure/writer_test.cc'; fi`

test_expression_core-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-gtest-all.o -MD -MP -MF $(DEPDIR)/test_expression_core-gtest-all.Tpo -c -o test_expression_core-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_expression_core-gtest-all.Tpo $(DEPDIR)/test_expression_core-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_core-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_expression_core-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_expression_core-gtest-all.Tpo -c -o test_expression_core-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-gtest-all.Tpo $(DEPDIR)/test_expression_core-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_core-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_expression_core-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-gmock-all.o -MD -MP -MF $(DEPDIR)/test_expression_core-gmock-all.Tpo -c -o test_expression_core-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_expression_core-gmock-all.Tpo $(DEPDIR)/test_expression_core-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_core-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_expression_core-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_expression_core-gmock-all.Tpo -c -o test_expression_core-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-gmock-all.Tpo $(DEPDIR)/test_expression_core-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_core-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_expression_core-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_expression_core-supersonic_test_main.Tpo -c -o test_expression_core-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_expression_core-supersonic_test_main.Tpo $(DEPDIR)/test_expression_core-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_core-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_expression_core-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_expression_core-supersonic_test_main.Tpo -c -o test_expression_core-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-supersonic_test_main.Tpo $(DEPDIR)/test_expression_core-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_core-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_expression_core-arithmetic_bound_expressions_test.o: supersonic/expression/core/arithmetic_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-arithmetic_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-arithmetic_bound_expressions_test.Tpo -c -o test_expression_core-arithmetic_bound_expressions_test.o `test -f 'supersonic/expression/core/arithmetic_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-arithmetic_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-arithmetic_bound_expressions_test.Po
#	source='supersonic/expression/core/arithmetic_bound_expressions_test.cc' object='test_expression_core-arithmetic_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-arithmetic_bound_expressions_test.o `test -f 'supersonic/expression/core/arithmetic_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_bound_expressions_test.cc

test_expression_core-arithmetic_bound_expressions_test.obj: supersonic/expression/core/arithmetic_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-arithmetic_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-arithmetic_bound_expressions_test.Tpo -c -o test_expression_core-arithmetic_bound_expressions_test.obj `if test -f 'supersonic/expression/core/arithmetic_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/arithmetic_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/arithmetic_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-arithmetic_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-arithmetic_bound_expressions_test.Po
#	source='supersonic/expression/core/arithmetic_bound_expressions_test.cc' object='test_expression_core-arithmetic_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-arithmetic_bound_expressions_test.obj `if test -f 'supersonic/expression/core/arithmetic_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/arithmetic_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/arithmetic_bound_expressions_test.cc'; fi`

test_expression_core-arithmetic_expressions_test.o: supersonic/expression/core/arithmetic_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-arithmetic_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-arithmetic_expressions_test.Tpo -c -o test_expression_core-arithmetic_expressions_test.o `test -f 'supersonic/expression/core/arithmetic_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-arithmetic_expressions_test.Tpo $(DEPDIR)/test_expression_core-arithmetic_expressions_test.Po
#	source='supersonic/expression/core/arithmetic_expressions_test.cc' object='test_expression_core-arithmetic_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-arithmetic_expressions_test.o `test -f 'supersonic/expression/core/arithmetic_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/arithmetic_expressions_test.cc

test_expression_core-arithmetic_expressions_test.obj: supersonic/expression/core/arithmetic_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-arithmetic_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-arithmetic_expressions_test.Tpo -c -o test_expression_core-arithmetic_expressions_test.obj `if test -f 'supersonic/expression/core/arithmetic_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/arithmetic_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/arithmetic_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-arithmetic_expressions_test.Tpo $(DEPDIR)/test_expression_core-arithmetic_expressions_test.Po
#	source='supersonic/expression/core/arithmetic_expressions_test.cc' object='test_expression_core-arithmetic_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-arithmetic_expressions_test.obj `if test -f 'supersonic/expression/core/arithmetic_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/arithmetic_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/arithmetic_expressions_test.cc'; fi`

test_expression_core-case_expression_test.o: supersonic/expression/core/case_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-case_expression_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-case_expression_test.Tpo -c -o test_expression_core-case_expression_test.o `test -f 'supersonic/expression/core/case_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/case_expression_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-case_expression_test.Tpo $(DEPDIR)/test_expression_core-case_expression_test.Po
#	source='supersonic/expression/core/case_expression_test.cc' object='test_expression_core-case_expression_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-case_expression_test.o `test -f 'supersonic/expression/core/case_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/case_expression_test.cc

test_expression_core-case_expression_test.obj: supersonic/expression/core/case_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-case_expression_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-case_expression_test.Tpo -c -o test_expression_core-case_expression_test.obj `if test -f 'supersonic/expression/core/case_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/case_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/case_expression_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-case_expression_test.Tpo $(DEPDIR)/test_expression_core-case_expression_test.Po
#	source='supersonic/expression/core/case_expression_test.cc' object='test_expression_core-case_expression_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-case_expression_test.obj `if test -f 'supersonic/expression/core/case_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/case_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/case_expression_test.cc'; fi`

test_expression_core-comparison_bound_expressions_test.o: supersonic/expression/core/comparison_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-comparison_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-comparison_bound_expressions_test.Tpo -c -o test_expression_core-comparison_bound_expressions_test.o `test -f 'supersonic/expression/core/comparison_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/comparison_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-comparison_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-comparison_bound_expressions_test.Po
#	source='supersonic/expression/core/comparison_bound_expressions_test.cc' object='test_expression_core-comparison_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-comparison_bound_expressions_test.o `test -f 'supersonic/expression/core/comparison_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/comparison_bound_expressions_test.cc

test_expression_core-comparison_bound_expressions_test.obj: supersonic/expression/core/comparison_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-comparison_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-comparison_bound_expressions_test.Tpo -c -o test_expression_core-comparison_bound_expressions_test.obj `if test -f 'supersonic/expression/core/comparison_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/comparison_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/comparison_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-comparison_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-comparison_bound_expressions_test.Po
#	source='supersonic/expression/core/comparison_bound_expressions_test.cc' object='test_expression_core-comparison_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-comparison_bound_expressions_test.obj `if test -f 'supersonic/expression/core/comparison_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/comparison_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/comparison_bound_expressions_test.cc'; fi`

test_expression_core-date_bound_expressions_test.o: supersonic/expression/core/date_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-date_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-date_bound_expressions_test.Tpo -c -o test_expression_core-date_bound_expressions_test.o `test -f 'supersonic/expression/core/date_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-date_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-date_bound_expressions_test.Po
#	source='supersonic/expression/core/date_bound_expressions_test.cc' object='test_expression_core-date_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-date_bound_expressions_test.o `test -f 'supersonic/expression/core/date_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_bound_expressions_test.cc

test_expression_core-date_bound_expressions_test.obj: supersonic/expression/core/date_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-date_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-date_bound_expressions_test.Tpo -c -o test_expression_core-date_bound_expressions_test.obj `if test -f 'supersonic/expression/core/date_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/date_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/date_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-date_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-date_bound_expressions_test.Po
#	source='supersonic/expression/core/date_bound_expressions_test.cc' object='test_expression_core-date_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-date_bound_expressions_test.obj `if test -f 'supersonic/expression/core/date_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/date_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/date_bound_expressions_test.cc'; fi`

test_expression_core-date_expressions_test.o: supersonic/expression/core/date_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-date_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-date_expressions_test.Tpo -c -o test_expression_core-date_expressions_test.o `test -f 'supersonic/expression/core/date_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-date_expressions_test.Tpo $(DEPDIR)/test_expression_core-date_expressions_test.Po
#	source='supersonic/expression/core/date_expressions_test.cc' object='test_expression_core-date_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-date_expressions_test.o `test -f 'supersonic/expression/core/date_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/date_expressions_test.cc

test_expression_core-date_expressions_test.obj: supersonic/expression/core/date_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-date_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-date_expressions_test.Tpo -c -o test_expression_core-date_expressions_test.obj `if test -f 'supersonic/expression/core/date_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/date_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/date_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-date_expressions_test.Tpo $(DEPDIR)/test_expression_core-date_expressions_test.Po
#	source='supersonic/expression/core/date_expressions_test.cc' object='test_expression_core-date_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-date_expressions_test.obj `if test -f 'supersonic/expression/core/date_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/date_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/date_expressions_test.cc'; fi`

test_expression_core-elementary_bound_expressions_test.o: supersonic/expression/core/elementary_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-elementary_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-elementary_bound_expressions_test.Tpo -c -o test_expression_core-elementary_bound_expressions_test.o `test -f 'supersonic/expression/core/elementary_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-elementary_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-elementary_bound_expressions_test.Po
#	source='supersonic/expression/core/elementary_bound_expressions_test.cc' object='test_expression_core-elementary_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-elementary_bound_expressions_test.o `test -f 'supersonic/expression/core/elementary_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_bound_expressions_test.cc

test_expression_core-elementary_bound_expressions_test.obj: supersonic/expression/core/elementary_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-elementary_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-elementary_bound_expressions_test.Tpo -c -o test_expression_core-elementary_bound_expressions_test.obj `if test -f 'supersonic/expression/core/elementary_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/elementary_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/elementary_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-elementary_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-elementary_bound_expressions_test.Po
#	source='supersonic/expression/core/elementary_bound_expressions_test.cc' object='test_expression_core-elementary_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-elementary_bound_expressions_test.obj `if test -f 'supersonic/expression/core/elementary_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/elementary_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/elementary_bound_expressions_test.cc'; fi`

test_expression_core-elementary_expressions_test.o: supersonic/expression/core/elementary_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-elementary_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-elementary_expressions_test.Tpo -c -o test_expression_core-elementary_expressions_test.o `test -f 'supersonic/expression/core/elementary_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-elementary_expressions_test.Tpo $(DEPDIR)/test_expression_core-elementary_expressions_test.Po
#	source='supersonic/expression/core/elementary_expressions_test.cc' object='test_expression_core-elementary_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-elementary_expressions_test.o `test -f 'supersonic/expression/core/elementary_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/elementary_expressions_test.cc

test_expression_core-elementary_expressions_test.obj: supersonic/expression/core/elementary_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-elementary_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-elementary_expressions_test.Tpo -c -o test_expression_core-elementary_expressions_test.obj `if test -f 'supersonic/expression/core/elementary_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/elementary_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/elementary_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-elementary_expressions_test.Tpo $(DEPDIR)/test_expression_core-elementary_expressions_test.Po
#	source='supersonic/expression/core/elementary_expressions_test.cc' object='test_expression_core-elementary_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-elementary_expressions_test.obj `if test -f 'supersonic/expression/core/elementary_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/elementary_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/elementary_expressions_test.cc'; fi`

test_expression_core-math_bound_expressions_test.o: supersonic/expression/core/math_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-math_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-math_bound_expressions_test.Tpo -c -o test_expression_core-math_bound_expressions_test.o `test -f 'supersonic/expression/core/math_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-math_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-math_bound_expressions_test.Po
#	source='supersonic/expression/core/math_bound_expressions_test.cc' object='test_expression_core-math_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-math_bound_expressions_test.o `test -f 'supersonic/expression/core/math_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_bound_expressions_test.cc

test_expression_core-math_bound_expressions_test.obj: supersonic/expression/core/math_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-math_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-math_bound_expressions_test.Tpo -c -o test_expression_core-math_bound_expressions_test.obj `if test -f 'supersonic/expression/core/math_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/math_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/math_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-math_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-math_bound_expressions_test.Po
#	source='supersonic/expression/core/math_bound_expressions_test.cc' object='test_expression_core-math_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-math_bound_expressions_test.obj `if test -f 'supersonic/expression/core/math_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/math_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/math_bound_expressions_test.cc'; fi`

test_expression_core-math_expressions_test.o: supersonic/expression/core/math_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-math_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-math_expressions_test.Tpo -c -o test_expression_core-math_expressions_test.o `test -f 'supersonic/expression/core/math_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-math_expressions_test.Tpo $(DEPDIR)/test_expression_core-math_expressions_test.Po
#	source='supersonic/expression/core/math_expressions_test.cc' object='test_expression_core-math_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-math_expressions_test.o `test -f 'supersonic/expression/core/math_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/math_expressions_test.cc

test_expression_core-math_expressions_test.obj: supersonic/expression/core/math_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-math_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-math_expressions_test.Tpo -c -o test_expression_core-math_expressions_test.obj `if test -f 'supersonic/expression/core/math_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/math_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/math_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-math_expressions_test.Tpo $(DEPDIR)/test_expression_core-math_expressions_test.Po
#	source='supersonic/expression/core/math_expressions_test.cc' object='test_expression_core-math_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-math_expressions_test.obj `if test -f 'supersonic/expression/core/math_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/math_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/math_expressions_test.cc'; fi`

test_expression_core-projecting_bound_expressions_test.o: supersonic/expression/core/projecting_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-projecting_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-projecting_bound_expressions_test.Tpo -c -o test_expression_core-projecting_bound_expressions_test.o `test -f 'supersonic/expression/core/projecting_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-projecting_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-projecting_bound_expressions_test.Po
#	source='supersonic/expression/core/projecting_bound_expressions_test.cc' object='test_expression_core-projecting_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-projecting_bound_expressions_test.o `test -f 'supersonic/expression/core/projecting_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_bound_expressions_test.cc

test_expression_core-projecting_bound_expressions_test.obj: supersonic/expression/core/projecting_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-projecting_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-projecting_bound_expressions_test.Tpo -c -o test_expression_core-projecting_bound_expressions_test.obj `if test -f 'supersonic/expression/core/projecting_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/projecting_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/projecting_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-projecting_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-projecting_bound_expressions_test.Po
#	source='supersonic/expression/core/projecting_bound_expressions_test.cc' object='test_expression_core-projecting_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-projecting_bound_expressions_test.obj `if test -f 'supersonic/expression/core/projecting_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/projecting_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/projecting_bound_expressions_test.cc'; fi`

test_expression_core-projecting_expressions_test.o: supersonic/expression/core/projecting_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-projecting_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-projecting_expressions_test.Tpo -c -o test_expression_core-projecting_expressions_test.o `test -f 'supersonic/expression/core/projecting_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-projecting_expressions_test.Tpo $(DEPDIR)/test_expression_core-projecting_expressions_test.Po
#	source='supersonic/expression/core/projecting_expressions_test.cc' object='test_expression_core-projecting_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-projecting_expressions_test.o `test -f 'supersonic/expression/core/projecting_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/projecting_expressions_test.cc

test_expression_core-projecting_expressions_test.obj: supersonic/expression/core/projecting_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-projecting_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-projecting_expressions_test.Tpo -c -o test_expression_core-projecting_expressions_test.obj `if test -f 'supersonic/expression/core/projecting_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/projecting_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/projecting_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-projecting_expressions_test.Tpo $(DEPDIR)/test_expression_core-projecting_expressions_test.Po
#	source='supersonic/expression/core/projecting_expressions_test.cc' object='test_expression_core-projecting_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-projecting_expressions_test.obj `if test -f 'supersonic/expression/core/projecting_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/projecting_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/projecting_expressions_test.cc'; fi`

test_expression_core-stateful_bound_expressions_test.o: supersonic/expression/core/stateful_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-stateful_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-stateful_bound_expressions_test.Tpo -c -o test_expression_core-stateful_bound_expressions_test.o `test -f 'supersonic/expression/core/stateful_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-stateful_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-stateful_bound_expressions_test.Po
#	source='supersonic/expression/core/stateful_bound_expressions_test.cc' object='test_expression_core-stateful_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-stateful_bound_expressions_test.o `test -f 'supersonic/expression/core/stateful_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_bound_expressions_test.cc

test_expression_core-stateful_bound_expressions_test.obj: supersonic/expression/core/stateful_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-stateful_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-stateful_bound_expressions_test.Tpo -c -o test_expression_core-stateful_bound_expressions_test.obj `if test -f 'supersonic/expression/core/stateful_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/stateful_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/stateful_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-stateful_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-stateful_bound_expressions_test.Po
#	source='supersonic/expression/core/stateful_bound_expressions_test.cc' object='test_expression_core-stateful_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-stateful_bound_expressions_test.obj `if test -f 'supersonic/expression/core/stateful_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/stateful_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/stateful_bound_expressions_test.cc'; fi`

test_expression_core-stateful_expressions_test.o: supersonic/expression/core/stateful_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-stateful_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-stateful_expressions_test.Tpo -c -o test_expression_core-stateful_expressions_test.o `test -f 'supersonic/expression/core/stateful_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-stateful_expressions_test.Tpo $(DEPDIR)/test_expression_core-stateful_expressions_test.Po
#	source='supersonic/expression/core/stateful_expressions_test.cc' object='test_expression_core-stateful_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-stateful_expressions_test.o `test -f 'supersonic/expression/core/stateful_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/stateful_expressions_test.cc

test_expression_core-stateful_expressions_test.obj: supersonic/expression/core/stateful_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-stateful_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-stateful_expressions_test.Tpo -c -o test_expression_core-stateful_expressions_test.obj `if test -f 'supersonic/expression/core/stateful_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/stateful_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/stateful_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-stateful_expressions_test.Tpo $(DEPDIR)/test_expression_core-stateful_expressions_test.Po
#	source='supersonic/expression/core/stateful_expressions_test.cc' object='test_expression_core-stateful_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-stateful_expressions_test.obj `if test -f 'supersonic/expression/core/stateful_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/stateful_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/stateful_expressions_test.cc'; fi`

test_expression_core-string_bound_expressions_test.o: supersonic/expression/core/string_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-string_bound_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-string_bound_expressions_test.Tpo -c -o test_expression_core-string_bound_expressions_test.o `test -f 'supersonic/expression/core/string_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_bound_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-string_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-string_bound_expressions_test.Po
#	source='supersonic/expression/core/string_bound_expressions_test.cc' object='test_expression_core-string_bound_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-string_bound_expressions_test.o `test -f 'supersonic/expression/core/string_bound_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_bound_expressions_test.cc

test_expression_core-string_bound_expressions_test.obj: supersonic/expression/core/string_bound_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-string_bound_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-string_bound_expressions_test.Tpo -c -o test_expression_core-string_bound_expressions_test.obj `if test -f 'supersonic/expression/core/string_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/string_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/string_bound_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-string_bound_expressions_test.Tpo $(DEPDIR)/test_expression_core-string_bound_expressions_test.Po
#	source='supersonic/expression/core/string_bound_expressions_test.cc' object='test_expression_core-string_bound_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-string_bound_expressions_test.obj `if test -f 'supersonic/expression/core/string_bound_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/string_bound_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/string_bound_expressions_test.cc'; fi`

test_expression_core-string_expressions_test.o: supersonic/expression/core/string_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-string_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_core-string_expressions_test.Tpo -c -o test_expression_core-string_expressions_test.o `test -f 'supersonic/expression/core/string_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_core-string_expressions_test.Tpo $(DEPDIR)/test_expression_core-string_expressions_test.Po
#	source='supersonic/expression/core/string_expressions_test.cc' object='test_expression_core-string_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-string_expressions_test.o `test -f 'supersonic/expression/core/string_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/core/string_expressions_test.cc

test_expression_core-string_expressions_test.obj: supersonic/expression/core/string_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_core-string_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_core-string_expressions_test.Tpo -c -o test_expression_core-string_expressions_test.obj `if test -f 'supersonic/expression/core/string_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/string_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/string_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_core-string_expressions_test.Tpo $(DEPDIR)/test_expression_core-string_expressions_test.Po
#	source='supersonic/expression/core/string_expressions_test.cc' object='test_expression_core-string_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_core_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_core-string_expressions_test.obj `if test -f 'supersonic/expression/core/string_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/core/string_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/core/string_expressions_test.cc'; fi`

test_expression_infrastructure-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-gtest-all.o -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-gtest-all.Tpo -c -o test_expression_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-gtest-all.Tpo $(DEPDIR)/test_expression_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_infrastructure-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_expression_infrastructure-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-gtest-all.Tpo -c -o test_expression_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-gtest-all.Tpo $(DEPDIR)/test_expression_infrastructure-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_infrastructure-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_expression_infrastructure-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-gmock-all.o -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-gmock-all.Tpo -c -o test_expression_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-gmock-all.Tpo $(DEPDIR)/test_expression_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_infrastructure-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_expression_infrastructure-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-gmock-all.Tpo -c -o test_expression_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-gmock-all.Tpo $(DEPDIR)/test_expression_infrastructure-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_infrastructure-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_expression_infrastructure-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-supersonic_test_main.Tpo -c -o test_expression_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_expression_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_infrastructure-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_expression_infrastructure-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-supersonic_test_main.Tpo -c -o test_expression_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-supersonic_test_main.Tpo $(DEPDIR)/test_expression_infrastructure-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_infrastructure-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_expression_infrastructure-basic_bound_expression_test.o: supersonic/expression/infrastructure/basic_bound_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-basic_bound_expression_test.o -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-basic_bound_expression_test.Tpo -c -o test_expression_infrastructure-basic_bound_expression_test.o `test -f 'supersonic/expression/infrastructure/basic_bound_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/basic_bound_expression_test.cc
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-basic_bound_expression_test.Tpo $(DEPDIR)/test_expression_infrastructure-basic_bound_expression_test.Po
#	source='supersonic/expression/infrastructure/basic_bound_expression_test.cc' object='test_expression_infrastructure-basic_bound_expression_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-basic_bound_expression_test.o `test -f 'supersonic/expression/infrastructure/basic_bound_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/basic_bound_expression_test.cc

test_expression_infrastructure-basic_bound_expression_test.obj: supersonic/expression/infrastructure/basic_bound_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-basic_bound_expression_test.obj -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-basic_bound_expression_test.Tpo -c -o test_expression_infrastructure-basic_bound_expression_test.obj `if test -f 'supersonic/expression/infrastructure/basic_bound_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/infrastructure/basic_bound_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/infrastructure/basic_bound_expression_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-basic_bound_expression_test.Tpo $(DEPDIR)/test_expression_infrastructure-basic_bound_expression_test.Po
#	source='supersonic/expression/infrastructure/basic_bound_expression_test.cc' object='test_expression_infrastructure-basic_bound_expression_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-basic_bound_expression_test.obj `if test -f 'supersonic/expression/infrastructure/basic_bound_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/infrastructure/basic_bound_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/infrastructure/basic_bound_expression_test.cc'; fi`

test_expression_infrastructure-expression_utils_test.o: supersonic/expression/infrastructure/expression_utils_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-expression_utils_test.o -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-expression_utils_test.Tpo -c -o test_expression_infrastructure-expression_utils_test.o `test -f 'supersonic/expression/infrastructure/expression_utils_test.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/expression_utils_test.cc
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-expression_utils_test.Tpo $(DEPDIR)/test_expression_infrastructure-expression_utils_test.Po
#	source='supersonic/expression/infrastructure/expression_utils_test.cc' object='test_expression_infrastructure-expression_utils_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-expression_utils_test.o `test -f 'supersonic/expression/infrastructure/expression_utils_test.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/expression_utils_test.cc

test_expression_infrastructure-expression_utils_test.obj: supersonic/expression/infrastructure/expression_utils_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-expression_utils_test.obj -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-expression_utils_test.Tpo -c -o test_expression_infrastructure-expression_utils_test.obj `if test -f 'supersonic/expression/infrastructure/expression_utils_test.cc'; then $(CYGPATH_W) 'supersonic/expression/infrastructure/expression_utils_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/infrastructure/expression_utils_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-expression_utils_test.Tpo $(DEPDIR)/test_expression_infrastructure-expression_utils_test.Po
#	source='supersonic/expression/infrastructure/expression_utils_test.cc' object='test_expression_infrastructure-expression_utils_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-expression_utils_test.obj `if test -f 'supersonic/expression/infrastructure/expression_utils_test.cc'; then $(CYGPATH_W) 'supersonic/expression/infrastructure/expression_utils_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/infrastructure/expression_utils_test.cc'; fi`

test_expression_infrastructure-terminal_expressions_test.o: supersonic/expression/infrastructure/terminal_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-terminal_expressions_test.o -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-terminal_expressions_test.Tpo -c -o test_expression_infrastructure-terminal_expressions_test.o `test -f 'supersonic/expression/infrastructure/terminal_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/terminal_expressions_test.cc
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-terminal_expressions_test.Tpo $(DEPDIR)/test_expression_infrastructure-terminal_expressions_test.Po
#	source='supersonic/expression/infrastructure/terminal_expressions_test.cc' object='test_expression_infrastructure-terminal_expressions_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-terminal_expressions_test.o `test -f 'supersonic/expression/infrastructure/terminal_expressions_test.cc' || echo '$(srcdir)/'`supersonic/expression/infrastructure/terminal_expressions_test.cc

test_expression_infrastructure-terminal_expressions_test.obj: supersonic/expression/infrastructure/terminal_expressions_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_infrastructure-terminal_expressions_test.obj -MD -MP -MF $(DEPDIR)/test_expression_infrastructure-terminal_expressions_test.Tpo -c -o test_expression_infrastructure-terminal_expressions_test.obj `if test -f 'supersonic/expression/infrastructure/terminal_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/infrastructure/terminal_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/infrastructure/terminal_expressions_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_infrastructure-terminal_expressions_test.Tpo $(DEPDIR)/test_expression_infrastructure-terminal_expressions_test.Po
#	source='supersonic/expression/infrastructure/terminal_expressions_test.cc' object='test_expression_infrastructure-terminal_expressions_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_infrastructure_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_infrastructure-terminal_expressions_test.obj `if test -f 'supersonic/expression/infrastructure/terminal_expressions_test.cc'; then $(CYGPATH_W) 'supersonic/expression/infrastructure/terminal_expressions_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/infrastructure/terminal_expressions_test.cc'; fi`

test_expression_templated-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-gtest-all.o -MD -MP -MF $(DEPDIR)/test_expression_templated-gtest-all.Tpo -c -o test_expression_templated-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_expression_templated-gtest-all.Tpo $(DEPDIR)/test_expression_templated-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_templated-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_expression_templated-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_expression_templated-gtest-all.Tpo -c -o test_expression_templated-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_templated-gtest-all.Tpo $(DEPDIR)/test_expression_templated-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_templated-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_expression_templated-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-gmock-all.o -MD -MP -MF $(DEPDIR)/test_expression_templated-gmock-all.Tpo -c -o test_expression_templated-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_expression_templated-gmock-all.Tpo $(DEPDIR)/test_expression_templated-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_templated-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_expression_templated-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_expression_templated-gmock-all.Tpo -c -o test_expression_templated-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_templated-gmock-all.Tpo $(DEPDIR)/test_expression_templated-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_templated-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_expression_templated-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_expression_templated-supersonic_test_main.Tpo -c -o test_expression_templated-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_expression_templated-supersonic_test_main.Tpo $(DEPDIR)/test_expression_templated-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_templated-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_expression_templated-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_expression_templated-supersonic_test_main.Tpo -c -o test_expression_templated-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_templated-supersonic_test_main.Tpo $(DEPDIR)/test_expression_templated-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_templated-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_expression_templated-cast_bound_expression_test.o: supersonic/expression/templated/cast_bound_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-cast_bound_expression_test.o -MD -MP -MF $(DEPDIR)/test_expression_templated-cast_bound_expression_test.Tpo -c -o test_expression_templated-cast_bound_expression_test.o `test -f 'supersonic/expression/templated/cast_bound_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_bound_expression_test.cc
	$(am__mv) $(DEPDIR)/test_expression_templated-cast_bound_expression_test.Tpo $(DEPDIR)/test_expression_templated-cast_bound_expression_test.Po
#	source='supersonic/expression/templated/cast_bound_expression_test.cc' object='test_expression_templated-cast_bound_expression_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-cast_bound_expression_test.o `test -f 'supersonic/expression/templated/cast_bound_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_bound_expression_test.cc

test_expression_templated-cast_bound_expression_test.obj: supersonic/expression/templated/cast_bound_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-cast_bound_expression_test.obj -MD -MP -MF $(DEPDIR)/test_expression_templated-cast_bound_expression_test.Tpo -c -o test_expression_templated-cast_bound_expression_test.obj `if test -f 'supersonic/expression/templated/cast_bound_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/templated/cast_bound_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/templated/cast_bound_expression_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_templated-cast_bound_expression_test.Tpo $(DEPDIR)/test_expression_templated-cast_bound_expression_test.Po
#	source='supersonic/expression/templated/cast_bound_expression_test.cc' object='test_expression_templated-cast_bound_expression_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-cast_bound_expression_test.obj `if test -f 'supersonic/expression/templated/cast_bound_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/templated/cast_bound_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/templated/cast_bound_expression_test.cc'; fi`

test_expression_templated-cast_expression_test.o: supersonic/expression/templated/cast_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-cast_expression_test.o -MD -MP -MF $(DEPDIR)/test_expression_templated-cast_expression_test.Tpo -c -o test_expression_templated-cast_expression_test.o `test -f 'supersonic/expression/templated/cast_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_expression_test.cc
	$(am__mv) $(DEPDIR)/test_expression_templated-cast_expression_test.Tpo $(DEPDIR)/test_expression_templated-cast_expression_test.Po
#	source='supersonic/expression/templated/cast_expression_test.cc' object='test_expression_templated-cast_expression_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-cast_expression_test.o `test -f 'supersonic/expression/templated/cast_expression_test.cc' || echo '$(srcdir)/'`supersonic/expression/templated/cast_expression_test.cc

test_expression_templated-cast_expression_test.obj: supersonic/expression/templated/cast_expression_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_templated-cast_expression_test.obj -MD -MP -MF $(DEPDIR)/test_expression_templated-cast_expression_test.Tpo -c -o test_expression_templated-cast_expression_test.obj `if test -f 'supersonic/expression/templated/cast_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/templated/cast_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/templated/cast_expression_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_templated-cast_expression_test.Tpo $(DEPDIR)/test_expression_templated-cast_expression_test.Po
#	source='supersonic/expression/templated/cast_expression_test.cc' object='test_expression_templated-cast_expression_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_templated_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_templated-cast_expression_test.obj `if test -f 'supersonic/expression/templated/cast_expression_test.cc'; then $(CYGPATH_W) 'supersonic/expression/templated/cast_expression_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/templated/cast_expression_test.cc'; fi`

test_expression_vector-gtest-all.o: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-gtest-all.o -MD -MP -MF $(DEPDIR)/test_expression_vector-gtest-all.Tpo -c -o test_expression_vector-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-gtest-all.Tpo $(DEPDIR)/test_expression_vector-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_vector-gtest-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-gtest-all.o `test -f 'gmock/gtest/src/gtest-all.cc' || echo '$(srcdir)/'`gmock/gtest/src/gtest-all.cc

test_expression_vector-gtest-all.obj: gmock/gtest/src/gtest-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-gtest-all.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-gtest-all.Tpo -c -o test_expression_vector-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-gtest-all.Tpo $(DEPDIR)/test_expression_vector-gtest-all.Po
#	source='gmock/gtest/src/gtest-all.cc' object='test_expression_vector-gtest-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-gtest-all.obj `if test -f 'gmock/gtest/src/gtest-all.cc'; then $(CYGPATH_W) 'gmock/gtest/src/gtest-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/gtest/src/gtest-all.cc'; fi`

test_expression_vector-gmock-all.o: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-gmock-all.o -MD -MP -MF $(DEPDIR)/test_expression_vector-gmock-all.Tpo -c -o test_expression_vector-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-gmock-all.Tpo $(DEPDIR)/test_expression_vector-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_vector-gmock-all.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-gmock-all.o `test -f 'gmock/src/gmock-all.cc' || echo '$(srcdir)/'`gmock/src/gmock-all.cc

test_expression_vector-gmock-all.obj: gmock/src/gmock-all.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-gmock-all.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-gmock-all.Tpo -c -o test_expression_vector-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-gmock-all.Tpo $(DEPDIR)/test_expression_vector-gmock-all.Po
#	source='gmock/src/gmock-all.cc' object='test_expression_vector-gmock-all.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-gmock-all.obj `if test -f 'gmock/src/gmock-all.cc'; then $(CYGPATH_W) 'gmock/src/gmock-all.cc'; else $(CYGPATH_W) '$(srcdir)/gmock/src/gmock-all.cc'; fi`

test_expression_vector-supersonic_test_main.o: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-supersonic_test_main.o -MD -MP -MF $(DEPDIR)/test_expression_vector-supersonic_test_main.Tpo -c -o test_expression_vector-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-supersonic_test_main.Tpo $(DEPDIR)/test_expression_vector-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_vector-supersonic_test_main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-supersonic_test_main.o `test -f 'test_utils/supersonic_test_main.cc' || echo '$(srcdir)/'`test_utils/supersonic_test_main.cc

test_expression_vector-supersonic_test_main.obj: test_utils/supersonic_test_main.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-supersonic_test_main.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-supersonic_test_main.Tpo -c -o test_expression_vector-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-supersonic_test_main.Tpo $(DEPDIR)/test_expression_vector-supersonic_test_main.Po
#	source='test_utils/supersonic_test_main.cc' object='test_expression_vector-supersonic_test_main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-supersonic_test_main.obj `if test -f 'test_utils/supersonic_test_main.cc'; then $(CYGPATH_W) 'test_utils/supersonic_test_main.cc'; else $(CYGPATH_W) '$(srcdir)/test_utils/supersonic_test_main.cc'; fi`

test_expression_vector-binary_column_computers_test.o: supersonic/expression/vector/binary_column_computers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-binary_column_computers_test.o -MD -MP -MF $(DEPDIR)/test_expression_vector-binary_column_computers_test.Tpo -c -o test_expression_vector-binary_column_computers_test.o `test -f 'supersonic/expression/vector/binary_column_computers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/binary_column_computers_test.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-binary_column_computers_test.Tpo $(DEPDIR)/test_expression_vector-binary_column_computers_test.Po
#	source='supersonic/expression/vector/binary_column_computers_test.cc' object='test_expression_vector-binary_column_computers_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-binary_column_computers_test.o `test -f 'supersonic/expression/vector/binary_column_computers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/binary_column_computers_test.cc

test_expression_vector-binary_column_computers_test.obj: supersonic/expression/vector/binary_column_computers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-binary_column_computers_test.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-binary_column_computers_test.Tpo -c -o test_expression_vector-binary_column_computers_test.obj `if test -f 'supersonic/expression/vector/binary_column_computers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/binary_column_computers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/binary_column_computers_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-binary_column_computers_test.Tpo $(DEPDIR)/test_expression_vector-binary_column_computers_test.Po
#	source='supersonic/expression/vector/binary_column_computers_test.cc' object='test_expression_vector-binary_column_computers_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-binary_column_computers_test.obj `if test -f 'supersonic/expression/vector/binary_column_computers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/binary_column_computers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/binary_column_computers_test.cc'; fi`

test_expression_vector-column_validity_checkers_test.o: supersonic/expression/vector/column_validity_checkers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-column_validity_checkers_test.o -MD -MP -MF $(DEPDIR)/test_expression_vector-column_validity_checkers_test.Tpo -c -o test_expression_vector-column_validity_checkers_test.o `test -f 'supersonic/expression/vector/column_validity_checkers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/column_validity_checkers_test.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-column_validity_checkers_test.Tpo $(DEPDIR)/test_expression_vector-column_validity_checkers_test.Po
#	source='supersonic/expression/vector/column_validity_checkers_test.cc' object='test_expression_vector-column_validity_checkers_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-column_validity_checkers_test.o `test -f 'supersonic/expression/vector/column_validity_checkers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/column_validity_checkers_test.cc

test_expression_vector-column_validity_checkers_test.obj: supersonic/expression/vector/column_validity_checkers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-column_validity_checkers_test.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-column_validity_checkers_test.Tpo -c -o test_expression_vector-column_validity_checkers_test.obj `if test -f 'supersonic/expression/vector/column_validity_checkers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/column_validity_checkers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/column_validity_checkers_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-column_validity_checkers_test.Tpo $(DEPDIR)/test_expression_vector-column_validity_checkers_test.Po
#	source='supersonic/expression/vector/column_validity_checkers_test.cc' object='test_expression_vector-column_validity_checkers_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-column_validity_checkers_test.obj `if test -f 'supersonic/expression/vector/column_validity_checkers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/column_validity_checkers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/column_validity_checkers_test.cc'; fi`

test_expression_vector-ternary_column_computers_test.o: supersonic/expression/vector/ternary_column_computers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-ternary_column_computers_test.o -MD -MP -MF $(DEPDIR)/test_expression_vector-ternary_column_computers_test.Tpo -c -o test_expression_vector-ternary_column_computers_test.o `test -f 'supersonic/expression/vector/ternary_column_computers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/ternary_column_computers_test.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-ternary_column_computers_test.Tpo $(DEPDIR)/test_expression_vector-ternary_column_computers_test.Po
#	source='supersonic/expression/vector/ternary_column_computers_test.cc' object='test_expression_vector-ternary_column_computers_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-ternary_column_computers_test.o `test -f 'supersonic/expression/vector/ternary_column_computers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/ternary_column_computers_test.cc

test_expression_vector-ternary_column_computers_test.obj: supersonic/expression/vector/ternary_column_computers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-ternary_column_computers_test.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-ternary_column_computers_test.Tpo -c -o test_expression_vector-ternary_column_computers_test.obj `if test -f 'supersonic/expression/vector/ternary_column_computers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/ternary_column_computers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/ternary_column_computers_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-ternary_column_computers_test.Tpo $(DEPDIR)/test_expression_vector-ternary_column_computers_test.Po
#	source='supersonic/expression/vector/ternary_column_computers_test.cc' object='test_expression_vector-ternary_column_computers_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-ternary_column_computers_test.obj `if test -f 'supersonic/expression/vector/ternary_column_computers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/ternary_column_computers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/ternary_column_computers_test.cc'; fi`

test_expression_vector-unary_column_computers_test.o: supersonic/expression/vector/unary_column_computers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-unary_column_computers_test.o -MD -MP -MF $(DEPDIR)/test_expression_vector-unary_column_computers_test.Tpo -c -o test_expression_vector-unary_column_computers_test.o `test -f 'supersonic/expression/vector/unary_column_computers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/unary_column_computers_test.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-unary_column_computers_test.Tpo $(DEPDIR)/test_expression_vector-unary_column_computers_test.Po
#	source='supersonic/expression/vector/unary_column_computers_test.cc' object='test_expression_vector-unary_column_computers_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-unary_column_computers_test.o `test -f 'supersonic/expression/vector/unary_column_computers_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/unary_column_computers_test.cc

test_expression_vector-unary_column_computers_test.obj: supersonic/expression/vector/unary_column_computers_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-unary_column_computers_test.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-unary_column_computers_test.Tpo -c -o test_expression_vector-unary_column_computers_test.obj `if test -f 'supersonic/expression/vector/unary_column_computers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/unary_column_computers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/unary_column_computers_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-unary_column_computers_test.Tpo $(DEPDIR)/test_expression_vector-unary_column_computers_test.Po
#	source='supersonic/expression/vector/unary_column_computers_test.cc' object='test_expression_vector-unary_column_computers_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-unary_column_computers_test.obj `if test -f 'supersonic/expression/vector/unary_column_computers_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/unary_column_computers_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/unary_column_computers_test.cc'; fi`

test_expression_vector-vector_logic_test.o: supersonic/expression/vector/vector_logic_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-vector_logic_test.o -MD -MP -MF $(DEPDIR)/test_expression_vector-vector_logic_test.Tpo -c -o test_expression_vector-vector_logic_test.o `test -f 'supersonic/expression/vector/vector_logic_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/vector_logic_test.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-vector_logic_test.Tpo $(DEPDIR)/test_expression_vector-vector_logic_test.Po
#	source='supersonic/expression/vector/vector_logic_test.cc' object='test_expression_vector-vector_logic_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-vector_logic_test.o `test -f 'supersonic/expression/vector/vector_logic_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/vector_logic_test.cc

test_expression_vector-vector_logic_test.obj: supersonic/expression/vector/vector_logic_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-vector_logic_test.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-vector_logic_test.Tpo -c -o test_expression_vector-vector_logic_test.obj `if test -f 'supersonic/expression/vector/vector_logic_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/vector_logic_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/vector_logic_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-vector_logic_test.Tpo $(DEPDIR)/test_expression_vector-vector_logic_test.Po
#	source='supersonic/expression/vector/vector_logic_test.cc' object='test_expression_vector-vector_logic_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-vector_logic_test.obj `if test -f 'supersonic/expression/vector/vector_logic_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/vector_logic_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/vector_logic_test.cc'; fi`

test_expression_vector-vector_primitives_test.o: supersonic/expression/vector/vector_primitives_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-vector_primitives_test.o -MD -MP -MF $(DEPDIR)/test_expression_vector-vector_primitives_test.Tpo -c -o test_expression_vector-vector_primitives_test.o `test -f 'supersonic/expression/vector/vector_primitives_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/vector_primitives_test.cc
	$(am__mv) $(DEPDIR)/test_expression_vector-vector_primitives_test.Tpo $(DEPDIR)/test_expression_vector-vector_primitives_test.Po
#	source='supersonic/expression/vector/vector_primitives_test.cc' object='test_expression_vector-vector_primitives_test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-vector_primitives_test.o `test -f 'supersonic/expression/vector/vector_primitives_test.cc' || echo '$(srcdir)/'`supersonic/expression/vector/vector_primitives_test.cc

test_expression_vector-vector_primitives_test.obj: supersonic/expression/vector/vector_primitives_test.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_expression_vector-vector_primitives_test.obj -MD -MP -MF $(DEPDIR)/test_expression_vector-vector_primitives_test.Tpo -c -o test_expression_vector-vector_primitives_test.obj `if test -f 'supersonic/expression/vector/vector_primitives_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/vector_primitives_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/vector_primitives_test.cc'; fi`
	$(am__mv) $(DEPDIR)/test_expression_vector-vector_primitives_test.Tpo $(DEPDIR)/test_expression_vector-vector_primitives_test.Po
#	source='supersonic/expression/vector/vector_primitives_test.cc' object='test_expression_vector-vector_primitives_test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_expression_vector_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_expression_vector-vector_primitives_test.obj `if test -f 'supersonic/expression/vector/vector_primitives_test.cc'; then $(CYGPATH_W) 'supersonic/expression/vector/vector_primitives_test.cc'; else $(CYGPATH_W) '$(srcdir)/supersonic/expression/vector/vector_primitives_test.cc'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool config.lt
install-libbenchmark_laHEADERS: $(libbenchmark_la_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libbenchmark_ladir)" || $(MKDIR_P) "$(DESTDIR)$(libbenchmark_ladir)"
	@list='$(libbenchmark_la_HEADERS)'; test -n "$(libbenchmark_ladir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libbenchmark_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libbenchmark_ladir)" || exit $$?; \
	done

uninstall-libbenchmark_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libbenchmark_la_HEADERS)'; test -n "$(libbenchmark_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libbenchmark_ladir)'; $(am__uninstall_files_from_dir)
install-libtestutils_laHEADERS: $(libtestutils_la_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libtestutils_ladir)" || $(MKDIR_P) "$(DESTDIR)$(libtestutils_ladir)"
	@list='$(libtestutils_la_HEADERS)'; test -n "$(libtestutils_ladir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libtestutils_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libtestutils_ladir)" || exit $$?; \
	done

uninstall-libtestutils_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libtestutils_la_HEADERS)'; test -n "$(libtestutils_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libtestutils_ladir)'; $(am__uninstall_files_from_dir)
install-nobase_supersonic_includeHEADERS: $(nobase_supersonic_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(supersonic_includedir)" || $(MKDIR_P) "$(DESTDIR)$(supersonic_includedir)"
	@list='$(nobase_supersonic_include_HEADERS)'; test -n "$(supersonic_includedir)" || list=; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo "$(MKDIR_P) '$(DESTDIR)$(supersonic_includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(supersonic_includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(supersonic_includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(supersonic_includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_supersonic_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_supersonic_include_HEADERS)'; test -n "$(supersonic_includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(supersonic_includedir)'; $(am__uninstall_files_from_dir)

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS) config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libbenchmark_ladir)" "$(DESTDIR)$(libtestutils_ladir)" "$(DESTDIR)$(supersonic_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libbenchmark_laHEADERS \
	install-libtestutils_laHEADERS \
	install-nobase_supersonic_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES \
	uninstall-libbenchmark_laHEADERS \
	uninstall-libtestutils_laHEADERS \
	uninstall-nobase_supersonic_includeHEADERS

.MAKE: all check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	clean clean-checkPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	ctags dist dist-all dist-bzip2 dist-gzip dist-lzip dist-lzma \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libbenchmark_laHEADERS \
	install-libtestutils_laHEADERS install-man \
	install-nobase_supersonic_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES \
	uninstall-libbenchmark_laHEADERS \
	uninstall-libtestutils_laHEADERS \
	uninstall-nobase_supersonic_includeHEADERS


# Run libtool
libtool: $(LIBTOOL_DEPS)
	$(SHELL) ./config.status --recheck

supersonic/utils/exception/stack_trace.pb.h supersonic/utils/exception/stack_trace.pb.cc: supersonic/utils/exception/stack_trace.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

supersonic/expression/proto/operators.pb.h supersonic/expression/proto/operators.pb.cc: supersonic/expression/proto/operators.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

supersonic/cursor/proto/cursors.pb.h supersonic/cursor/proto/cursors.pb.cc: supersonic/cursor/proto/cursors.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

supersonic/proto/supersonic.pb.h supersonic/proto/supersonic.pb.cc: supersonic/proto/supersonic.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

supersonic/proto/specification.pb.h supersonic/proto/specification.pb.cc: supersonic/proto/specification.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

supersonic/utils/proto/types.pb.h supersonic/utils/proto/types.pb.cc: supersonic/utils/proto/types.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

supersonic/utils/proto/expressions.pb.h supersonic/utils/proto/expressions.pb.cc: supersonic/utils/proto/expressions.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

supersonic/benchmark/proto/benchmark.pb.h supersonic/benchmark/proto/benchmark.pb.cc: supersonic/benchmark/proto/benchmark.proto
	$(PROTOC) --proto_path=$(srcdir) --cpp_out=$(srcdir) $<

# Proto header dependencies
$(supersonic_S) $(sources_H): | $(protos_H)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
